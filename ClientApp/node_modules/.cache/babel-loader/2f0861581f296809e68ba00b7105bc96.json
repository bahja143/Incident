{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/report/Snapshot.jsx\";\nimport React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Snapshot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [{\n        label: \"Category\",\n        field: \"category\"\n      }, {\n        label: \"Incident Type\",\n        field: \"incidentType\"\n      }, {\n        label: \"Locatiobn\",\n        field: \"location\"\n      }, {\n        label: \"Shift\",\n        field: \"shift\"\n      }, {\n        label: \"Date\",\n        field: \"date\"\n      }, {\n        label: \"\",\n        field: \"edit\"\n      }],\n      services: [],\n      categories: [],\n      rooms: [],\n      filter: {\n        name: \"All\",\n        date: \"\"\n      },\n      show: false,\n      items: [],\n      allItems: [],\n      snapshots: [],\n      snapshot: {},\n      data: []\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      tableHeaders,\n      snapshots,\n      show,\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Snapshot Report\", /*#__PURE__*/_jsxDEV(ReactToPrint, {\n              trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn d-print-none float-right\",\n                children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                  className: \"fas fa-print\",\n                  name: \"print\",\n                  style: {\n                    fontSize: 25\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this),\n              content: () => {\n                return this.componentRef;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n            hover: true,\n            entriesOptions: [10, 25, 50, 100],\n            entries: 10,\n            pagesAmount: 10,\n            data: {\n              columns: tableHeaders,\n              rows: snapshots.map(snapshot => {\n                snapshot.edit = /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"ml-4\",\n                    onClick: () => this.handleShowModal(snapshot),\n                    children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                      className: \"fas fa-eye\",\n                      style: {\n                        fontSize: 17\n                      },\n                      name: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false);\n                snapshot.date = new Date(snapshot.date).toDateString();\n                return snapshot;\n              })\n            },\n            pagingTop: true,\n            searchBottom: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  handleShowModal(snapshot) {\n    const {\n      snapshotCheck\n    } = this.state;\n    const data = [];\n\n    for (let f in snapshot) {\n      for (let fk of snapshotCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = snapshot[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = snapshot[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({\n      snapshot,\n      show: true,\n      data\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/snapshot\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        snapshots: data\n      });\n    });\n  }\n\n}\n\nexport default Snapshot;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/report/Snapshot.jsx"],"names":["React","Component","Card","Fontawesome","MDBDataTableV5","Config","Services","ReactToPrint","NewModal","Snapshot","state","tableHeaders","label","field","services","categories","rooms","filter","name","date","show","items","allItems","snapshots","snapshot","data","handleClose","setState","render","fontSize","componentRef","columns","rows","map","edit","handleShowModal","Date","toDateString","snapshotCheck","f","fk","value","toLocaleLowerCase","string","input","push","isTrue","componentDidMount","loading","auth","Authorization","localStorage","get","apiUrl","headers","then"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\n\nclass Snapshot extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Category\", field: \"category\" },\n      { label: \"Incident Type\", field: \"incidentType\" },\n      { label: \"Locatiobn\", field: \"location\" },\n      { label: \"Shift\", field: \"shift\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    snapshots: [],\n    snapshot: {},\n    data: [],\n  };\n\n  render() {\n    const { tableHeaders, snapshots, show, data } = this.state;\n\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Snapshot Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={snapshots.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: snapshots.map((snapshot) => {\n                  snapshot.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(snapshot)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  snapshot.date = new Date(snapshot.date).toDateString();\n\n                  return snapshot;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(snapshot) {\n    const { snapshotCheck } = this.state;\n    const data = [];\n\n    for (let f in snapshot) {\n      for (let fk of snapshotCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = snapshot[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = snapshot[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({ snapshot, show: true, data });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/snapshot\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          snapshots: data,\n        });\n      }\n    );\n  }\n}\n\nexport default Snapshot;\n"]},"metadata":{},"sourceType":"module"}