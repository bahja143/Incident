{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Rental/Report.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport PrinTible from \"../../Utility/printible\";\nimport ReactToPrint from \"react-to-print\";\nimport Select from \"react-select\";\nimport DateTime from \"react-datetime\";\nimport Filter from \"../../Utility/rentalsFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Report extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [{\n        label: \"Customer\",\n        field: \"name\"\n      }, {\n        label: \"Tellphone\",\n        field: \"tellphone\"\n      }, {\n        label: \"Room No\",\n        field: \"roomNumber\"\n      }, {\n        label: \"Amount\",\n        field: \"amount\"\n      }, {\n        label: \"Start Date\",\n        field: \"startDate\"\n      }, {\n        label: \"Last Date\",\n        field: \"lastDate\"\n      }, {\n        label: \"\",\n        field: \"edit\"\n      }],\n      rentals: [],\n      customers: [],\n      rooms: [],\n      filter: {\n        name: \"All\",\n        roomNumber: \"All\",\n        tellphone: \"\",\n        startDate: \"\"\n      }\n    };\n\n    this.handleOnChangeFilter = ({\n      currentTarget: input\n    }) => {\n      const {\n        filter\n      } = this.state;\n      filter[input.name] = input.value;\n      this.setState({\n        filter\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleViewModal = death => {\n      this.setState({\n        death,\n        show: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      tableHeaders,\n      rentals: allrentals,\n      customers,\n      rooms,\n      filter\n    } = this.state;\n    const rentals = Filter(allrentals.map(r => {\n      r.name = r.customer.name;\n      r.tellphone = r.customer.tellphone;\n      r.roomNumber = r.room.roomNumber;\n      return r;\n    }), filter);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Rental Report\", /*#__PURE__*/_jsxDEV(ReactToPrint, {\n              trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn d-print-none float-right\",\n                children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                  className: \"fas fa-print\",\n                  name: \"print\",\n                  style: {\n                    fontSize: 25\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this),\n              content: () => {\n                return this.componentRef;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-none\",\n              children: /*#__PURE__*/_jsxDEV(PrinTible, {\n                data: rentals.map(r => ({\n                  id: r.id,\n                  name: r.customer.name,\n                  tellphone: r.customer.tellphone,\n                  roomNumber: r.room.roomNumber,\n                  amount: \"$\" + r.amount,\n                  startDate: new Date(r.startDate).toDateString(),\n                  lastDate: r.endDate ? new Date(r.endDate).toDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge badge-success\",\n                    children: \"Current\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this)\n                })),\n                theaders: tableHeaders.filter(t => t.label !== \"\").map(h => h.label),\n                title: \"Rental Report\",\n                ref: el => this.componentRef = el\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: customers.filter(c => c.name === filter.name).map(c => ({\n                  label: c.name,\n                  value: c.id\n                })),\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"name\",\n                    value: e.label\n                  }\n                }),\n                options: customers.map(c => ({\n                  label: c.name,\n                  value: c.id\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: rooms.filter(c => c.roomNumber === filter.roomNumber).map(c => ({\n                  label: c.roomNumber,\n                  value: c.id\n                })),\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"roomNumber\",\n                    value: e.label\n                  }\n                }),\n                options: rooms.map(c => ({\n                  label: c.roomNumber,\n                  value: c.id\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Tellphone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.handleOnChangeFilter,\n                value: filter.tellphone,\n                name: \"tellphone\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DateTime, {\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"startDate\",\n                    value: e._d\n                  }\n                }),\n                closeOnSelect: true,\n                timeFormat: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n            hover: true,\n            entriesOptions: [10, 25, 50, 100],\n            entries: 10,\n            pagesAmount: 10,\n            data: {\n              columns: tableHeaders,\n              rows: rentals.map(ren => {\n                ren.name = ren.customer.name;\n                ren.amount = \"$\" + ren.amount;\n                ren.tellphone = ren.customer.tellphone;\n                ren.roomNumber = ren.room.roomNumber;\n                ren.startDate = new Date(ren.startDate).toDateString();\n                ren.lastDate = ren.endDate ? new Date(ren.endDate).toDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge badge-success\",\n                  children: \"Current\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this);\n                return ren;\n              })\n            },\n            pagingTop: true,\n            searchTop: false,\n            searchBottom: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/rentals\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rentals: data\n      });\n    });\n    Services.get(Config.apiUrl + \"/customers\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        customers: [{\n          id: \"All\",\n          name: \"All\"\n        }, ...data]\n      });\n    });\n    Services.get(Config.apiUrl + \"/rooms\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rooms: [{\n          id: \"All\",\n          roomNumber: \"All\"\n        }, ...data]\n      });\n    });\n  }\n\n}\n\nexport default Report;","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Rental/Report.jsx"],"names":["React","Component","Card","Row","Col","FormLabel","Fontawesome","MDBDataTableV5","Config","Services","PrinTible","ReactToPrint","Select","DateTime","Filter","Report","state","tableHeaders","label","field","rentals","customers","rooms","filter","name","roomNumber","tellphone","startDate","handleOnChangeFilter","currentTarget","input","value","setState","handleCloseModal","show","handleViewModal","death","render","allrentals","map","r","customer","room","fontSize","componentRef","id","amount","Date","toDateString","lastDate","endDate","t","h","el","c","e","_d","columns","rows","ren","componentDidMount","loading","auth","Authorization","localStorage","get","apiUrl","headers","then","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport PrinTible from \"../../Utility/printible\";\nimport ReactToPrint from \"react-to-print\";\nimport Select from \"react-select\";\nimport DateTime from \"react-datetime\";\nimport Filter from \"../../Utility/rentalsFilter\";\n\nclass Report extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Customer\", field: \"name\" },\n      { label: \"Tellphone\", field: \"tellphone\" },\n      { label: \"Room No\", field: \"roomNumber\" },\n      { label: \"Amount\", field: \"amount\" },\n      { label: \"Start Date\", field: \"startDate\" },\n      { label: \"Last Date\", field: \"lastDate\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    rentals: [],\n    customers: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      roomNumber: \"All\",\n      tellphone: \"\",\n      startDate: \"\",\n    },\n  };\n\n  render() {\n    const {\n      tableHeaders,\n      rentals: allrentals,\n      customers,\n      rooms,\n      filter,\n    } = this.state;\n\n    const rentals = Filter(\n      allrentals.map((r) => {\n        r.name = r.customer.name;\n        r.tellphone = r.customer.tellphone;\n        r.roomNumber = r.room.roomNumber;\n\n        return r;\n      }),\n      filter\n    );\n\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Rental Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                <PrinTible\n                  data={rentals.map((r) => ({\n                    id: r.id,\n                    name: r.customer.name,\n                    tellphone: r.customer.tellphone,\n                    roomNumber: r.room.roomNumber,\n                    amount: \"$\" + r.amount,\n                    startDate: new Date(r.startDate).toDateString(),\n                    lastDate: r.endDate ? (\n                      new Date(r.endDate).toDateString()\n                    ) : (\n                      <span className=\"badge badge-success\">Current</span>\n                    ),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                />\n              </div>\n            </Card.Title>\n            <Row>\n              <Col>\n                <FormLabel>Customer</FormLabel>\n                <Select\n                  value={customers\n                    .filter((c) => c.name === filter.name)\n                    .map((c) => ({ label: c.name, value: c.id }))}\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"name\", value: e.label },\n                    })\n                  }\n                  options={customers.map((c) => ({\n                    label: c.name,\n                    value: c.id,\n                  }))}\n                />\n              </Col>\n              <Col>\n                <FormLabel>Room</FormLabel>\n                <Select\n                  value={rooms\n                    .filter((c) => c.roomNumber === filter.roomNumber)\n                    .map((c) => ({ label: c.roomNumber, value: c.id }))}\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"roomNumber\", value: e.label },\n                    })\n                  }\n                  options={rooms.map((c) => ({\n                    label: c.roomNumber,\n                    value: c.id,\n                  }))}\n                />\n              </Col>\n              <Col>\n                <FormLabel>Tellphone</FormLabel>\n                <input\n                  onChange={this.handleOnChangeFilter}\n                  value={filter.tellphone}\n                  name=\"tellphone\"\n                  className=\"form-control\"\n                />\n              </Col>\n              <Col>\n                <FormLabel>Start Date</FormLabel>\n                <DateTime\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"startDate\", value: e._d },\n                    })\n                  }\n                  closeOnSelect={true}\n                  timeFormat={false}\n                />\n              </Col>\n            </Row>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: rentals.map((ren) => {\n                  ren.name = ren.customer.name;\n                  ren.amount = \"$\" + ren.amount;\n                  ren.tellphone = ren.customer.tellphone;\n                  ren.roomNumber = ren.room.roomNumber;\n                  ren.startDate = new Date(ren.startDate).toDateString();\n                  ren.lastDate = ren.endDate ? (\n                    new Date(ren.endDate).toDateString()\n                  ) : (\n                    <span className=\"badge badge-success\">Current</span>\n                  );\n                  return ren;\n                }),\n              }}\n              pagingTop\n              searchTop={false}\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleOnChangeFilter = ({ currentTarget: input }) => {\n    const { filter } = this.state;\n    filter[input.name] = input.value;\n\n    this.setState({ filter });\n  };\n  handleCloseModal = () => {\n    this.setState({ show: false });\n  };\n  handleViewModal = (death) => {\n    this.setState({ death, show: true });\n  };\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/rentals\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          rentals: data,\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/customers\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          customers: [{ id: \"All\", name: \"All\" }, ...data],\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/rooms\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          rooms: [{ id: \"All\", roomNumber: \"All\" }, ...data],\n        });\n      }\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}