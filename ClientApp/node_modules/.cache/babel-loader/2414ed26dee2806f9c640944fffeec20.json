{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/auth/ChangePassword.js\";\nimport React from \"react\";\nimport JwtDecode from \"jwt-decode\";\nimport Joi from \"joi-browser\";\nimport Service from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport Config from \"../../config/config.json\";\nimport \"../../assets/scss/style.scss\";\nimport Breadcrumb from \"../../layouts/AdminLayout/Breadcrumb\";\nimport back4 from \"../../assets/images/bg-images/bg4.jpg\";\nimport { Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChangePassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      changePassword: {\n        currentPassword: \"\",\n        newPassword: \"\",\n        reType: \"\"\n      },\n      error: {},\n      user: {},\n      loading: false\n    };\n    this.schema = {\n      newPassword: Joi.string().required().label(\"New Password\"),\n      reType: Joi.string().required().label(\"Re-Type\"),\n      currentPassword: Joi.string().required().label(\"Current Password\")\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        changePassword,\n        user\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      Service.get(Config.apiUrl + \"/users/changePassword/\" + user.id + \"/\" + changePassword.newPassword, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        this.props.history.push(\"/\");\n        toast.success(\"Successful changed password\");\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.handleOnValidateProperty = input => {\n      const obj = {\n        [input.name]: input.value\n      };\n      const schema = {\n        [input.name]: this.schema[input.name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      if (error === null) return null;\n      return error.details[0].message;\n    };\n\n    this.handleValidate = () => {\n      const {\n        changePassword,\n        user\n      } = this.state;\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(changePassword, this.schema, options);\n      const errors = {};\n\n      if (error === null) {\n        if (changePassword.currentPassword !== user.password) {\n          errors[\"currentPassword\"] = \"Invalid password\";\n          return errors;\n        } else if (changePassword.newPassword !== changePassword.reType) {\n          errors[\"reType\"] = \"New password and Re-type password must match\";\n          return errors;\n        } else {\n          return null;\n        }\n      }\n\n      for (let e of error.details) errors[e.path[0]] = e.message;\n\n      return errors;\n    };\n\n    this.handleOnChange = ({\n      currentTarget: input\n    }) => {\n      const {\n        changePassword,\n        user,\n        error\n      } = this.state;\n      changePassword[input.name] = input.value;\n      const errorMessage = this.handleOnValidateProperty(input);\n      if (errorMessage) error[input.name] = errorMessage;else delete error[input.name];\n\n      if (input.name === \"newPassword\") {\n        if (changePassword.currentPassword !== user.password) error[\"currentPassword\"] = \"Invalid password\";else delete error[\"currentPassword\"];\n      }\n\n      if (input.name === \"reType\" || input.name === \"newPassword\") {\n        if (changePassword.newPassword !== changePassword.reType) {\n          error[\"reType\"] = \"New password and Re-type password must match\";\n        } else delete error[\"reType\"];\n      }\n\n      this.setState({\n        changePassword,\n        error\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const token = localStorage[\"token\"];\n      const user = JwtDecode(token);\n      user.id = parseInt(user.id);\n      const auth = {\n        Authorization: `bearer ${token}`\n      };\n      Service.get(Config.apiUrl + \"/users/\" + user.id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          user: data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    const {\n      error,\n      changePassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-wrapper aut-bg-img\",\n        style: {\n          backgroundImage: `url(${back4})`,\n          backgroundSize: \"cover\",\n          backgroundAttachment: \"fixed\",\n          backgroundPosition: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-4\",\n                children: \"Change Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: error[\"currentPassword\"] || error[\"newPassword\"] || error[\"reType\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: changePassword.currentPassword,\n                    onChange: this.handleOnChange,\n                    type: \"password\",\n                    className: \"form-control\",\n                    placeholder: \"Current Password\",\n                    name: \"currentPassword\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: changePassword.newPassword,\n                    onChange: this.handleOnChange,\n                    type: \"password\",\n                    className: \"form-control\",\n                    placeholder: \"New Password\",\n                    name: \"newPassword\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: changePassword.reType,\n                    onChange: this.handleOnChange,\n                    type: \"password\",\n                    className: \"form-control\",\n                    placeholder: \"Re-Type New Password\",\n                    name: \"reType\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: this.handleValidate(),\n                  className: \"btn btn-primary shadow-2 mb-4\",\n                  children: \"Change Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/auth/ChangePassword.js"],"names":["React","JwtDecode","Joi","Service","toast","Config","Breadcrumb","back4","Alert","ChangePassword","Component","state","changePassword","currentPassword","newPassword","reType","error","user","loading","schema","string","required","label","handleSubmit","e","preventDefault","setState","auth","Authorization","localStorage","get","apiUrl","id","headers","then","data","props","history","push","success","catch","console","log","handleOnValidateProperty","input","obj","name","value","validate","details","message","handleValidate","options","abortEarly","errors","password","path","handleOnChange","currentTarget","errorMessage","componentDidMount","token","parseInt","render","backgroundImage","backgroundSize","backgroundAttachment","backgroundPosition"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport JwtDecode from \"jwt-decode\";\nimport Joi from \"joi-browser\";\nimport Service from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport Config from \"../../config/config.json\";\n\nimport \"../../assets/scss/style.scss\";\nimport Breadcrumb from \"../../layouts/AdminLayout/Breadcrumb\";\nimport back4 from \"../../assets/images/bg-images/bg4.jpg\";\nimport { Alert } from \"react-bootstrap\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    changePassword: { currentPassword: \"\", newPassword: \"\", reType: \"\" },\n    error: {},\n    user: {},\n    loading: false,\n  };\n\n  schema = {\n    newPassword: Joi.string().required().label(\"New Password\"),\n    reType: Joi.string().required().label(\"Re-Type\"),\n    currentPassword: Joi.string().required().label(\"Current Password\"),\n  };\n\n  render() {\n    const { error, changePassword } = this.state;\n\n    return (\n      <>\n        <Breadcrumb />\n        <div\n          className=\"auth-wrapper aut-bg-img\"\n          style={{\n            backgroundImage: `url(${back4})`,\n            backgroundSize: \"cover\",\n            backgroundAttachment: \"fixed\",\n            backgroundPosition: \"center\",\n          }}\n        >\n          <div className=\"auth-content\">\n            <div className=\"card\">\n              <div className=\"card-body text-center\">\n                <h3 className=\"mb-4\">Change Password</h3>\n                {\n                  <Alert variant=\"danger\">\n                    {error[\"currentPassword\"] ||\n                      error[\"newPassword\"] ||\n                      error[\"reType\"]}\n                  </Alert>\n                }\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      value={changePassword.currentPassword}\n                      onChange={this.handleOnChange}\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Current Password\"\n                      name=\"currentPassword\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      value={changePassword.newPassword}\n                      onChange={this.handleOnChange}\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"New Password\"\n                      name=\"newPassword\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      value={changePassword.reType}\n                      onChange={this.handleOnChange}\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Re-Type New Password\"\n                      name=\"reType\"\n                    />\n                  </div>\n                  <button\n                    disabled={this.handleValidate()}\n                    className=\"btn btn-primary shadow-2 mb-4\"\n                  >\n                    Change Password\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { changePassword, user } = this.state;\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Service.get(\n      Config.apiUrl +\n        \"/users/changePassword/\" +\n        user.id +\n        \"/\" +\n        changePassword.newPassword,\n      { headers: auth }\n    )\n      .then(({ data }) => {\n        this.props.history.push(\"/\");\n        toast.success(\"Successful changed password\");\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n\n        this.setState({ loading: false });\n      });\n  };\n  handleOnValidateProperty = (input) => {\n    const obj = { [input.name]: input.value };\n    const schema = { [input.name]: this.schema[input.name] };\n    const { error } = Joi.validate(obj, schema);\n\n    if (error === null) return null;\n\n    return error.details[0].message;\n  };\n  handleValidate = () => {\n    const { changePassword, user } = this.state;\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(changePassword, this.schema, options);\n    const errors = {};\n\n    if (error === null) {\n      if (changePassword.currentPassword !== user.password) {\n        errors[\"currentPassword\"] = \"Invalid password\";\n\n        return errors;\n      } else if (changePassword.newPassword !== changePassword.reType) {\n        errors[\"reType\"] = \"New password and Re-type password must match\";\n\n        return errors;\n      } else {\n        return null;\n      }\n    }\n\n    for (let e of error.details) errors[e.path[0]] = e.message;\n\n    return errors;\n  };\n  handleOnChange = ({ currentTarget: input }) => {\n    const { changePassword, user, error } = this.state;\n    changePassword[input.name] = input.value;\n    const errorMessage = this.handleOnValidateProperty(input);\n\n    if (errorMessage) error[input.name] = errorMessage;\n    else delete error[input.name];\n\n    if (input.name === \"newPassword\") {\n      if (changePassword.currentPassword !== user.password)\n        error[\"currentPassword\"] = \"Invalid password\";\n      else delete error[\"currentPassword\"];\n    }\n\n    if (input.name === \"reType\" || input.name === \"newPassword\") {\n      if (changePassword.newPassword !== changePassword.reType) {\n        error[\"reType\"] = \"New password and Re-type password must match\";\n      } else delete error[\"reType\"];\n    }\n\n    this.setState({ changePassword, error });\n  };\n  componentDidMount = async () => {\n    const token = localStorage[\"token\"];\n    const user = JwtDecode(token);\n    user.id = parseInt(user.id);\n    const auth = { Authorization: `bearer ${token}` };\n\n    Service.get(Config.apiUrl + \"/users/\" + user.id, { headers: auth })\n      .then(({ data }) => {\n        this.setState({ user: data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}