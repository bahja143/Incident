{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/User/Users.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Services from \"../../services/HttpServices\";\nimport Config from \"../../config/config.json\";\nimport UserModal from \"././UserModal\";\nimport JwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        id: 0,\n        name: \"\",\n        username: \"\",\n        role: \"\",\n        password: \"\",\n        status: true\n      },\n      users: [],\n      errors: {},\n      show: false,\n      tableHeaders: [{\n        label: \"Name\",\n        field: \"name\"\n      }, {\n        label: \"Username\",\n        field: \"username\"\n      }, {\n        label: \"Role\",\n        field: \"role\"\n      }, {\n        label: \"\",\n        field: \"edit\"\n      }]\n    };\n    this.schema = {\n      id: Joi.any(),\n      name: Joi.string().required().label(\"Name\"),\n      username: Joi.string().required().label(\"Username\"),\n      role: Joi.string().required().label(\"Role\"),\n      status: Joi.any(),\n      password: Joi.string().required().label(\"Password\")\n    };\n\n    this.handleStatus = id => {\n      const {\n        users\n      } = this.state;\n      this.setState({\n        loader: true\n      });\n      const token = localStorage[\"token\"];\n      const auth = {\n        Authorization: `bearer ${token}`\n      };\n      Services.get(Config.apiUrl + \"/userStatus/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          users: users.map(u => {\n            if (u.id === id) u.status = data.status;\n            return u;\n          }),\n          loader: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loader: false\n        });\n        toast.error(\"Something went wrong\");\n      });\n    };\n\n    this.handleUpdate = row => {\n      const user = { ...row\n      };\n      delete user.edit;\n      this.setState({\n        user,\n        show: true\n      });\n    };\n\n    this.handlePapulate = user => {\n      const {\n        users\n      } = this.state;\n      this.setState({\n        users: [user, ...users.filter(f => f.id !== user.id)]\n      });\n    };\n\n    this.validateOnProperty = input => {\n      const obj = {\n        [input.name]: input.value\n      };\n      const schema = {\n        [input.name]: this.schema[input.name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      if (!error) return null;\n      return error.details[0].message;\n    };\n\n    this.validate = () => {\n      const {\n        user\n      } = this.state;\n      const errors = {};\n      const {\n        error\n      } = Joi.validate(user, this.schema, {\n        abortEarly: false\n      });\n      if (!error) return null;\n\n      for (let e of error.details) errors[e.path[0]] = e.message;\n\n      return errors;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        user\n      } = this.state;\n      const errors = this.validate();\n      const token = localStorage[\"token\"];\n      const auth = {\n        Authorization: `bearer ${token}`\n      };\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.handleClose();\n      this.setState({\n        loader: true\n      });\n\n      if (user.id === 0) {\n        Services.post(Config.apiUrl + \"/users\", user, {\n          headers: auth\n        }).then(({\n          data\n        }) => {\n          this.setState({\n            loader: false\n          });\n          toast.success(\"Successfull Registred\");\n          this.handlePapulate(data);\n          this.setState({\n            user: {\n              id: 0,\n              name: \"\",\n              username: \"\",\n              role: \"\",\n              password: \"\",\n              status: true\n            }\n          });\n        }).catch(error => {\n          this.setState({\n            loader: false\n          });\n          console.log(error);\n          this.handleShow();\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/users/\" + user.id, user, {\n          headers: auth\n        }).then(({\n          data\n        }) => {\n          this.setState({\n            loader: false\n          });\n          toast.info(\"Successfull Update\");\n          this.handlePapulate(data);\n          this.setState({\n            user: {\n              id: 0,\n              name: \"\",\n              username: \"\",\n              role: \"\",\n              password: \"\",\n              status: true\n            }\n          });\n        }).catch(error => {\n          this.setState({\n            loader: false\n          });\n          console.log(error);\n          this.handleShow();\n          toast.error(\"Something went wrong\");\n        });\n      }\n    };\n\n    this.handleOnChange = ({\n      currentTarget: input\n    }) => {\n      const {\n        user,\n        errors\n      } = this.state;\n      user[input.name] = input.value;\n      const errorMessage = this.validateOnProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      this.setState({\n        user\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      users,\n      tableHeaders,\n      show,\n      user,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserModal, {\n        show: show,\n        onClose: this.handleClose,\n        onChange: this.handleOnChange,\n        user: user,\n        onSubmit: this.handleSubmit,\n        errors: errors,\n        validate: this.validate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"float-right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleShow,\n              children: [/*#__PURE__*/_jsxDEV(Fontawesome, {\n                name: \"plus-circle\",\n                className: \"fas fa-plus-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), \" \", \"New User\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n            hover: true,\n            entriesOptions: [10, 25, 50, 100],\n            entries: 10,\n            pagesAmount: 10,\n            data: {\n              columns: tableHeaders,\n              rows: users.map(user => {\n                user.edit = user.status ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.handleStatus(user.id),\n                    className: \"btn btn-link\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-link\",\n                    onClick: () => this.handleUpdate(user),\n                    children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                      className: \"fas fa-edit text-primary\",\n                      style: {\n                        fontSize: 17\n                      },\n                      name: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.handleStatus(user.id),\n                    className: \"btn btn-link\",\n                    children: \"Not active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-link\",\n                    onClick: () => this.handleUpdate(user),\n                    children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                      className: \"fas fa-edit text-primary\",\n                      style: {\n                        fontSize: 17\n                      },\n                      name: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this);\n                return user;\n              })\n            },\n            pagingTop: true,\n            searchTop: true,\n            searchBottom: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loader: true\n    });\n    const token = localStorage[\"token\"];\n    const user = token ? JwtDecode(token) : \"\";\n    const auth = {\n      Authorization: `bearer ${token}`\n    };\n    Services.get(Config.apiUrl + \"/users\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        users: data.filter(u => u.id != user.id),\n        loader: false\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        loader: false\n      });\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/User/Users.jsx"],"names":["React","Component","Card","Button","Row","MDBDataTableV5","Fontawesome","Joi","toast","Services","Config","UserModal","JwtDecode","Users","state","user","id","name","username","role","password","status","users","errors","show","tableHeaders","label","field","schema","any","string","required","handleStatus","setState","loader","token","localStorage","auth","Authorization","get","apiUrl","headers","then","data","map","u","catch","error","console","log","handleUpdate","row","edit","handlePapulate","filter","f","validateOnProperty","input","obj","value","validate","details","message","abortEarly","e","path","handleSubmit","preventDefault","handleClose","post","success","handleShow","response","put","info","handleOnChange","currentTarget","errorMessage","render","columns","rows","fontSize","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Services from \"../../services/HttpServices\";\nimport Config from \"../../config/config.json\";\nimport UserModal from \"././UserModal\";\nimport JwtDecode from \"jwt-decode\";\n\nclass Users extends Component {\n  state = {\n    user: {\n      id: 0,\n      name: \"\",\n      username: \"\",\n      role: \"\",\n      password: \"\",\n      status: true,\n    },\n    users: [],\n    errors: {},\n    show: false,\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Username\", field: \"username\" },\n      { label: \"Role\", field: \"role\" },\n      { label: \"\", field: \"edit\" },\n    ],\n  };\n\n  schema = {\n    id: Joi.any(),\n    name: Joi.string().required().label(\"Name\"),\n    username: Joi.string().required().label(\"Username\"),\n    role: Joi.string().required().label(\"Role\"),\n    status: Joi.any(),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  render() {\n    const { users, tableHeaders, show, user, errors } = this.state;\n\n    return (\n      <>\n        <UserModal\n          show={show}\n          onClose={this.handleClose}\n          onChange={this.handleOnChange}\n          user={user}\n          onSubmit={this.handleSubmit}\n          errors={errors}\n          validate={this.validate}\n        />\n        <Card>\n          <Card.Header>\n            <Row className=\"float-right\">\n              <Button onClick={this.handleShow}>\n                <Fontawesome\n                  name=\"plus-circle\"\n                  className=\"fas fa-plus-circle\"\n                />{\" \"}\n                New User\n              </Button>\n            </Row>\n            <Card.Title>Users</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: users.map((user) => {\n                  user.edit = user.status ? (\n                    <React.Fragment>\n                      <button\n                        onClick={() => this.handleStatus(user.id)}\n                        className=\"btn btn-link\"\n                      >\n                        Active\n                      </button>\n                      <button\n                        className=\"btn btn-link\"\n                        onClick={() => this.handleUpdate(user)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-edit text-primary\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </button>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <button\n                        onClick={() => this.handleStatus(user.id)}\n                        className=\"btn btn-link\"\n                      >\n                        Not active\n                      </button>\n                      <button\n                        className=\"btn btn-link\"\n                        onClick={() => this.handleUpdate(user)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-edit text-primary\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </button>\n                    </React.Fragment>\n                  );\n\n                  return user;\n                }),\n              }}\n              pagingTop\n              searchTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleStatus = (id) => {\n    const { users } = this.state;\n    this.setState({ loader: true });\n    const token = localStorage[\"token\"];\n    const auth = { Authorization: `bearer ${token}` };\n\n    Services.get(Config.apiUrl + \"/userStatus/\" + id, { headers: auth })\n      .then(({ data }) => {\n        this.setState({\n          users: users.map((u) => {\n            if (u.id === id) u.status = data.status;\n            return u;\n          }),\n          loader: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        this.setState({ loader: false });\n        toast.error(\"Something went wrong\");\n      });\n  };\n  handleUpdate = (row) => {\n    const user = { ...row };\n    delete user.edit;\n\n    this.setState({ user, show: true });\n  };\n  handlePapulate = (user) => {\n    const { users } = this.state;\n\n    this.setState({\n      users: [user, ...users.filter((f) => f.id !== user.id)],\n    });\n  };\n  validateOnProperty = (input) => {\n    const obj = { [input.name]: input.value };\n    const schema = { [input.name]: this.schema[input.name] };\n    const { error } = Joi.validate(obj, schema);\n\n    if (!error) return null;\n\n    return error.details[0].message;\n  };\n  validate = () => {\n    const { user } = this.state;\n    const errors = {};\n    const { error } = Joi.validate(user, this.schema, { abortEarly: false });\n\n    if (!error) return null;\n\n    for (let e of error.details) errors[e.path[0]] = e.message;\n\n    return errors;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { user } = this.state;\n    const errors = this.validate();\n    const token = localStorage[\"token\"];\n    const auth = { Authorization: `bearer ${token}` };\n\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n\n    this.handleClose();\n    this.setState({ loader: true });\n\n    if (user.id === 0) {\n      Services.post(Config.apiUrl + \"/users\", user, { headers: auth })\n        .then(({ data }) => {\n          this.setState({ loader: false });\n          toast.success(\"Successfull Registred\");\n          this.handlePapulate(data);\n\n          this.setState({\n            user: {\n              id: 0,\n              name: \"\",\n              username: \"\",\n              role: \"\",\n              password: \"\",\n              status: true,\n            },\n          });\n        })\n        .catch((error) => {\n          this.setState({ loader: false });\n          console.log(error);\n          this.handleShow();\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/users/\" + user.id, user, { headers: auth })\n        .then(({ data }) => {\n          this.setState({ loader: false });\n          toast.info(\"Successfull Update\");\n          this.handlePapulate(data);\n\n          this.setState({\n            user: {\n              id: 0,\n              name: \"\",\n              username: \"\",\n              role: \"\",\n              password: \"\",\n              status: true,\n            },\n          });\n        })\n        .catch((error) => {\n          this.setState({ loader: false });\n          console.log(error);\n          this.handleShow();\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n  };\n  handleOnChange = ({ currentTarget: input }) => {\n    const { user, errors } = this.state;\n    user[input.name] = input.value;\n    const errorMessage = this.validateOnProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    this.setState({ user });\n  };\n  componentDidMount() {\n    this.setState({ loader: true });\n    const token = localStorage[\"token\"];\n    const user = token ? JwtDecode(token) : \"\";\n    const auth = { Authorization: `bearer ${token}` };\n\n    Services.get(Config.apiUrl + \"/users\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({\n          users: data.filter((u) => u.id != user.id),\n          loader: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ loader: false });\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}