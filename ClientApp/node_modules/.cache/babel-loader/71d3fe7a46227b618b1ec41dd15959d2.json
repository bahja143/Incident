{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/Receipt/Report.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport PrinTible from \"../../Utility/printible\";\nimport ReactToPrint from \"react-to-print\";\nimport Select from \"react-select\";\nimport DateTime from \"react-datetime\";\nimport Filter from \"../../Utility/receiptsFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Report extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [{\n        label: \"Name\",\n        field: \"name\"\n      }, {\n        label: \"Tellphone\",\n        field: \"tellphone\"\n      }, {\n        label: \"Room No\",\n        field: \"roomNumber\"\n      }, {\n        label: \"Type of payment\",\n        field: \"type\"\n      }, {\n        label: \"Amount\",\n        field: \"amount\"\n      }, {\n        label: \"Date\",\n        field: \"date\"\n      }, {\n        label: \"Description\",\n        field: \"description\"\n      }],\n      receipts: [],\n      customers: [],\n      rooms: [],\n      filter: {\n        name: \"All\",\n        roomNumber: \"All\",\n        tellphone: \"\",\n        date: \"\"\n      }\n    };\n\n    this.handleSummary = text => {\n      const max = 50;\n      const letters = text.split(\"\");\n\n      if (letters.length > max) {\n        return letters.slice(0, max).join(\"\") + \"...\";\n      } else {\n        return letters.join(\"\");\n      }\n    };\n\n    this.handleOnChangeFilter = ({\n      currentTarget: input\n    }) => {\n      const {\n        filter\n      } = this.state;\n      filter[input.name] = input.value;\n      this.setState({\n        filter\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleViewModal = death => {\n      this.setState({\n        death,\n        show: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      tableHeaders,\n      receipts: allreceipts,\n      customers,\n      rooms,\n      filter\n    } = this.state;\n    const receipts = Filter(allreceipts, filter);\n    console.log(receipts);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Rental Report\", /*#__PURE__*/_jsxDEV(ReactToPrint, {\n              trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn d-print-none float-right\",\n                children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                  className: \"fas fa-print\",\n                  name: \"print\",\n                  style: {\n                    fontSize: 25\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this),\n              content: () => {\n                return this.componentRef;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-none\",\n              children: /*#__PURE__*/_jsxDEV(PrinTible, {\n                data: receipts.map(r => ({\n                  id: r.id,\n                  name: r.name,\n                  tellphone: r.tellphone,\n                  roomNumber: r.roomNumber,\n                  amount: \"$\" + r.amount,\n                  date: new Date(r.date).toDateString(),\n                  lastDate: r.endDate ? new Date(r.endDate).toDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge badge-success\",\n                    children: \"Current\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this)\n                })),\n                theaders: tableHeaders.filter(t => t.label !== \"\").map(h => h.label),\n                title: \"Rental Report\",\n                ref: el => this.componentRef = el\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: customers.filter(c => c.name === filter.name).map(c => ({\n                  label: c.name,\n                  value: c.id\n                })),\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"name\",\n                    value: e.label\n                  }\n                }),\n                options: customers.map(c => ({\n                  label: c.name,\n                  value: c.id\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: rooms.filter(c => c.roomNumber === filter.roomNumber).map(c => ({\n                  label: c.roomNumber,\n                  value: c.id\n                })),\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"roomNumber\",\n                    value: e.label\n                  }\n                }),\n                options: rooms.map(c => ({\n                  label: c.roomNumber,\n                  value: c.id\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Tellphone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.handleOnChangeFilter,\n                value: filter.tellphone,\n                name: \"tellphone\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DateTime, {\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"date\",\n                    value: e._d\n                  }\n                }),\n                closeOnSelect: true,\n                timeFormat: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n            hover: true,\n            entriesOptions: [10, 25, 50, 100],\n            entries: 10,\n            pagesAmount: 10,\n            data: {\n              columns: tableHeaders,\n              rows: receipts.map(ren => {\n                ren.amount = \"$\" + ren.amount;\n                ren.date = new Date(ren.date).toDateString();\n                ren.description = this.handleSummary(ren.description);\n                return ren;\n              })\n            },\n            pagingTop: true,\n            searchTop: false,\n            searchBottom: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/receipts\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        receipts: data\n      });\n    });\n    Services.get(Config.apiUrl + \"/customers\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        customers: [{\n          id: \"All\",\n          name: \"All\"\n        }, ...data]\n      });\n    });\n    Services.get(Config.apiUrl + \"/rooms\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rooms: [{\n          id: \"All\",\n          roomNumber: \"All\"\n        }, ...data]\n      });\n    });\n  }\n\n}\n\nexport default Report;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/Receipt/Report.jsx"],"names":["React","Component","Card","Row","Col","FormLabel","Fontawesome","MDBDataTableV5","Config","Services","PrinTible","ReactToPrint","Select","DateTime","Filter","Report","state","tableHeaders","label","field","receipts","customers","rooms","filter","name","roomNumber","tellphone","date","handleSummary","text","max","letters","split","length","slice","join","handleOnChangeFilter","currentTarget","input","value","setState","handleCloseModal","show","handleViewModal","death","render","allreceipts","console","log","fontSize","componentRef","map","r","id","amount","Date","toDateString","lastDate","endDate","t","h","el","c","e","_d","columns","rows","ren","description","componentDidMount","loading","auth","Authorization","localStorage","get","apiUrl","headers","then","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport PrinTible from \"../../Utility/printible\";\nimport ReactToPrint from \"react-to-print\";\nimport Select from \"react-select\";\nimport DateTime from \"react-datetime\";\nimport Filter from \"../../Utility/receiptsFilter\";\n\nclass Report extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Tellphone\", field: \"tellphone\" },\n      { label: \"Room No\", field: \"roomNumber\" },\n      { label: \"Type of payment\", field: \"type\" },\n      { label: \"Amount\", field: \"amount\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"Description\", field: \"description\" },\n    ],\n    receipts: [],\n    customers: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      roomNumber: \"All\",\n      tellphone: \"\",\n      date: \"\",\n    },\n  };\n\n  render() {\n    const {\n      tableHeaders,\n      receipts: allreceipts,\n      customers,\n      rooms,\n      filter,\n    } = this.state;\n\n    const receipts = Filter(allreceipts, filter);\n\n    console.log(receipts);\n\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Rental Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                <PrinTible\n                  data={receipts.map((r) => ({\n                    id: r.id,\n                    name: r.name,\n                    tellphone: r.tellphone,\n                    roomNumber: r.roomNumber,\n                    amount: \"$\" + r.amount,\n                    date: new Date(r.date).toDateString(),\n                    lastDate: r.endDate ? (\n                      new Date(r.endDate).toDateString()\n                    ) : (\n                      <span className=\"badge badge-success\">Current</span>\n                    ),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                />\n              </div>\n            </Card.Title>\n            <Row>\n              <Col>\n                <FormLabel>Customer</FormLabel>\n                <Select\n                  value={customers\n                    .filter((c) => c.name === filter.name)\n                    .map((c) => ({ label: c.name, value: c.id }))}\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"name\", value: e.label },\n                    })\n                  }\n                  options={customers.map((c) => ({\n                    label: c.name,\n                    value: c.id,\n                  }))}\n                />\n              </Col>\n              <Col>\n                <FormLabel>Room</FormLabel>\n                <Select\n                  value={rooms\n                    .filter((c) => c.roomNumber === filter.roomNumber)\n                    .map((c) => ({ label: c.roomNumber, value: c.id }))}\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"roomNumber\", value: e.label },\n                    })\n                  }\n                  options={rooms.map((c) => ({\n                    label: c.roomNumber,\n                    value: c.id,\n                  }))}\n                />\n              </Col>\n              <Col>\n                <FormLabel>Tellphone</FormLabel>\n                <input\n                  onChange={this.handleOnChangeFilter}\n                  value={filter.tellphone}\n                  name=\"tellphone\"\n                  className=\"form-control\"\n                />\n              </Col>\n              <Col>\n                <FormLabel>Start Date</FormLabel>\n                <DateTime\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"date\", value: e._d },\n                    })\n                  }\n                  closeOnSelect={true}\n                  timeFormat={false}\n                />\n              </Col>\n            </Row>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: receipts.map((ren) => {\n                  ren.amount = \"$\" + ren.amount;\n                  ren.date = new Date(ren.date).toDateString();\n                  ren.description = this.handleSummary(ren.description);\n                  return ren;\n                }),\n              }}\n              pagingTop\n              searchTop={false}\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleSummary = (text) => {\n    const max = 50;\n    const letters = text.split(\"\");\n\n    if (letters.length > max) {\n      return letters.slice(0, max).join(\"\") + \"...\";\n    } else {\n      return letters.join(\"\");\n    }\n  };\n  handleOnChangeFilter = ({ currentTarget: input }) => {\n    const { filter } = this.state;\n    filter[input.name] = input.value;\n\n    this.setState({ filter });\n  };\n  handleCloseModal = () => {\n    this.setState({ show: false });\n  };\n  handleViewModal = (death) => {\n    this.setState({ death, show: true });\n  };\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/receipts\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          receipts: data,\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/customers\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          customers: [{ id: \"All\", name: \"All\" }, ...data],\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/rooms\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          rooms: [{ id: \"All\", roomNumber: \"All\" }, ...data],\n        });\n      }\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}