{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Message/Messages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport ViewMessage from \"./ViewMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState({});\n  const [tableHeaders] = useState([{\n    label: \"Name\",\n    field: \"name\"\n  }, {\n    label: \"Tellphone\",\n    field: \"tellphone\"\n  }, {\n    label: \"Message\",\n    field: \"messageBody\"\n  }, {\n    label: \"Date\",\n    field: \"date\"\n  }, {\n    label: \"\",\n    field: \"edit\"\n  }]);\n  useEffect(() => {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/messages\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      setMessages(data);\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }, []);\n\n  const handleSummary = text => {\n    const max = 20;\n    const letters = text.split(\"\");\n\n    if (letters.length > max) {\n      return letters.slice(0, max).join(\"\") + \"...\";\n    } else {\n      return letters.join(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ViewMessage, {\n      show: show,\n      setShow: setShow,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n          hover: true,\n          entriesOptions: [10, 25, 50, 100, 250, 500, 1000],\n          entries: 10,\n          pagesAmount: 10,\n          data: {\n            columns: tableHeaders,\n            rows: messages.map(message => {\n              message.edit = /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-light btn-sm\",\n                onClick: () => {\n                  setMessage(message);\n                  setShow(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                  className: \"fas fa-eye text-secondary\",\n                  style: {\n                    fontSize: 17\n                  },\n                  name: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this);\n              message.name = message.customer.name;\n              message.tellphone = message.customer.tellphone;\n              message.date = new Date(message.date).toDateString();\n              message.messageBody = handleSummary(message.body);\n              return message;\n            })\n          },\n          pagingTop: true,\n          searchTop: true,\n          searchBottom: false,\n          fullPagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Messages, \"X5Wwib1FULWuwHiW769kN1NPEs0=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Message/Messages.jsx"],"names":["React","useState","useEffect","Card","Button","Config","Services","toast","MDBDataTableV5","Fontawesome","ViewMessage","Messages","messages","setMessages","show","setShow","message","setMessage","tableHeaders","label","field","auth","Authorization","localStorage","get","apiUrl","headers","then","data","catch","error","console","log","handleSummary","text","max","letters","split","length","slice","join","columns","rows","map","edit","fontSize","name","customer","tellphone","date","Date","toDateString","messageBody","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport ViewMessage from \"./ViewMessage\";\n\nconst Messages = () => {\n  const [messages, setMessages] = useState([]);\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState({});\n  const [tableHeaders] = useState([\n    { label: \"Name\", field: \"name\" },\n    { label: \"Tellphone\", field: \"tellphone\" },\n    { label: \"Message\", field: \"messageBody\" },\n    { label: \"Date\", field: \"date\" },\n    { label: \"\", field: \"edit\" },\n  ]);\n\n  useEffect(() => {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/messages\", { headers: auth })\n      .then(({ data }) => {\n        setMessages(data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }, []);\n\n  const handleSummary = (text) => {\n    const max = 20;\n    const letters = text.split(\"\");\n\n    if (letters.length > max) {\n      return letters.slice(0, max).join(\"\") + \"...\";\n    } else {\n      return letters.join(\"\");\n    }\n  };\n\n  return (\n    <>\n      <ViewMessage show={show} setShow={setShow} message={message} />\n      <Card>\n        <Card.Header>\n          <Card.Title>Messages</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <MDBDataTableV5\n            hover\n            entriesOptions={[10, 25, 50, 100, 250, 500, 1000]}\n            entries={10}\n            pagesAmount={10}\n            data={{\n              columns: tableHeaders,\n              rows: messages.map((message) => {\n                message.edit = (\n                  <Button\n                    className=\"btn-light btn-sm\"\n                    onClick={() => {\n                      setMessage(message);\n                      setShow(true);\n                    }}\n                  >\n                    <Fontawesome\n                      className=\"fas fa-eye text-secondary\"\n                      style={{ fontSize: 17 }}\n                      name=\"edit\"\n                    />\n                  </Button>\n                );\n\n                message.name = message.customer.name;\n                message.tellphone = message.customer.tellphone;\n                message.date = new Date(message.date).toDateString();\n                message.messageBody = handleSummary(message.body);\n\n                return message;\n              }),\n            }}\n            pagingTop\n            searchTop\n            searchBottom={false}\n            fullPagination\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}