{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn, TextField, DateField } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport NewCustomerModal from \"./NewCustomerModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChecklistForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chechlist: {\n        id: 0,\n        customerId: \"\",\n        roomId: \"\",\n        amount: \"\",\n        startDate: \"\"\n      },\n      customers: [],\n      rooms: [],\n      file: \"\",\n      show: false\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      customerId: Yup.number().required().label(\"Customer\"),\n      roomId: Yup.number().required().label(\"Room\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      startDate: Yup.date().required().label(\"Start Date\")\n    });\n\n    this.handlePapulate = customer => {\n      const {\n        customers,\n        chechlist\n      } = this.state;\n      chechlist.customerId = customer.id;\n      this.setState({\n        customers: [customer, ...customers],\n        chechlist\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleFile = file => {\n      this.setState({\n        file\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        chechlist,\n        file\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      const data = { ...chechlist,\n        document: file\n      };\n      this.setState({\n        chechlist: {\n          id: 0,\n          customerId: \"\",\n          roomId: \"\",\n          amount: \"\",\n          startDate: chechlist.startDate\n        },\n        file: \"\"\n      });\n\n      if (chechlist.id === 0) {\n        Services.post(Config.apiUrl + \"/rentals\", data, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/rentals/\" + data.id, data, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      chechlist,\n      customers,\n      rooms,\n      show\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NewCustomerModal, {\n        show: show,\n        setClose: this.handleClose,\n        onPapulate: this.handlePapulate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: chechlist,\n          enableReinitialize: true,\n          validationSchema: this.schema,\n          onSubmit: (chechlist, {\n            resetForm\n          }) => {\n            resetForm();\n            this.setState({\n              chechlist\n            });\n            this.handleSubmit(chechlist);\n          },\n          children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"customerId\",\n                    label: \"Customer\",\n                    options: customers.map(c => ({\n                      label: c.name,\n                      value: c.id\n                    })),\n                    required: true,\n                    show: true,\n                    onShow: this.handleShow\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"roomId\",\n                    label: \"Room\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"amount\",\n                    label: \"Amount\",\n                    required: true,\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(DateField, {\n                    name: \"startDate\",\n                    label: \"start Date\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/rentals/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        delete data.endDate;\n        delete data.isCurrent;\n        delete data.customer;\n        delete data.room;\n        this.setState({\n          file: data.document\n        });\n        delete data.document;\n        this.setState({\n          chechlist: data\n        });\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n    }\n\n    Services.get(Config.apiUrl + \"/customers\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        customers: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rooms\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rooms: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default ChecklistForm;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","SelectField","SubmitBtn","TextField","DateField","Config","Services","toast","NewCustomerModal","ChecklistForm","state","chechlist","id","customerId","roomId","amount","startDate","customers","rooms","file","show","schema","object","number","label","required","min","max","date","handlePapulate","customer","setState","handleClose","handleShow","handleFile","handleSubmit","auth","Authorization","localStorage","data","document","post","apiUrl","headers","then","success","catch","error","console","log","response","put","info","render","resetForm","map","c","name","value","roomNumber","componentDidMount","props","match","params","get","endDate","isCurrent","room"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  TextField,\n  DateField,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport NewCustomerModal from \"./NewCustomerModal\";\n\nclass ChecklistForm extends Component {\n  state = {\n    chechlist: {\n      id: 0,\n      customerId: \"\",\n      roomId: \"\",\n      amount: \"\",\n      startDate: \"\",\n    },\n    customers: [],\n    rooms: [],\n    file: \"\",\n    show: false,\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    customerId: Yup.number().required().label(\"Customer\"),\n    roomId: Yup.number().required().label(\"Room\"),\n    amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n    startDate: Yup.date().required().label(\"Start Date\"),\n  });\n\n  render() {\n    const { chechlist, customers, rooms, show } = this.state;\n   \n\n    return (\n      <>\n        <NewCustomerModal\n          show={show}\n          setClose={this.handleClose}\n          onPapulate={this.handlePapulate}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"}\n            </Card.Title>\n          </Card.Header>\n          <Formik\n            initialValues={chechlist}\n            enableReinitialize={true}\n            validationSchema={this.schema}\n            onSubmit={(chechlist, { resetForm }) => {\n              resetForm();\n              this.setState({ chechlist });\n              this.handleSubmit(chechlist);\n            }}\n          >\n            {() => (\n              <>\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"customerId\"\n                        label=\"Customer\"\n                        options={customers.map((c) => ({\n                          label: c.name,\n                          value: c.id,\n                        }))}\n                        required\n                        show={true}\n                        onShow={this.handleShow}\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"roomId\"\n                        label=\"Room\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <TextField\n                        name=\"amount\"\n                        label=\"Amount\"\n                        required\n                        type=\"number\"\n                      />\n                    </Col>\n                    <Col>\n                      <DateField name=\"startDate\" label=\"start Date\" required />\n                    </Col>\n                  </Row>\n                </Card.Body>\n                <Card.Footer className=\"text-center\">\n                  <SubmitBtn />\n                </Card.Footer>\n              </>\n            )}\n          </Formik>\n        </Card>\n      </>\n    );\n  }\n\n  handlePapulate = (customer) => {\n    const { customers, chechlist } = this.state;\n    chechlist.customerId = customer.id;\n\n    this.setState({ customers: [customer, ...customers], chechlist });\n  };\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n  handleFile = (file) => {\n    this.setState({ file });\n  };\n  componentDidMount() {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const { id } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/rentals/\" + id, { headers: auth })\n        .then(({ data }) => {\n          delete data.endDate;\n          delete data.isCurrent;\n          delete data.customer;\n          delete data.room;\n\n          this.setState({ file: data.document });\n          delete data.document;\n          this.setState({ chechlist: data });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n\n    Services.get(Config.apiUrl + \"/customers\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ customers: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n\n    Services.get(Config.apiUrl + \"/rooms\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ rooms: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleSubmit = () => {\n    const { chechlist, file } = this.state;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const data = { ...chechlist, document: file };\n\n    this.setState({\n      chechlist: {\n        id: 0,\n        customerId: \"\",\n        roomId: \"\",\n        amount: \"\",\n        startDate: chechlist.startDate,\n      },\n      file: \"\",\n    });\n\n    if (chechlist.id === 0) {\n      Services.post(Config.apiUrl + \"/rentals\", data, { headers: auth })\n        .then(() => {\n          toast.success(\"Successful Registred.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/rentals/\" + data.id, data, {\n        headers: auth,\n      })\n        .then(() => {\n          toast.info(\"Successful Updates.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    }\n  };\n}\n\nexport default ChecklistForm;\n"]},"metadata":{},"sourceType":"module"}