{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Rental/NewCustomerModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, SubmitBtn } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = Yup.object({\n  id: Yup.number(),\n  name: Yup.string().min(5).max(50).required().label(\"Name\"),\n  tellphone: Yup.string().required().label(\"Tellphone\"),\n  address: Yup.string().required().label(\"Address\")\n});\n\nconst NewCustomerModal = ({\n  show,\n  setClose,\n  onPapulate\n}) => {\n  _s();\n\n  const [customer] = useState({\n    id: 0,\n    name: \"\",\n    tellphone: \"\",\n    address: \"\"\n  });\n\n  const handleSubmit = customer => {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.post(Config.apiUrl + \"/customers\", customer, {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      toast.success(\"Successful Registred.\");\n      setClose();\n      onPapulate(data);\n    }).catch(error => {\n      console.log(error);\n\n      if (error.response && error.response.data) {\n        toast.error(error.response.data);\n      } else {\n        toast.error(\"Something went wrong\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    initialValues: customer,\n    validationSchema: schema,\n    onSubmit: (customer, {\n      resetForm\n    }) => {\n      resetForm();\n      handleSubmit(customer);\n    },\n    children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: customer.id === 0 ? \"New Customer\" : \"Update Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            label: \"Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"tellphone\",\n            label: \"Tellphone\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"address\",\n            label: \"Address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: setClose,\n            className: \"btn-secondary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCustomerModal, \"ISdo2KzS9vB+324B16TrDlJnJAo=\");\n\n_c = NewCustomerModal;\nexport default NewCustomerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCustomerModal\");","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Rental/NewCustomerModal.jsx"],"names":["React","useState","Formik","Yup","Modal","Button","TextField","SubmitBtn","Config","Services","toast","schema","object","id","number","name","string","min","max","required","label","tellphone","address","NewCustomerModal","show","setClose","onPapulate","customer","handleSubmit","auth","Authorization","localStorage","post","apiUrl","headers","then","data","success","catch","error","console","log","response","resetForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,MAAM,GAAGR,GAAG,CAACS,MAAJ,CAAW;AACxBC,EAAAA,EAAE,EAAEV,GAAG,CAACW,MAAJ,EADoB;AAExBC,EAAAA,IAAI,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,GAAuCC,KAAvC,CAA6C,MAA7C,CAFkB;AAGxBC,EAAAA,SAAS,EAAElB,GAAG,CAACa,MAAJ,GAAaG,QAAb,GAAwBC,KAAxB,CAA8B,WAA9B,CAHa;AAIxBE,EAAAA,OAAO,EAAEnB,GAAG,CAACa,MAAJ,GAAaG,QAAb,GAAwBC,KAAxB,CAA8B,SAA9B;AAJe,CAAX,CAAf;;AAOA,MAAMG,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAoC;AAAA;;AAC3D,QAAM,CAACC,QAAD,IAAa1B,QAAQ,CAAC;AAC1BY,IAAAA,EAAE,EAAE,CADsB;AAE1BE,IAAAA,IAAI,EAAE,EAFoB;AAG1BM,IAAAA,SAAS,EAAE,EAHe;AAI1BC,IAAAA,OAAO,EAAE;AAJiB,GAAD,CAA3B;;AAOA,QAAMM,YAAY,GAAID,QAAD,IAAc;AACjC,UAAME,IAAI,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAAC,OAAD,CAAU;AAAjD,KAAb;AAEAtB,IAAAA,QAAQ,CAACuB,IAAT,CAAcxB,MAAM,CAACyB,MAAP,GAAgB,YAA9B,EAA4CN,QAA5C,EAAsD;AAAEO,MAAAA,OAAO,EAAEL;AAAX,KAAtD,EACGM,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClB1B,MAAAA,KAAK,CAAC2B,OAAN,CAAc,uBAAd;AACAZ,MAAAA,QAAQ;AACRC,MAAAA,UAAU,CAACU,IAAD,CAAV;AACD,KALH,EAMGE,KANH,CAMUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,UAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeN,IAArC,EAA2C;AACzC1B,QAAAA,KAAK,CAAC6B,KAAN,CAAYA,KAAK,CAACG,QAAN,CAAeN,IAA3B;AACD,OAFD,MAEO;AACL1B,QAAAA,KAAK,CAAC6B,KAAN,CAAY,sBAAZ;AACD;AACF,KAdH;AAeD,GAlBD;;AAoBA,sBACE,QAAC,MAAD;AACE,IAAA,kBAAkB,EAAE,IADtB;AAEE,IAAA,aAAa,EAAEZ,QAFjB;AAGE,IAAA,gBAAgB,EAAEhB,MAHpB;AAIE,IAAA,QAAQ,EAAE,CAACgB,QAAD,EAAW;AAAEgB,MAAAA;AAAF,KAAX,KAA6B;AACrCA,MAAAA,SAAS;AACTf,MAAAA,YAAY,CAACD,QAAD,CAAZ;AACD,KAPH;AAAA,cASG,mBACC;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,IAAb;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAA,sBACGG,QAAQ,CAACd,EAAT,KAAgB,CAAhB,GAAoB,cAApB,GAAqC;AADxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,KAAD,CAAO,IAAP;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,MAAhB;AAAuB,YAAA,KAAK,EAAC,MAA7B;AAAoC,YAAA,QAAQ;AAA5C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,WAAlC;AAA8C,YAAA,QAAQ;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,SAAhB;AAA0B,YAAA,KAAK,EAAC,SAAhC;AAA0C,YAAA,QAAQ;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,KAAD,CAAO,MAAP;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEY,QAAjB;AAA2B,YAAA,SAAS,EAAC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA9DD;;GAAMF,gB;;KAAAA,gB;AAgEN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, SubmitBtn } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nconst schema = Yup.object({\n  id: Yup.number(),\n  name: Yup.string().min(5).max(50).required().label(\"Name\"),\n  tellphone: Yup.string().required().label(\"Tellphone\"),\n  address: Yup.string().required().label(\"Address\"),\n});\n\nconst NewCustomerModal = ({ show, setClose, onPapulate }) => {\n  const [customer] = useState({\n    id: 0,\n    name: \"\",\n    tellphone: \"\",\n    address: \"\",\n  });\n\n  const handleSubmit = (customer) => {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.post(Config.apiUrl + \"/customers\", customer, { headers: auth })\n      .then(({ data }) => {\n        toast.success(\"Successful Registred.\");\n        setClose();\n        onPapulate(data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n        if (error.response && error.response.data) {\n          toast.error(error.response.data);\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      });\n  };\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={customer}\n      validationSchema={schema}\n      onSubmit={(customer, { resetForm }) => {\n        resetForm();\n        handleSubmit(customer);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {customer.id === 0 ? \"New Customer\" : \"Update Customer\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextField name=\"tellphone\" label=\"Tellphone\" required />\n              <TextField name=\"address\" label=\"Address\" required />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={setClose} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewCustomerModal;\n"]},"metadata":{},"sourceType":"module"}