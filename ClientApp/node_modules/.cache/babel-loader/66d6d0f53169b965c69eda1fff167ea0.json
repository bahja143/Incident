{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/snapshot/Snapshot.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn, TextField, UploadFileField, DateField } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Snapshot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      snapshot: {\n        id: 0,\n        customerId: \"\",\n        roomId: \"\",\n        amount: \"\",\n        startDate: \"\"\n      },\n      customers: [],\n      rooms: [],\n      file: \"\"\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      customerId: Yup.number().required().label(\"Customer\"),\n      roomId: Yup.number().required().label(\"Room\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      startDate: Yup.date().required().label(\"Start Date\")\n    });\n\n    this.handlePapulate = customer => {\n      const {\n        customers,\n        snapshot\n      } = this.state;\n      snapshot.customerId = customer.id;\n      this.setState({\n        customers: [customer, ...customers],\n        snapshot\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleFile = file => {\n      this.setState({\n        file\n      });\n    };\n\n    this.handleStringToArray = (str = \"\") => {\n      const array = str.split(\",\");\n      const buffer = [];\n\n      for (let index = 0; index < array.length; index++) {\n        buffer[index] = array[index];\n      }\n\n      const data = new Uint8Array(buffer);\n      return data;\n    };\n\n    this.handleSubmit = () => {\n      const {\n        snapshot,\n        file\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      const data = { ...snapshot,\n        document: file\n      };\n      this.setState({\n        snapshot: {\n          id: 0,\n          customerId: \"\",\n          roomId: \"\",\n          amount: \"\",\n          startDate: snapshot.startDate\n        },\n        file: \"\"\n      });\n\n      if (snapshot.id === 0) {\n        Services.post(Config.apiUrl + \"/snapshots\", data, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/snapshots/\" + data.id, data, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      snapshot,\n      customers,\n      rooms,\n      file\n    } = this.state;\n    const fileImage = URL.createObjectURL(new Blob([this.handleStringToArray(file)], {\n      type: \"image/png\"\n    }));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: snapshot.id === 0 ? \"New Snapshot\" : \"Update Snapshot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: snapshot,\n          enableReinitialize: true,\n          validationSchema: this.schema,\n          onSubmit: (snapshot, {\n            resetForm\n          }) => {\n            resetForm();\n            this.setState({\n              snapshot\n            });\n            this.handleSubmit(snapshot);\n          },\n          children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"customerId\",\n                    label: \"Customer\",\n                    options: customers.map(c => ({\n                      label: c.name,\n                      value: c.id\n                    })),\n                    required: true,\n                    show: true,\n                    onShow: this.handleShow\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"roomId\",\n                    label: \"Room\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"amount\",\n                    label: \"Amount\",\n                    required: true,\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(DateField, {\n                    name: \"startDate\",\n                    label: \"start Date\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(UploadFileField, {\n                    name: \"document\",\n                    file: \"file\",\n                    label: \"Document\",\n                    type: \"file\",\n                    setFile: this.handleFile\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this), file && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: fileImage,\n                    download: true,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      width: \"400\",\n                      height: \"400\",\n                      src: fileImage,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/snapshots/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        delete data.endDate;\n        delete data.isCurrent;\n        delete data.customer;\n        delete data.room;\n        this.setState({\n          file: data.document\n        });\n        delete data.document;\n        this.setState({\n          snapshot: data\n        });\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n    }\n\n    Services.get(Config.apiUrl + \"/customers\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        customers: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rooms\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rooms: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default Snapshot;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/snapshot/Snapshot.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","SelectField","SubmitBtn","TextField","UploadFileField","DateField","Config","Services","toast","Snapshot","state","snapshot","id","customerId","roomId","amount","startDate","customers","rooms","file","schema","object","number","label","required","min","max","date","handlePapulate","customer","setState","handleClose","show","handleShow","handleFile","handleStringToArray","str","array","split","buffer","index","length","data","Uint8Array","handleSubmit","auth","Authorization","localStorage","document","post","apiUrl","headers","then","success","catch","error","console","log","response","put","info","render","fileImage","URL","createObjectURL","Blob","type","resetForm","map","c","name","value","roomNumber","componentDidMount","props","match","params","get","endDate","isCurrent","room"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,eAJF,EAKEC,SALF,QAMO,uBANP;AAOA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;;AAEA,MAAMC,QAAN,SAAuBd,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/Be,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE,CADI;AAERC,QAAAA,UAAU,EAAE,EAFJ;AAGRC,QAAAA,MAAM,EAAE,EAHA;AAIRC,QAAAA,MAAM,EAAE,EAJA;AAKRC,QAAAA,SAAS,EAAE;AALH,OADJ;AAQNC,MAAAA,SAAS,EAAE,EARL;AASNC,MAAAA,KAAK,EAAE,EATD;AAUNC,MAAAA,IAAI,EAAE;AAVA,KADuB;AAAA,SAc/BC,MAd+B,GActBvB,GAAG,CAACwB,MAAJ,CAAW;AAClBT,MAAAA,EAAE,EAAEf,GAAG,CAACyB,MAAJ,GAAaC,KAAb,CAAmB,IAAnB,CADc;AAElBV,MAAAA,UAAU,EAAEhB,GAAG,CAACyB,MAAJ,GAAaE,QAAb,GAAwBD,KAAxB,CAA8B,UAA9B,CAFM;AAGlBT,MAAAA,MAAM,EAAEjB,GAAG,CAACyB,MAAJ,GAAaE,QAAb,GAAwBD,KAAxB,CAA8B,MAA9B,CAHU;AAIlBR,MAAAA,MAAM,EAAElB,GAAG,CAACyB,MAAJ,GAAaE,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,KAAnC,EAA0CH,KAA1C,CAAgD,QAAhD,CAJU;AAKlBP,MAAAA,SAAS,EAAEnB,GAAG,CAAC8B,IAAJ,GAAWH,QAAX,GAAsBD,KAAtB,CAA4B,YAA5B;AALO,KAAX,CAdsB;;AAAA,SAyH/BK,cAzH+B,GAyHbC,QAAD,IAAc;AAC7B,YAAM;AAAEZ,QAAAA,SAAF;AAAaN,QAAAA;AAAb,UAA0B,KAAKD,KAArC;AACAC,MAAAA,QAAQ,CAACE,UAAT,GAAsBgB,QAAQ,CAACjB,EAA/B;AAEA,WAAKkB,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAE,CAACY,QAAD,EAAW,GAAGZ,SAAd,CAAb;AAAuCN,QAAAA;AAAvC,OAAd;AACD,KA9H8B;;AAAA,SA+H/BoB,WA/H+B,GA+HjB,MAAM;AAClB,WAAKD,QAAL,CAAc;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAjI8B;;AAAA,SAkI/BC,UAlI+B,GAkIlB,MAAM;AACjB,WAAKH,QAAL,CAAc;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KApI8B;;AAAA,SAqI/BE,UArI+B,GAqIjBf,IAAD,IAAU;AACrB,WAAKW,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KAvI8B;;AAAA,SAmL/BgB,mBAnL+B,GAmLT,CAACC,GAAG,GAAG,EAAP,KAAc;AAClC,YAAMC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAd;AACA,YAAMC,MAAM,GAAG,EAAf;;AAEA,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,KAAK,CAACI,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AACjDD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBH,KAAK,CAACG,KAAD,CAArB;AACD;;AAED,YAAME,IAAI,GAAG,IAAIC,UAAJ,CAAeJ,MAAf,CAAb;AAEA,aAAOG,IAAP;AACD,KA9L8B;;AAAA,SA+L/BE,YA/L+B,GA+LhB,MAAM;AACnB,YAAM;AAAEjC,QAAAA,QAAF;AAAYQ,QAAAA;AAAZ,UAAqB,KAAKT,KAAhC;AACA,YAAMmC,IAAI,GAAG;AAAEC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAAC,OAAD,CAAU;AAAjD,OAAb;AACA,YAAML,IAAI,GAAG,EAAE,GAAG/B,QAAL;AAAeqC,QAAAA,QAAQ,EAAE7B;AAAzB,OAAb;AAEA,WAAKW,QAAL,CAAc;AACZnB,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE,CADI;AAERC,UAAAA,UAAU,EAAE,EAFJ;AAGRC,UAAAA,MAAM,EAAE,EAHA;AAIRC,UAAAA,MAAM,EAAE,EAJA;AAKRC,UAAAA,SAAS,EAAEL,QAAQ,CAACK;AALZ,SADE;AAQZG,QAAAA,IAAI,EAAE;AARM,OAAd;;AAWA,UAAIR,QAAQ,CAACC,EAAT,KAAgB,CAApB,EAAuB;AACrBL,QAAAA,QAAQ,CAAC0C,IAAT,CAAc3C,MAAM,CAAC4C,MAAP,GAAgB,YAA9B,EAA4CR,IAA5C,EAAkD;AAAES,UAAAA,OAAO,EAAEN;AAAX,SAAlD,EACGO,IADH,CACQ,MAAM;AACV5C,UAAAA,KAAK,CAAC6C,OAAN,CAAc,uBAAd;AACD,SAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,cAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAehB,IAArC,EAA2C;AACzClC,YAAAA,KAAK,CAAC+C,KAAN,CAAYA,KAAK,CAACG,QAAN,CAAehB,IAA3B;AACD,WAFD,MAEO;AACLlC,YAAAA,KAAK,CAAC+C,KAAN,CAAY,sBAAZ;AACD;AACF,SAZH;AAaD,OAdD,MAcO;AACLhD,QAAAA,QAAQ,CAACoD,GAAT,CAAarD,MAAM,CAAC4C,MAAP,GAAgB,aAAhB,GAAgCR,IAAI,CAAC9B,EAAlD,EAAsD8B,IAAtD,EAA4D;AAC1DS,UAAAA,OAAO,EAAEN;AADiD,SAA5D,EAGGO,IAHH,CAGQ,MAAM;AACV5C,UAAAA,KAAK,CAACoD,IAAN,CAAW,qBAAX;AACD,SALH,EAMGN,KANH,CAMUC,KAAD,IAAW;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,cAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAehB,IAArC,EAA2C;AACzClC,YAAAA,KAAK,CAAC+C,KAAN,CAAYA,KAAK,CAACG,QAAN,CAAehB,IAA3B;AACD,WAFD,MAEO;AACLlC,YAAAA,KAAK,CAAC+C,KAAN,CAAY,sBAAZ;AACD;AACF,SAdH;AAeD;AACF,KA9O8B;AAAA;;AAsB/BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElD,MAAAA,QAAF;AAAYM,MAAAA,SAAZ;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA;AAA9B,QAAuC,KAAKT,KAAlD;AACA,UAAMoD,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAChB,IAAIC,IAAJ,CAAS,CAAC,KAAK9B,mBAAL,CAAyBhB,IAAzB,CAAD,CAAT,EAA2C;AAAE+C,MAAAA,IAAI,EAAE;AAAR,KAA3C,CADgB,CAAlB;AAIA,wBACE;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sBACGvD,QAAQ,CAACC,EAAT,KAAgB,CAAhB,GAAoB,cAApB,GAAqC;AADxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AACE,UAAA,aAAa,EAAED,QADjB;AAEE,UAAA,kBAAkB,EAAE,IAFtB;AAGE,UAAA,gBAAgB,EAAE,KAAKS,MAHzB;AAIE,UAAA,QAAQ,EAAE,CAACT,QAAD,EAAW;AAAEwD,YAAAA;AAAF,WAAX,KAA6B;AACrCA,YAAAA,SAAS;AACT,iBAAKrC,QAAL,CAAc;AAAEnB,cAAAA;AAAF,aAAd;AACA,iBAAKiC,YAAL,CAAkBjC,QAAlB;AACD,WARH;AAAA,oBAUG,mBACC;AAAA,oCACE,QAAC,IAAD,CAAM,IAAN;AAAA,sCACE,QAAC,GAAD;AAAA,wCACE,QAAC,GAAD;AAAA,yCACE,QAAC,WAAD;AACE,oBAAA,IAAI,EAAC,YADP;AAEE,oBAAA,KAAK,EAAC,UAFR;AAGE,oBAAA,OAAO,EAAEM,SAAS,CAACmD,GAAV,CAAeC,CAAD,KAAQ;AAC7B9C,sBAAAA,KAAK,EAAE8C,CAAC,CAACC,IADoB;AAE7BC,sBAAAA,KAAK,EAAEF,CAAC,CAACzD;AAFoB,qBAAR,CAAd,CAHX;AAOE,oBAAA,QAAQ,MAPV;AAQE,oBAAA,IAAI,EAAE,IARR;AASE,oBAAA,MAAM,EAAE,KAAKqB;AATf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,GAAD;AAAA,yCACE,QAAC,WAAD;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,KAAK,EAAC,MAFR;AAGE,oBAAA,OAAO,EAAEf,KAAK,CAACkD,GAAN,CAAWC,CAAD,KAAQ;AACzB9C,sBAAAA,KAAK,EAAE8C,CAAC,CAACG,UADgB;AAEzBD,sBAAAA,KAAK,EAAEF,CAAC,CAACzD;AAFgB,qBAAR,CAAV,CAHX;AAOE,oBAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA2BE,QAAC,GAAD;AAAA,wCACE,QAAC,GAAD;AAAA,yCACE,QAAC,SAAD;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,KAAK,EAAC,QAFR;AAGE,oBAAA,QAAQ,MAHV;AAIE,oBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eASE,QAAC,GAAD;AAAA,yCACE,QAAC,SAAD;AAAW,oBAAA,IAAI,EAAC,WAAhB;AAA4B,oBAAA,KAAK,EAAC,YAAlC;AAA+C,oBAAA,QAAQ;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3BF,eAwCE,QAAC,GAAD;AAAA,uCACE,QAAC,GAAD;AAAA,0CACE,QAAC,eAAD;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,KAAK,EAAC,UAHR;AAIE,oBAAA,IAAI,EAAC,MAJP;AAKE,oBAAA,OAAO,EAAE,KAAKsB;AALhB;AAAA;AAAA;AAAA;AAAA,0BADF,EAQGf,IAAI,iBACH;AAAG,oBAAA,IAAI,EAAE2C,SAAT;AAAoB,oBAAA,QAAQ,MAA5B;AAAA,2CACE;AACE,sBAAA,KAAK,EAAC,KADR;AAEE,sBAAA,MAAM,EAAC,KAFT;AAGE,sBAAA,GAAG,EAAEA,SAHP;AAIE,sBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA+DE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAC,aAAvB;AAAA,qCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA/DF;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA2FD;;AAiBDW,EAAAA,iBAAiB,GAAG;AAClB,UAAM5B,IAAI,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAAC,OAAD,CAAU;AAAjD,KAAb;AACA,UAAM;AAAEnC,MAAAA;AAAF,QAAS,KAAK8D,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;;AAEA,QAAIhE,EAAJ,EAAQ;AACNL,MAAAA,QAAQ,CAACsE,GAAT,CAAavE,MAAM,CAAC4C,MAAP,GAAgB,aAAhB,GAAgCtC,EAA7C,EAAiD;AAAEuC,QAAAA,OAAO,EAAEN;AAAX,OAAjD,EACGO,IADH,CACQ,CAAC;AAAEV,QAAAA;AAAF,OAAD,KAAc;AAClB,eAAOA,IAAI,CAACoC,OAAZ;AACA,eAAOpC,IAAI,CAACqC,SAAZ;AACA,eAAOrC,IAAI,CAACb,QAAZ;AACA,eAAOa,IAAI,CAACsC,IAAZ;AAEA,aAAKlD,QAAL,CAAc;AAAEX,UAAAA,IAAI,EAAEuB,IAAI,CAACM;AAAb,SAAd;AACA,eAAON,IAAI,CAACM,QAAZ;AACA,aAAKlB,QAAL,CAAc;AAAEnB,UAAAA,QAAQ,EAAE+B;AAAZ,SAAd;AACD,OAVH,EAWGY,KAXH,CAWUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA/C,QAAAA,KAAK,CAAC+C,KAAN,CAAY,sBAAZ;AACD,OAfH;AAgBD;;AAEDhD,IAAAA,QAAQ,CAACsE,GAAT,CAAavE,MAAM,CAAC4C,MAAP,GAAgB,YAA7B,EAA2C;AAAEC,MAAAA,OAAO,EAAEN;AAAX,KAA3C,EACGO,IADH,CACQ,CAAC;AAAEV,MAAAA;AAAF,KAAD,KAAc;AAClB,WAAKZ,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAEyB;AAAb,OAAd;AACD,KAHH,EAIGY,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA/C,MAAAA,KAAK,CAAC+C,KAAN,CAAY,sBAAZ;AACD,KARH;AAUAhD,IAAAA,QAAQ,CAACsE,GAAT,CAAavE,MAAM,CAAC4C,MAAP,GAAgB,QAA7B,EAAuC;AAAEC,MAAAA,OAAO,EAAEN;AAAX,KAAvC,EACGO,IADH,CACQ,CAAC;AAAEV,MAAAA;AAAF,KAAD,KAAc;AAClB,WAAKZ,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEwB;AAAT,OAAd;AACD,KAHH,EAIGY,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA/C,MAAAA,KAAK,CAAC+C,KAAN,CAAY,sBAAZ;AACD,KARH;AASD;;AAlL8B;;AAiPjC,eAAe9C,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  TextField,\n  UploadFileField,\n  DateField,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nclass Snapshot extends Component {\n  state = {\n    snapshot: {\n      id: 0,\n      customerId: \"\",\n      roomId: \"\",\n      amount: \"\",\n      startDate: \"\",\n    },\n    customers: [],\n    rooms: [],\n    file: \"\",\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    customerId: Yup.number().required().label(\"Customer\"),\n    roomId: Yup.number().required().label(\"Room\"),\n    amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n    startDate: Yup.date().required().label(\"Start Date\"),\n  });\n\n  render() {\n    const { snapshot, customers, rooms, file } = this.state;\n    const fileImage = URL.createObjectURL(\n      new Blob([this.handleStringToArray(file)], { type: \"image/png\" })\n    );\n\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {snapshot.id === 0 ? \"New Snapshot\" : \"Update Snapshot\"}\n            </Card.Title>\n          </Card.Header>\n          <Formik\n            initialValues={snapshot}\n            enableReinitialize={true}\n            validationSchema={this.schema}\n            onSubmit={(snapshot, { resetForm }) => {\n              resetForm();\n              this.setState({ snapshot });\n              this.handleSubmit(snapshot);\n            }}\n          >\n            {() => (\n              <>\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"customerId\"\n                        label=\"Customer\"\n                        options={customers.map((c) => ({\n                          label: c.name,\n                          value: c.id,\n                        }))}\n                        required\n                        show={true}\n                        onShow={this.handleShow}\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"roomId\"\n                        label=\"Room\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <TextField\n                        name=\"amount\"\n                        label=\"Amount\"\n                        required\n                        type=\"number\"\n                      />\n                    </Col>\n                    <Col>\n                      <DateField name=\"startDate\" label=\"start Date\" required />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <UploadFileField\n                        name=\"document\"\n                        file=\"file\"\n                        label=\"Document\"\n                        type=\"file\"\n                        setFile={this.handleFile}\n                      />\n                      {file && (\n                        <a href={fileImage} download>\n                          <img\n                            width=\"400\"\n                            height=\"400\"\n                            src={fileImage}\n                            alt=\"\"\n                          />\n                        </a>\n                      )}\n                    </Col>\n                  </Row>\n                </Card.Body>\n                <Card.Footer className=\"text-center\">\n                  <SubmitBtn />\n                </Card.Footer>\n              </>\n            )}\n          </Formik>\n        </Card>\n      </>\n    );\n  }\n\n  handlePapulate = (customer) => {\n    const { customers, snapshot } = this.state;\n    snapshot.customerId = customer.id;\n\n    this.setState({ customers: [customer, ...customers], snapshot });\n  };\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n  handleFile = (file) => {\n    this.setState({ file });\n  };\n  componentDidMount() {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const { id } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/snapshots/\" + id, { headers: auth })\n        .then(({ data }) => {\n          delete data.endDate;\n          delete data.isCurrent;\n          delete data.customer;\n          delete data.room;\n\n          this.setState({ file: data.document });\n          delete data.document;\n          this.setState({ snapshot: data });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n\n    Services.get(Config.apiUrl + \"/customers\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ customers: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n\n    Services.get(Config.apiUrl + \"/rooms\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ rooms: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleStringToArray = (str = \"\") => {\n    const array = str.split(\",\");\n    const buffer = [];\n\n    for (let index = 0; index < array.length; index++) {\n      buffer[index] = array[index];\n    }\n\n    const data = new Uint8Array(buffer);\n\n    return data;\n  };\n  handleSubmit = () => {\n    const { snapshot, file } = this.state;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const data = { ...snapshot, document: file };\n\n    this.setState({\n      snapshot: {\n        id: 0,\n        customerId: \"\",\n        roomId: \"\",\n        amount: \"\",\n        startDate: snapshot.startDate,\n      },\n      file: \"\",\n    });\n\n    if (snapshot.id === 0) {\n      Services.post(Config.apiUrl + \"/snapshots\", data, { headers: auth })\n        .then(() => {\n          toast.success(\"Successful Registred.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/snapshots/\" + data.id, data, {\n        headers: auth,\n      })\n        .then(() => {\n          toast.info(\"Successful Updates.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    }\n  };\n}\n\nexport default Snapshot;\n"]},"metadata":{},"sourceType":"module"}