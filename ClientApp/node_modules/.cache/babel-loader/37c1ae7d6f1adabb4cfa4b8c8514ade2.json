{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport { SelectField, SubmitBtn } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport Fontawesome from \"react-fontawesome\";\nimport Select from \"react-select\";\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChecklistForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chechlist: {\n        id: 0,\n        equibmentId: \"\",\n        equibmenTypeId: \"\",\n        shift: \"\"\n      },\n      tableHeaders: [{\n        label: \"Name\",\n        field: \"label\"\n      }, {\n        label: \"\",\n        field: \"edit\"\n      }],\n      equibments: [{\n        value: 1,\n        label: \"FORKLIFT\"\n      }, {\n        value: 2,\n        label: \"ITV\"\n      }, {\n        value: 3,\n        label: \"MHC\"\n      }, {\n        value: 4,\n        label: \"MC\"\n      }, {\n        value: 5,\n        label: \"RTG\"\n      }, {\n        value: 6,\n        label: \"ECH\"\n      }, {\n        value: 7,\n        label: \"RS\"\n      }],\n      shifts: [{\n        value: 1,\n        label: \"7:00 - 11:00 am\"\n      }, {\n        value: 2,\n        label: \"12:00 - 4:00 pm\"\n      }, {\n        value: 3,\n        label: \"5:00 - 7:00 pm\"\n      }, {\n        value: 4,\n        label: \"7:00 - 11:00 pm\"\n      }, {\n        value: 5,\n        label: \"12:00 - 4:00 am\"\n      }, {\n        value: 6,\n        label: \"5:00 - 7:00 am\"\n      }],\n      forklifts: [],\n      ITVes: [],\n      MHCes: [],\n      MCes: [],\n      RTGes: [],\n      ECHes: [],\n      RSes: [],\n      equibmentTypes: [],\n      CheckLists: [],\n      forkliftCheck: [{\n        value: \"hydraulicControls\",\n        label: \"Hydraulic controls\"\n      }, {\n        value: \"steering\",\n        label: \"Steering\"\n      }, {\n        value: \"handBreak\",\n        label: \"Hand Break\"\n      }, {\n        value: \"lights\",\n        label: \"Lights\"\n      }, {\n        value: \"hornsAndAlarms\",\n        label: \"Horns/ Alarms\"\n      }, {\n        value: \"seatBelts\",\n        label: \"Seat belts\"\n      }, {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"No tyre damage or insuficient inflation\"\n      }, {\n        value: \"noWheelsLooseNuts\",\n        label: \"No Wheels- loose nuts\"\n      }, {\n        value: \"noAccidentDamageOrFrameIncludingAttachements\",\n        label: \"No accident damage or frame including attachements\"\n      }, {\n        value: \"noExcessiveFluidLeaksEspeciallyUnderMachine\",\n        label: \"No excessive fluid leaks especially under machine\"\n      }, {\n        value: \"floodLightsAreWorking\",\n        label: \"Flood lights are working\"\n      }, {\n        value: \"tailLightsAreWorking\",\n        label: \"Tail lights are working\"\n      }, {\n        value: \"mirrors\",\n        label: \"Mirrors\"\n      }, {\n        value: \"rotatingAmbersLightsAreWorking \",\n        label: \"Rotating ambers lights are working\"\n      }, {\n        value: \"fireExtingisher\",\n        label: \"Fire extingisher\"\n      }],\n      ITVCheck: [{\n        value: \"hydraulicControls\",\n        label: \"Hydraulic controls\"\n      }, {\n        value: \"steering\",\n        label: \"Steering\"\n      }, {\n        value: \"checkWindowsAreCleanAndNotDamaged\",\n        label: \"Check windows are clean and not damaged\"\n      }, {\n        value: \"handBreakAndWindscreenWipers\",\n        label: \"Hand-break &windscreen wipers\"\n      }, {\n        value: \"vMT\",\n        label: \"VMT\"\n      }, {\n        value: \"radioCommunication\",\n        label: \"Radio Communication\"\n      }, {\n        value: \"ensure5thwheelAtCorrectHeight\",\n        label: \"Ensure 5th wheel at correct height\"\n      }, {\n        value: \"lights\",\n        label: \"Lights\"\n      }, {\n        value: \"speedLimitOperating\",\n        label: \"Speed limit operating\"\n      }, {\n        value: \"aC\",\n        label: \"AC\"\n      }, {\n        value: \"hornsAndAlarms\",\n        label: \"Horns/ Alarms\"\n      }, {\n        value: \"seatBelts\",\n        label: \"Seat belts\"\n      }, {\n        value: \"brakes\",\n        label: \"Brakes\"\n      }, {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"No tyre damage or insuficient inflation\"\n      }, {\n        value: \"noWheelsLooseNuts\",\n        label: \"No Wheels- loose nuts\"\n      }, {\n        value: \"noAccidentDamageOrFrameIncludingAttachements\",\n        label: \"No accident damage or frame including attachements\"\n      }, {\n        value: \"noExcessiveFluidLeaksEspeciallyMnderMachine\",\n        label: \"No excessive fluid leaks especially under machine\"\n      }, {\n        value: \"floodLightsAreWorking\",\n        label: \"Flood lights are working\"\n      }, {\n        value: \"tailLightsAreWorking\",\n        label: \"Tail lights are working\"\n      }, {\n        value: \"mirrors\",\n        label: \"Mirrors\"\n      }, {\n        value: \"turntableLockingBarInFullyLatchedPosition\",\n        label: \"Turntable locking bar in fully latched position\"\n      }, {\n        value: \"trailerSuzieHosesAndCableSecure\",\n        label: \"Trailer Suzie hoses and cable secure\"\n      }, {\n        value: \"trailerLegsLiftedToFullHeight\",\n        label: \"Trailer legs lifted to full height\"\n      }, {\n        value: \"fireExtingisher\",\n        label: \"Fire extingisher\"\n      }, {\n        value: \"deiselLevel\",\n        label: \"Deisel level\"\n      }, {\n        value: \"hMR\",\n        label: \"HMR\"\n      }],\n      MHC: [{\n        value: \"EngineFluidLevelCorrect\",\n        label: \"Hydraulic controls\"\n      }, {\n        value: \"HydraulicFluidLevelCorrect\",\n        label: \"Steering\"\n      }, {\n        value: \"HydraulicSystemExhibitsNoApparentWeepingOrLeaks\",\n        label: \"Check windows are clean and not damaged\"\n      }, {\n        value: \"AirSystemexhibitsNoAudibleLeaks\",\n        label: \"Hand-break &windscreen wipers\"\n      }, {\n        value: \"TyrePressureAccetableAndTireNotDamaged\",\n        label: \"VMT\"\n      }, {\n        value: \"TelescopingBoomExhibitsNoDamageToRuctureWearPadsBoomStopsOrCylinder\",\n        label: \"Radio Communication\"\n      }, {\n        value: \"WireRopeFreeOfDirtExcessLubekinksAndWiresAndSooledCorrectl\",\n        label: \"Ensure 5th wheel at correct height\"\n      }, {\n        value: \"ReevingCorrect\",\n        label: \"Lights\"\n      }, {\n        value: \"WedgeAocketsAndWireRopeClipsNotDistortedCrackedOrMissing\",\n        label: \"Speed limit operating\"\n      }, {\n        value: \"AllAndHookAreFreeToSwivelAndRotate\",\n        label: \"AC\"\n      }, {\n        value: \"OutriggerFloatsSecuredWithPadIn\",\n        label: \"Horns/ Alarms\"\n      }, {\n        value: \"Cab\",\n        label: \"Seat belts\"\n      }, {\n        value: \"HandrailsInPlaceAndNotDamaged\",\n        label: \"Brakes\"\n      }, {\n        value: \"OperatorManualInVehicle\",\n        label: \"No tyre damage or insuficient inflation\"\n      }, {\n        value: \"LoadChartLegibleAndVisibleToOperator\",\n        label: \"No Wheels- loose nuts\"\n      }, {\n        value: \"HandSignalChartVisibleToWorkers\",\n        label: \"No accident damage or frame including attachements\"\n      }, {\n        value: \"ChargedFireExtinguisherInplace\",\n        label: \"No excessive fluid leaks especially under machine\"\n      }, {\n        value: \"CabGlassNotCrackedAndWipersAreFunctional\",\n        label: \"Flood lights are working\"\n      }, {\n        value: \"LoadMomentIndicatorOperational\",\n        label: \"Tail lights are working\"\n      }, {\n        value: \"DrumRotationIndicatorFunctioning\",\n        label: \"Mirrors\"\n      }, {\n        value: \"BoomLengthIndicatorFunctioning\",\n        label: \"Turntable locking bar in fully latched position\"\n      }, {\n        value: \"BoomAngleIndicatorFunctioning\",\n        label: \"Trailer Suzie hoses and cable secure\"\n      }, {\n        value: \"EngineHydraulicAirElectricalOilPressureTemperatureAandFuel\",\n        label: \"Trailer legs lifted to full height\"\n      }, {\n        value: \"CorrectCounterweightForTheLoad\",\n        label: \"Fire extingisher\"\n      }, {\n        value: \"MainHoistControlFunctioning\",\n        label: \"Turntable locking bar in fully latched position\"\n      }, {\n        value: \"AntiTwoBlockInLaceAndFunctioning\",\n        label: \"Trailer Suzie hoses and cable secure\"\n      }, {\n        value: \"SwingBrake\",\n        label: \"Trailer legs lifted to full height\"\n      }, {\n        value: \"AuxiliaryHoistControlFunctioning\",\n        label: \"Fire extingisher\"\n      }, {\n        value: \"DieselFuelLeakage\",\n        label: \"Fire extingisher\"\n      }, {\n        value: \"EngineHourMeter\",\n        label: \"Deisel level\"\n      }, {\n        value: \"FuelLevelReading\",\n        label: \"HMR\"\n      }]\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      customerId: Yup.number().required().label(\"Customer\"),\n      roomId: Yup.number().required().label(\"Room\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      startDate: Yup.date().required().label(\"Start Date\")\n    });\n\n    this.handleEquinment = id => {\n      const {\n        forklifts,\n        forkliftCheck,\n        ITVes,\n        ITVCheck,\n        MHCes,\n        MCes,\n        RTGes,\n        ECHes,\n        RSes\n      } = this.state;\n\n      if (id === 1) {\n        this.setState({\n          equibmentTypes: forklifts,\n          CheckLists: forkliftCheck\n        });\n      } else if (id === 2) {\n        this.setState({\n          equibmentTypes: ITVes,\n          CheckLists: ITVCheck\n        });\n      } else if (id === 3) {\n        this.setState({\n          equibmentTypes: MHCes\n        });\n      } else if (id === 4) {\n        this.setState({\n          equibmentTypes: MCes\n        });\n      } else if (id === 5) {\n        this.setState({\n          equibmentTypes: RTGes\n        });\n      } else if (id === 6) {\n        this.setState({\n          equibmentTypes: ECHes\n        });\n      } else if (id === 7) {\n        this.setState({\n          equibmentTypes: RSes\n        });\n      } else {\n        return [];\n      }\n    };\n\n    this.handleChecklist = value => {\n      const {\n        forkliftCheck\n      } = this.state;\n      const data = forkliftCheck.map(f => {\n        if (f.value === value) {\n          f.isTrue = f.isTrue ? false : true;\n          return f;\n        }\n\n        return f;\n      });\n      this.setState({\n        forkliftCheck: data\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        chechlist,\n        forkliftCheck\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      console.log(forkliftCheck); // Services.post(Config.apiUrl + \"/rentals\", data, { headers: auth })\n      //     .then(() => {\n      //         toast.success(\"Successful Registred.\");\n      //     })\n      //     .catch((error) => {\n      //         console.log(error);\n      //         if (error.response && error.response.data) {\n      //             toast.error(error.response.data);\n      //         } else {\n      //             toast.error(\"Something went wrong\");\n      //         }\n      //     });\n    };\n  }\n\n  render() {\n    const {\n      chechlist,\n      equibments,\n      shifts,\n      tableHeaders,\n      CheckLists,\n      equibmentTypes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: chechlist,\n          enableReinitialize: true,\n          onSubmit: (chechlist, {\n            resetForm\n          }) => {\n            resetForm();\n            this.setState({\n              chechlist\n            });\n            this.handleSubmit(chechlist);\n          },\n          children: ({\n            values\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    children: [\"Equibment \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 59\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    name: \"equibmentId\",\n                    onChange: e => this.handleEquinment(e.value),\n                    options: equibments,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"shiftId\",\n                    label: \"Shift\",\n                    options: shifts,\n                    required: true,\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"equibmentTypeId\",\n                    label: \"Equibment Type\",\n                    options: equibmentTypes.map(fork => ({\n                      label: fork.name,\n                      value: fork.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n                hover: false,\n                paging: false,\n                entries: 15,\n                pagesAmount: 15,\n                data: {\n                  columns: tableHeaders,\n                  rows: CheckLists.map(obj => {\n                    obj.edit = /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      className: \"form-control mr-5\",\n                      onChange: () => this.handleChecklist(obj.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 60\n                    }, this);\n                    return obj;\n                  })\n                },\n                searchTop: false,\n                searchBottom: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/forklift\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        forklifts: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/itv\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        ITVes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/mhc\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        MHCes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/mc\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        MCes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rtg\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        RTGes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/ech\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        ECHes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rs\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        RSes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default ChecklistForm;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","MDBDataTableV5","SelectField","SubmitBtn","Config","Services","toast","Fontawesome","Select","FormGroup","FormLabel","ChecklistForm","state","chechlist","id","equibmentId","equibmenTypeId","shift","tableHeaders","label","field","equibments","value","shifts","forklifts","ITVes","MHCes","MCes","RTGes","ECHes","RSes","equibmentTypes","CheckLists","forkliftCheck","ITVCheck","MHC","schema","object","number","customerId","required","roomId","amount","min","max","startDate","date","handleEquinment","setState","handleChecklist","data","map","f","isTrue","handleSubmit","auth","Authorization","localStorage","console","log","render","resetForm","values","e","fork","name","columns","rows","obj","edit","componentDidMount","get","apiUrl","headers","then","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport {\n    SelectField,\n    SubmitBtn,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport Fontawesome from \"react-fontawesome\";\nimport Select from \"react-select\";\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\n\nclass ChecklistForm extends Component {\n    state = {\n        chechlist: {\n            id: 0,\n            equibmentId: \"\",\n            equibmenTypeId: \"\",\n            shift: \"\",\n        },\n        tableHeaders: [\n            { label: \"Name\", field: \"label\" },\n            { label: \"\", field: \"edit\" },\n        ],\n        equibments: [\n            { value: 1, label: \"FORKLIFT\" },\n            { value: 2, label: \"ITV\" },\n            { value: 3, label: \"MHC\" },\n            { value: 4, label: \"MC\" },\n            { value: 5, label: \"RTG\" },\n            { value: 6, label: \"ECH\" },\n            { value: 7, label: \"RS\" }\n        ],\n        shifts: [\n            { value: 1, label: \"7:00 - 11:00 am\" },\n            { value: 2, label: \"12:00 - 4:00 pm\" },\n            { value: 3, label: \"5:00 - 7:00 pm\" },\n            { value: 4, label: \"7:00 - 11:00 pm\" },\n            { value: 5, label: \"12:00 - 4:00 am\" },\n            { value: 6, label: \"5:00 - 7:00 am\" }\n        ],\n        forklifts: [],\n        ITVes: [],\n        MHCes: [],\n        MCes: [],\n        RTGes: [],\n        ECHes: [],\n        RSes: [],\n        equibmentTypes: [],\n        CheckLists: [],\n        forkliftCheck: [\n            { value: \"hydraulicControls\", label: \"Hydraulic controls\", },\n            { value: \"steering\", label: \"Steering\", },\n            { value: \"handBreak\", label: \"Hand Break\", },\n            { value: \"lights\", label: \"Lights\", },\n            { value: \"hornsAndAlarms\", label: \"Horns/ Alarms\", },\n            { value: \"seatBelts\", label: \"Seat belts\", },\n            { value: \"noTyreDamageOrInsuficientInflation\", label: \"No tyre damage or insuficient inflation\", },\n            { value: \"noWheelsLooseNuts\", label: \"No Wheels- loose nuts\", },\n            { value: \"noAccidentDamageOrFrameIncludingAttachements\", label: \"No accident damage or frame including attachements\", },\n            { value: \"noExcessiveFluidLeaksEspeciallyUnderMachine\", label: \"No excessive fluid leaks especially under machine\", },\n            { value: \"floodLightsAreWorking\", label: \"Flood lights are working\", },\n            { value: \"tailLightsAreWorking\", label: \"Tail lights are working\", },\n            { value: \"mirrors\", label: \"Mirrors\", },\n            { value: \"rotatingAmbersLightsAreWorking \", label: \"Rotating ambers lights are working\", },\n            { value: \"fireExtingisher\", label: \"Fire extingisher\", },\n        ],\n        ITVCheck: [\n            { value: \"hydraulicControls\", label: \"Hydraulic controls\", },\n            { value: \"steering\", label: \"Steering\", },\n            { value: \"checkWindowsAreCleanAndNotDamaged\", label: \"Check windows are clean and not damaged\", },\n            { value: \"handBreakAndWindscreenWipers\", label: \"Hand-break &windscreen wipers\", },\n            { value: \"vMT\", label: \"VMT\", },\n            { value: \"radioCommunication\", label: \"Radio Communication\", },\n            { value: \"ensure5thwheelAtCorrectHeight\", label: \"Ensure 5th wheel at correct height\", },\n            { value: \"lights\", label: \"Lights\", },\n            { value: \"speedLimitOperating\", label: \"Speed limit operating\", },\n            { value: \"aC\", label: \"AC\", },\n            { value: \"hornsAndAlarms\", label: \"Horns/ Alarms\", },\n            { value: \"seatBelts\", label: \"Seat belts\", },\n            { value: \"brakes\", label: \"Brakes\", },\n            { value: \"noTyreDamageOrInsuficientInflation\", label: \"No tyre damage or insuficient inflation\", },\n            { value: \"noWheelsLooseNuts\", label: \"No Wheels- loose nuts\", },\n            { value: \"noAccidentDamageOrFrameIncludingAttachements\", label: \"No accident damage or frame including attachements\", },\n            { value: \"noExcessiveFluidLeaksEspeciallyMnderMachine\", label: \"No excessive fluid leaks especially under machine\", },\n            { value: \"floodLightsAreWorking\", label: \"Flood lights are working\", },\n            { value: \"tailLightsAreWorking\", label: \"Tail lights are working\", },\n            { value: \"mirrors\", label: \"Mirrors\", },\n            { value: \"turntableLockingBarInFullyLatchedPosition\", label: \"Turntable locking bar in fully latched position\", },\n            { value: \"trailerSuzieHosesAndCableSecure\", label: \"Trailer Suzie hoses and cable secure\", },\n            { value: \"trailerLegsLiftedToFullHeight\", label: \"Trailer legs lifted to full height\", },\n            { value: \"fireExtingisher\", label: \"Fire extingisher\", },\n            { value: \"deiselLevel\", label: \"Deisel level\", },\n            { value: \"hMR\", label: \"HMR\", },\n        ],\n        MHC: [\n            { value: \"EngineFluidLevelCorrect\", label: \"Hydraulic controls\", },\n            { value: \"HydraulicFluidLevelCorrect\", label: \"Steering\", },\n            { value: \"HydraulicSystemExhibitsNoApparentWeepingOrLeaks\", label: \"Check windows are clean and not damaged\", },\n            { value: \"AirSystemexhibitsNoAudibleLeaks\", label: \"Hand-break &windscreen wipers\", },\n            { value: \"TyrePressureAccetableAndTireNotDamaged\", label: \"VMT\", },\n            { value: \"TelescopingBoomExhibitsNoDamageToRuctureWearPadsBoomStopsOrCylinder\", label: \"Radio Communication\", },\n            { value: \"WireRopeFreeOfDirtExcessLubekinksAndWiresAndSooledCorrectl\", label: \"Ensure 5th wheel at correct height\", },\n            { value: \"ReevingCorrect\", label: \"Lights\", },\n            { value: \"WedgeAocketsAndWireRopeClipsNotDistortedCrackedOrMissing\", label: \"Speed limit operating\", },\n            { value: \"AllAndHookAreFreeToSwivelAndRotate\", label: \"AC\", },\n            { value: \"OutriggerFloatsSecuredWithPadIn\", label: \"Horns/ Alarms\", },\n            { value: \"Cab\", label: \"Seat belts\", },\n            { value: \"HandrailsInPlaceAndNotDamaged\", label: \"Brakes\", },\n            { value: \"OperatorManualInVehicle\", label: \"No tyre damage or insuficient inflation\", },\n            { value: \"LoadChartLegibleAndVisibleToOperator\", label: \"No Wheels- loose nuts\", },\n            { value: \"HandSignalChartVisibleToWorkers\", label: \"No accident damage or frame including attachements\", },\n            { value: \"ChargedFireExtinguisherInplace\", label: \"No excessive fluid leaks especially under machine\", },\n            { value: \"CabGlassNotCrackedAndWipersAreFunctional\", label: \"Flood lights are working\", },\n            { value: \"LoadMomentIndicatorOperational\", label: \"Tail lights are working\", },\n            { value: \"DrumRotationIndicatorFunctioning\", label: \"Mirrors\", },\n            { value: \"BoomLengthIndicatorFunctioning\", label: \"Turntable locking bar in fully latched position\", },\n            { value: \"BoomAngleIndicatorFunctioning\", label: \"Trailer Suzie hoses and cable secure\", },\n            { value: \"EngineHydraulicAirElectricalOilPressureTemperatureAandFuel\", label: \"Trailer legs lifted to full height\", },\n            { value: \"CorrectCounterweightForTheLoad\", label: \"Fire extingisher\", },\n\n            { value: \"MainHoistControlFunctioning\", label: \"Turntable locking bar in fully latched position\", },\n            { value: \"AntiTwoBlockInLaceAndFunctioning\", label: \"Trailer Suzie hoses and cable secure\", },\n            { value: \"SwingBrake\", label: \"Trailer legs lifted to full height\", },\n            { value: \"AuxiliaryHoistControlFunctioning\", label: \"Fire extingisher\", },\n            { value: \"DieselFuelLeakage\", label: \"Fire extingisher\", },\n\n\n            { value: \"EngineHourMeter\", label: \"Deisel level\", },\n            { value: \"FuelLevelReading\", label: \"HMR\", },\n        ]\n    };\n\n    schema = Yup.object({\n        id: Yup.number().label(\"Id\"),\n        customerId: Yup.number().required().label(\"Customer\"),\n        roomId: Yup.number().required().label(\"Room\"),\n        amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n        startDate: Yup.date().required().label(\"Start Date\"),\n    });\n\n    render() {\n        const { chechlist, equibments, shifts, tableHeaders, CheckLists, equibmentTypes } = this.state;\n\n\n        return (\n            <>\n                <Card>\n                    <Card.Header>\n                        <Card.Title>\n                            {chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"}\n                        </Card.Title>\n                    </Card.Header>\n                    <Formik\n                        initialValues={chechlist}\n                        enableReinitialize={true}\n                        onSubmit={(chechlist, { resetForm }) => {\n                            resetForm();\n                            this.setState({ chechlist });\n                            this.handleSubmit(chechlist);\n                        }}\n                    >\n                        {({ values }) => (\n                            <>\n                                <Card.Body>\n                                    <Row>\n                                        <Col>\n                                            <FormLabel>\n                                                Equibment <span className=\"text-danger\">*</span>\n                                            </FormLabel>\n                                            <Select\n                                                name=\"equibmentId\"\n                                                onChange={(e) => this.handleEquinment(e.value)}\n                                                options={equibments}\n                                                required\n                                            />\n                                        </Col>\n                                        <Col>\n                                            <SelectField\n                                                name=\"shiftId\"\n                                                label=\"Shift\"\n                                                options={shifts}\n                                                required\n                                                disabled={true}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <SelectField\n                                                name=\"equibmentTypeId\"\n                                                label=\"Equibment Type\"\n                                                options={equibmentTypes.map((fork) => ({ label: fork.name, value: fork.id }))}\n                                                required\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <MDBDataTableV5\n                                        hover={false}\n                                        paging={false}\n                                        entries={15}\n                                        pagesAmount={15}\n                                        data={{\n                                            columns: tableHeaders,\n                                            rows: CheckLists.map((obj) => {\n                                                obj.edit = <input type=\"checkbox\" className=\"form-control mr-5\" onChange={() => this.handleChecklist(obj.value)} />\n\n\n                                                return obj;\n                                            }),\n                                        }}\n                                        searchTop={false}\n                                        searchBottom={false}\n                                    />\n                                    <Row>\n\n                                    </Row>\n                                </Card.Body>\n                                <Card.Footer className=\"text-center\">\n                                    <SubmitBtn />\n                                </Card.Footer>\n                            </>\n                        )}\n                    </Formik>\n                </Card>\n            </>\n        );\n    }\n\n\n    handleEquinment = (id) => {\n        const { forklifts, forkliftCheck, ITVes, ITVCheck, MHCes, MCes, RTGes, ECHes, RSes } = this.state;\n\n        if (id === 1) {\n\n            this.setState({ equibmentTypes: forklifts, CheckLists: forkliftCheck })\n        }\n        else if (id === 2) {\n\n            this.setState({ equibmentTypes: ITVes, CheckLists: ITVCheck })\n        }\n        else if (id === 3) {\n\n            this.setState({ equibmentTypes: MHCes })\n        }\n        else if (id === 4) {\n\n            this.setState({ equibmentTypes: MCes })\n        }\n        else if (id === 5) {\n\n            this.setState({ equibmentTypes: RTGes })\n        }\n        else if (id === 6) {\n\n            this.setState({ equibmentTypes: ECHes })\n        }\n        else if (id === 7) {\n\n            this.setState({ equibmentTypes: RSes })\n        }\n        else {\n            return []\n        }\n    }\n\n    handleChecklist = (value) => {\n        const { forkliftCheck } = this.state;\n        const data = forkliftCheck.map(f => {\n            if (f.value === value) {\n                f.isTrue = f.isTrue ? false : true;\n\n                return f;\n            }\n\n            return f;\n        })\n\n        this.setState({ forkliftCheck: data });\n\n    }\n\n    componentDidMount() {\n        const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n\n        Services.get(Config.apiUrl + \"/forklift\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ forklifts: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/itv\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ ITVes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/mhc\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ MHCes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/mc\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ MCes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/rtg\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ RTGes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/ech\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ ECHes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/rs\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ RSes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n    }\n\n    handleSubmit = () => {\n        const { chechlist, forkliftCheck } = this.state;\n        const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n        console.log(forkliftCheck);\n\n        // Services.post(Config.apiUrl + \"/rentals\", data, { headers: auth })\n        //     .then(() => {\n        //         toast.success(\"Successful Registred.\");\n        //     })\n        //     .catch((error) => {\n        //         console.log(error);\n\n        //         if (error.response && error.response.data) {\n        //             toast.error(error.response.data);\n        //         } else {\n        //             toast.error(\"Something went wrong\");\n        //         }\n        //     });\n    };\n}\n\nexport default ChecklistForm;\n"]},"metadata":{},"sourceType":"module"}