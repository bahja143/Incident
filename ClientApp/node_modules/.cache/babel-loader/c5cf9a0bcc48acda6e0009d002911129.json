{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/Receipt/ReceiptForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn, TextField, TextAreaField, DateField } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ReceiptForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      receipt: {\n        id: 0,\n        rentalId: \"\",\n        amount: \"\",\n        type: \"\",\n        date: new Date(),\n        description: \"\"\n      },\n      rentals: [],\n      balance: {\n        rentalId: \"\",\n        amount: \"\"\n      },\n      initialErrors: {},\n      typesOfPayment: [{\n        label: \"Cash\",\n        value: \"Cash\"\n      }, {\n        label: \"Zaad\",\n        value: \"Zaad\"\n      }, {\n        label: \"E-Dahab\",\n        value: \"E-Dahab\"\n      }, {\n        label: \"Check\",\n        value: \"Check\"\n      }, {\n        label: \"Bank Account\",\n        value: \"Bank Account\"\n      }]\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      rentalId: Yup.number().required().label(\"Rental\"),\n      amount: Yup.number().required().min(1).max(10000).label(\"Amount\"),\n      date: Yup.date().required().label(\"Date\"),\n      description: Yup.string().label(\"Description\")\n    });\n\n    this.handleBalance = receipt => {\n      let {\n        balance,\n        initialErrors\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n\n      if (receipt.rentalId !== \"\" && balance.rentalId !== receipt.rentalId) {\n        balance.rentalId = receipt.rentalId;\n        Services.get(Config.apiUrl + \"/balance/\" + receipt.rentalId, {\n          headers: auth\n        }).then(({\n          data\n        }) => {\n          balance.amount = data;\n          this.setState({\n            balance\n          });\n        }).catch(error => {\n          console.log(error);\n          toast.error(\"Something went wrong\");\n        });\n        this.setState({\n          balance\n        });\n      }\n\n      if (receipt.amount !== \"\") {\n        if (receipt.amount > balance.amount) {\n          initialErrors.amount = \"Check balance!\";\n          this.setState({\n            initialErrors\n          });\n        } else {\n          delete initialErrors.amount;\n          this.setState({\n            initialErrors\n          });\n        }\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        receipt,\n        balance,\n        initialErrors,\n        rentals\n      } = this.state;\n      const customer = rentals.find(r => r.id === receipt.rentalId).customer;\n      const totalRemaning = balance.amount;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      if (initialErrors[\"amount\"]) return;\n      balance.amount = \"\";\n      this.setState({\n        receipt: {\n          id: 0,\n          rentalId: \"\",\n          amount: \"\",\n          date: receipt.date,\n          description: \"\"\n        },\n        balance: {\n          rentalId: \"\",\n          amount: \"\"\n        }\n      });\n\n      if (receipt.id === 0) {\n        Services.post(Config.apiUrl + \"/receipts\", receipt, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n          Services.get(\"https://gtsomapi.com/integration/api/Sms/SendByOne?Body=\" + \"Ali Gobanimo Business Center: Waxaa bixisay lacag dhan \" + receipt.amount + \" doller. waxana kugu harray lacag dhan \" + (totalRemaning - receipt.amount) + \" dollar\" + \"&Phone=\" + customer.tellphone + \"&Security.Username=Agbc&Security.Password=$Gobanimo2021\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/receipts/\" + receipt.id, receipt, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      receipt,\n      rentals,\n      balance,\n      initialErrors,\n      typesOfPayment\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: receipt.id === 0 ? \"Receipt form\" : \"Update Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: receipt,\n        initialErrors: initialErrors,\n        validate: e => this.handleBalance(e),\n        enableReinitialize: true,\n        validationSchema: this.schema,\n        onSubmit: (receipt, {\n          resetForm\n        }) => {\n          resetForm();\n          this.setState({\n            receipt\n          });\n          this.handleSubmit(receipt);\n        },\n        children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  name: \"rentalId\",\n                  label: \"Rental\",\n                  options: rentals.map(c => ({\n                    label: c.customer.name + \" (\" + c.room.roomNumber + \")\",\n                    value: c.id\n                  })),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      name: \"amount\",\n                      label: \"Amount\",\n                      required: true,\n                      type: \"number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      children: \"Balance\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      disabled: true,\n                      value: balance.amount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 25\n                    }, this), initialErrors[\"amount\"] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-danger\",\n                      children: initialErrors[\"amount\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  name: \"type\",\n                  label: \"Type of payment\",\n                  options: typesOfPayment,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(DateField, {\n                  name: \"date\",\n                  label: \"Date\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(TextAreaField, {\n                  name: \"description\",\n                  label: \"Description\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/receipts/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          receipt: data\n        });\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n    }\n\n    Services.get(Config.apiUrl + \"/rentals\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rentals: data.filter(r => r.isCurrent)\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default ReceiptForm;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/Receipt/ReceiptForm.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","FormLabel","SelectField","SubmitBtn","TextField","TextAreaField","DateField","Config","Services","toast","ReceiptForm","state","receipt","id","rentalId","amount","type","date","Date","description","rentals","balance","initialErrors","typesOfPayment","label","value","schema","object","number","required","min","max","string","handleBalance","auth","Authorization","localStorage","get","apiUrl","headers","then","data","setState","catch","error","console","log","handleSubmit","customer","find","r","totalRemaning","post","success","tellphone","response","put","info","render","e","resetForm","map","c","name","room","roomNumber","componentDidMount","props","match","params","filter","isCurrent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  TextField,\n  TextAreaField,\n  DateField,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nclass ReceiptForm extends Component {\n  state = {\n    receipt: {\n      id: 0,\n      rentalId: \"\",\n      amount: \"\",\n      type: \"\",\n      date: new Date(),\n      description: \"\",\n    },\n    rentals: [],\n    balance: { rentalId: \"\", amount: \"\" },\n    initialErrors: {},\n    typesOfPayment: [\n      { label: \"Cash\", value: \"Cash\" },\n      { label: \"Zaad\", value: \"Zaad\" },\n      { label: \"E-Dahab\", value: \"E-Dahab\" },\n      { label: \"Check\", value: \"Check\" },\n      { label: \"Bank Account\", value: \"Bank Account\" },\n    ],\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    rentalId: Yup.number().required().label(\"Rental\"),\n    amount: Yup.number().required().min(1).max(10000).label(\"Amount\"),\n    date: Yup.date().required().label(\"Date\"),\n    description: Yup.string().label(\"Description\"),\n  });\n\n  render() {\n    const { receipt, rentals, balance, initialErrors, typesOfPayment } =\n      this.state;\n\n    return (\n      <Card>\n        <Card.Header>\n          <Card.Title>\n            {receipt.id === 0 ? \"Receipt form\" : \"Update Receipt\"}\n          </Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={receipt}\n          initialErrors={initialErrors}\n          validate={(e) => this.handleBalance(e)}\n          enableReinitialize={true}\n          validationSchema={this.schema}\n          onSubmit={(receipt, { resetForm }) => {\n            resetForm();\n            this.setState({ receipt });\n            this.handleSubmit(receipt);\n          }}\n        >\n          {() => (\n            <>\n              <Card.Body>\n                <Row>\n                  <Col>\n                    <SelectField\n                      name=\"rentalId\"\n                      label=\"Rental\"\n                      options={rentals.map((c) => ({\n                        label: c.customer.name + \" (\" + c.room.roomNumber + \")\",\n                        value: c.id,\n                      }))}\n                      required\n                    />\n                  </Col>\n                  <Col>\n                    <Row>\n                      <Col>\n                        <TextField\n                          name=\"amount\"\n                          label=\"Amount\"\n                          required\n                          type=\"number\"\n                        />\n                      </Col>\n                      <Col>\n                        <FormLabel>Balance</FormLabel>\n                        <input\n                          className=\"form-control\"\n                          disabled\n                          value={balance.amount}\n                        />\n                        {initialErrors[\"amount\"] && (\n                          <div className=\"text-danger\">\n                            {initialErrors[\"amount\"]}\n                          </div>\n                        )}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <SelectField\n                      name=\"type\"\n                      label=\"Type of payment\"\n                      options={typesOfPayment}\n                      required\n                    />\n                  </Col>\n                  <Col>\n                    <DateField name=\"date\" label=\"Date\" required />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <TextAreaField\n                      name=\"description\"\n                      label=\"Description\"\n                      required\n                    />\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer className=\"text-center\">\n                <SubmitBtn />\n              </Card.Footer>\n            </>\n          )}\n        </Formik>\n      </Card>\n    );\n  }\n\n  handleBalance = (receipt) => {\n    let { balance, initialErrors } = this.state;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    if (receipt.rentalId !== \"\" && balance.rentalId !== receipt.rentalId) {\n      balance.rentalId = receipt.rentalId;\n\n      Services.get(Config.apiUrl + \"/balance/\" + receipt.rentalId, {\n        headers: auth,\n      })\n        .then(({ data }) => {\n          balance.amount = data;\n          this.setState({ balance });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n\n      this.setState({ balance });\n    }\n\n    if (receipt.amount !== \"\") {\n      if (receipt.amount > balance.amount) {\n        initialErrors.amount = \"Check balance!\";\n\n        this.setState({ initialErrors });\n      } else {\n        delete initialErrors.amount;\n\n        this.setState({ initialErrors });\n      }\n    }\n  };\n  componentDidMount() {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const { id } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/receipts/\" + id, { headers: auth })\n        .then(({ data }) => {\n          this.setState({ receipt: data });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n\n    Services.get(Config.apiUrl + \"/rentals\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ rentals: data.filter((r) => r.isCurrent) });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleSubmit = () => {\n    const { receipt, balance, initialErrors, rentals } = this.state;\n    const customer = rentals.find((r) => r.id === receipt.rentalId).customer;\n    const totalRemaning = balance.amount;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    if (initialErrors[\"amount\"]) return;\n\n    balance.amount = \"\";\n    this.setState({\n      receipt: {\n        id: 0,\n        rentalId: \"\",\n        amount: \"\",\n        date: receipt.date,\n        description: \"\",\n      },\n      balance: { rentalId: \"\", amount: \"\" },\n    });\n\n    if (receipt.id === 0) {\n      Services.post(Config.apiUrl + \"/receipts\", receipt, { headers: auth })\n        .then(() => {\n          toast.success(\"Successful Registred.\");\n\n          Services.get(\n            \"https://gtsomapi.com/integration/api/Sms/SendByOne?Body=\" +\n              \"Ali Gobanimo Business Center: Waxaa bixisay lacag dhan \" +\n              receipt.amount +\n              \" doller. waxana kugu harray lacag dhan \" +\n              (totalRemaning - receipt.amount) +\n              \" dollar\" +\n              \"&Phone=\" +\n              customer.tellphone +\n              \"&Security.Username=Agbc&Security.Password=$Gobanimo2021\"\n          );\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/receipts/\" + receipt.id, receipt, {\n        headers: auth,\n      })\n        .then(() => {\n          toast.info(\"Successful Updates.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    }\n  };\n}\n\nexport default ReceiptForm;\n"]},"metadata":{},"sourceType":"module"}