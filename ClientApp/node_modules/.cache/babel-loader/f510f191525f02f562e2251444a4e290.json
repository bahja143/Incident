{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Invoice/NewInvoice.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn, TextField, TextAreaField, DateField } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NewInvoice extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      invoice: {\n        id: 0,\n        rentalId: \"\",\n        amount: \"\",\n        date: \"\",\n        description: \"\"\n      },\n      rentals: []\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      rentalId: Yup.number().required().label(\"Rental\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      date: Yup.date().required().label(\"Date\"),\n      description: Yup.string().label(\"Description\")\n    });\n\n    this.handleSubmit = () => {\n      const {\n        invoice,\n        rentals\n      } = this.state;\n      const customer = rentals.find(r => r.id === invoice.rentalId).customer;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      this.setState({\n        invoice: {\n          id: 0,\n          rentalId: \"\",\n          amount: \"\",\n          date: invoice.date,\n          description: \"\"\n        }\n      });\n      Services.post(Config.apiUrl + \"/invoices\", invoice, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        toast.success(\"Successful Registred.\");\n        Services.get(\"https://gtsomapi.com/integration/api/Sms/SendByOne?Body=\" + \"Ali Gobanimo Business Center: Waxaa lagugu dalacay lacag dhan \" + invoice.amount + \" doller oo ah \" + invoice.description + \"&Phone=\" + customer.tellphone + \"&Security.Username=Agbc&Security.Password=$Gobanimo2021\");\n        this.props.history.push(\"/invoice/print/\" + data.id);\n      }).catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.data) {\n          toast.error(error.response.data);\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      invoice,\n      rentals\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: invoice.id === 0 ? \"New Invoice\" : \"Update Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: invoice,\n        enableReinitialize: true,\n        validationSchema: this.schema,\n        onSubmit: (invoice, {\n          resetForm\n        }) => {\n          resetForm();\n          this.setState({\n            invoice\n          });\n          this.handleSubmit(invoice);\n        },\n        children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  name: \"rentalId\",\n                  label: \"Rental\",\n                  options: rentals.map(c => ({\n                    label: c.customer.name + \" (\" + c.room.roomNumber + \")\",\n                    value: c.id\n                  })),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"amount\",\n                  label: \"Amount\",\n                  required: true,\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(DateField, {\n                  name: \"date\",\n                  label: \"Date\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(TextAreaField, {\n                  name: \"description\",\n                  label: \"Description\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/invoices/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          invoice: data\n        });\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n    }\n\n    Services.get(Config.apiUrl + \"/rentals\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rentals: data.filter(r => r.isCurrent)\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default NewInvoice;","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/Invoice/NewInvoice.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","SelectField","SubmitBtn","TextField","TextAreaField","DateField","Config","Services","toast","NewInvoice","state","invoice","id","rentalId","amount","date","description","rentals","schema","object","number","label","required","min","max","string","handleSubmit","customer","find","r","auth","Authorization","localStorage","setState","post","apiUrl","headers","then","data","success","get","tellphone","props","history","push","catch","error","console","log","response","render","resetForm","map","c","name","room","roomNumber","value","componentDidMount","match","params","filter","isCurrent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  TextField,\n  TextAreaField,\n  DateField,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nclass NewInvoice extends Component {\n  state = {\n    invoice: {\n      id: 0,\n      rentalId: \"\",\n      amount: \"\",\n      date: \"\",\n      description: \"\",\n    },\n    rentals: [],\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    rentalId: Yup.number().required().label(\"Rental\"),\n    amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n    date: Yup.date().required().label(\"Date\"),\n    description: Yup.string().label(\"Description\"),\n  });\n\n  render() {\n    const { invoice, rentals } = this.state;\n\n    return (\n      <Card>\n        <Card.Header>\n          <Card.Title>\n            {invoice.id === 0 ? \"New Invoice\" : \"Update Invoice\"}\n          </Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={invoice}\n          enableReinitialize={true}\n          validationSchema={this.schema}\n          onSubmit={(invoice, { resetForm }) => {\n            resetForm();\n            this.setState({ invoice });\n            this.handleSubmit(invoice);\n          }}\n        >\n          {() => (\n            <>\n              <Card.Body>\n                <Row>\n                  <Col>\n                    <SelectField\n                      name=\"rentalId\"\n                      label=\"Rental\"\n                      options={rentals.map((c) => ({\n                        label: c.customer.name + \" (\" + c.room.roomNumber + \")\",\n                        value: c.id,\n                      }))}\n                      required\n                    />\n                  </Col>\n                  <Col>\n                    <TextField\n                      name=\"amount\"\n                      label=\"Amount\"\n                      required\n                      type=\"number\"\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <DateField name=\"date\" label=\"Date\" required />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <TextAreaField\n                      name=\"description\"\n                      label=\"Description\"\n                      required\n                    />\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer className=\"text-center\">\n                <SubmitBtn />\n              </Card.Footer>\n            </>\n          )}\n        </Formik>\n      </Card>\n    );\n  }\n  componentDidMount() {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const { id } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/invoices/\" + id, { headers: auth })\n        .then(({ data }) => {\n          this.setState({ invoice: data });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n\n    Services.get(Config.apiUrl + \"/rentals\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ rentals: data.filter((r) => r.isCurrent) });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleSubmit = () => {\n    const { invoice, rentals } = this.state;\n    const customer = rentals.find((r) => r.id === invoice.rentalId).customer;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    this.setState({\n      invoice: {\n        id: 0,\n        rentalId: \"\",\n        amount: \"\",\n        date: invoice.date,\n        description: \"\",\n      },\n    });\n\n    Services.post(Config.apiUrl + \"/invoices\", invoice, { headers: auth })\n      .then(({ data }) => {\n        toast.success(\"Successful Registred.\");\n\n        Services.get(\n          \"https://gtsomapi.com/integration/api/Sms/SendByOne?Body=\" +\n            \"Ali Gobanimo Business Center: Waxaa lagugu dalacay lacag dhan \" +\n            invoice.amount +\n            \" doller oo ah \" +\n            invoice.description +\n            \"&Phone=\" +\n            customer.tellphone +\n            \"&Security.Username=Agbc&Security.Password=$Gobanimo2021\"\n        );\n\n        this.props.history.push(\"/invoice/print/\" + data.id);\n      })\n      .catch((error) => {\n        console.log(error);\n\n        if (error.response && error.response.data) {\n          toast.error(error.response.data);\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      });\n  };\n}\n\nexport default NewInvoice;\n"]},"metadata":{},"sourceType":"module"}