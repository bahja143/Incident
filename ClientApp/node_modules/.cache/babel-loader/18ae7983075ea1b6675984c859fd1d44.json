{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/snapshot/Snapshot.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn, TextField, UploadFileField, DateField, TextAreaField } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Snapshot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      snapshot: {\n        id: 0,\n        customerId: \"\",\n        roomId: \"\",\n        amount: \"\",\n        startDate: \"\"\n      },\n      customers: [],\n      rooms: [],\n      file: \"\",\n      shifts: [{\n        value: \"7:00 - 11:00 am\",\n        label: \"7:00 - 11:00 am\"\n      }, {\n        value: \"12:00 - 4:00 pm\",\n        label: \"12:00 - 4:00 pm\"\n      }, {\n        value: \"5:00 - 7:00 pm\",\n        label: \"5:00 - 7:00 pm\"\n      }, {\n        value: \"7:00 - 11:00 pm\",\n        label: \"7:00 - 11:00 pm\"\n      }, {\n        value: \"12:00 - 4:00 am\",\n        label: \"12:00 - 4:00 am\"\n      }, {\n        value: \"5:00 - 7:00 am\",\n        label: \"5:00 - 7:00 am\"\n      }],\n      categories: [{\n        label: \"Safety\",\n        value: \"safety\"\n      }, {\n        label: \"Environment\",\n        value: \"environment\"\n      }, {\n        label: \"Security\",\n        value: \"security\"\n      }],\n      incidentTypes: [{\n        label: \"Not wearing ppe\",\n        value: \"not wearing ppe\"\n      }, {\n        label: \"Driving high speed\",\n        value: \"driving high speed\"\n      }, {\n        label: \"Working/Standing under suspension\",\n        value: \"working/Standing under suspension\"\n      }],\n      locations: [{\n        label: \"Main Yard\",\n        value: \"main yard\"\n      }]\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      customerId: Yup.number().required().label(\"Customer\"),\n      roomId: Yup.number().required().label(\"Room\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      startDate: Yup.date().required().label(\"Start Date\")\n    });\n\n    this.handlePapulate = customer => {\n      const {\n        customers,\n        snapshot\n      } = this.state;\n      snapshot.customerId = customer.id;\n      this.setState({\n        customers: [customer, ...customers],\n        snapshot\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleFile = file => {\n      this.setState({\n        file\n      });\n    };\n\n    this.handleStringToArray = (str = \"\") => {\n      const array = str.split(\",\");\n      const buffer = [];\n\n      for (let index = 0; index < array.length; index++) {\n        buffer[index] = array[index];\n      }\n\n      const data = new Uint8Array(buffer);\n      return data;\n    };\n\n    this.handleSubmit = () => {\n      const {\n        snapshot,\n        file\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      const data = { ...snapshot,\n        document: file\n      };\n      this.setState({\n        snapshot: {\n          id: 0,\n          customerId: \"\",\n          roomId: \"\",\n          amount: \"\",\n          startDate: snapshot.startDate\n        },\n        file: \"\"\n      });\n\n      if (snapshot.id === 0) {\n        Services.post(Config.apiUrl + \"/snapshots\", data, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/snapshots/\" + data.id, data, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      snapshot,\n      customers,\n      rooms,\n      file,\n      shifts\n    } = this.state;\n    const fileImage = URL.createObjectURL(new Blob([this.handleStringToArray(file)], {\n      type: \"image/png\"\n    }));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: snapshot.id === 0 ? \"New Snapshot\" : \"Update Snapshot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: snapshot,\n          enableReinitialize: true,\n          validationSchema: this.schema,\n          onSubmit: (snapshot, {\n            resetForm\n          }) => {\n            resetForm();\n            this.setState({\n              snapshot\n            });\n            this.handleSubmit(snapshot);\n          },\n          children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"category\",\n                    label: \"Category\",\n                    options: customers.map(c => ({\n                      label: c.name,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"incidentTyp\",\n                    label: \"Incident Type\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"location\",\n                    label: \"Location\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"shift\",\n                    label: \"shift\",\n                    options: shifts,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"peopleInvoved\",\n                    label: \"People Involved\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"equibment\",\n                    label: \"shift\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"responsible\",\n                    label: \"Responsible\",\n                    options: rooms.map(c => ({\n                      label: c.roomNumber,\n                      value: c.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"action\",\n                    label: \"Action on site\",\n                    required: true,\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"action\",\n                    label: \"Action on site\",\n                    required: true,\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(UploadFileField, {\n                    name: \"document\",\n                    file: \"file\",\n                    label: \"Document\",\n                    type: \"file\",\n                    setFile: this.handleFile\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this), file && /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: fileImage,\n                    download: true,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      width: \"400\",\n                      height: \"400\",\n                      src: fileImage,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(TextAreaField, {\n                    name: \"action\",\n                    label: \"Action on site\",\n                    required: true,\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/snapshots/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        delete data.endDate;\n        delete data.isCurrent;\n        delete data.customer;\n        delete data.room;\n        this.setState({\n          file: data.document\n        });\n        delete data.document;\n        this.setState({\n          snapshot: data\n        });\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n    }\n\n    Services.get(Config.apiUrl + \"/customers\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        customers: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rooms\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rooms: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default Snapshot;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/snapshot/Snapshot.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","SelectField","SubmitBtn","TextField","UploadFileField","DateField","TextAreaField","Config","Services","toast","Snapshot","state","snapshot","id","customerId","roomId","amount","startDate","customers","rooms","file","shifts","value","label","categories","incidentTypes","locations","schema","object","number","required","min","max","date","handlePapulate","customer","setState","handleClose","show","handleShow","handleFile","handleStringToArray","str","array","split","buffer","index","length","data","Uint8Array","handleSubmit","auth","Authorization","localStorage","document","post","apiUrl","headers","then","success","catch","error","console","log","response","put","info","render","fileImage","URL","createObjectURL","Blob","type","resetForm","map","c","name","roomNumber","componentDidMount","props","match","params","get","endDate","isCurrent","room"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  TextField,\n  UploadFileField,\n  DateField,\n  TextAreaField,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nclass Snapshot extends Component {\n  state = {\n    snapshot: {\n      id: 0,\n      customerId: \"\",\n      roomId: \"\",\n      amount: \"\",\n      startDate: \"\",\n    },\n    customers: [],\n    rooms: [],\n    file: \"\",\n    shifts: [\n      { value: \"7:00 - 11:00 am\", label: \"7:00 - 11:00 am\" },\n      { value: \"12:00 - 4:00 pm\", label: \"12:00 - 4:00 pm\" },\n      { value: \"5:00 - 7:00 pm\", label: \"5:00 - 7:00 pm\" },\n      { value: \"7:00 - 11:00 pm\", label: \"7:00 - 11:00 pm\" },\n      { value: \"12:00 - 4:00 am\", label: \"12:00 - 4:00 am\" },\n      { value: \"5:00 - 7:00 am\", label: \"5:00 - 7:00 am\" },\n    ],\n    categories: [\n      { label: \"Safety\", value: \"safety\" },\n      { label: \"Environment\", value: \"environment\" },\n      { label: \"Security\", value: \"security\" },\n    ],\n    incidentTypes: [\n      { label: \"Not wearing ppe\", value: \"not wearing ppe\" },\n      { label: \"Driving high speed\", value: \"driving high speed\" },\n      {\n        label: \"Working/Standing under suspension\",\n        value: \"working/Standing under suspension\",\n      },\n    ],\n    locations: [{ label: \"Main Yard\", value: \"main yard\" }],\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    customerId: Yup.number().required().label(\"Customer\"),\n    roomId: Yup.number().required().label(\"Room\"),\n    amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n    startDate: Yup.date().required().label(\"Start Date\"),\n  });\n\n  render() {\n    const { snapshot, customers, rooms, file, shifts } = this.state;\n    const fileImage = URL.createObjectURL(\n      new Blob([this.handleStringToArray(file)], { type: \"image/png\" })\n    );\n\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {snapshot.id === 0 ? \"New Snapshot\" : \"Update Snapshot\"}\n            </Card.Title>\n          </Card.Header>\n          <Formik\n            initialValues={snapshot}\n            enableReinitialize={true}\n            validationSchema={this.schema}\n            onSubmit={(snapshot, { resetForm }) => {\n              resetForm();\n              this.setState({ snapshot });\n              this.handleSubmit(snapshot);\n            }}\n          >\n            {() => (\n              <>\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"category\"\n                        label=\"Category\"\n                        options={customers.map((c) => ({\n                          label: c.name,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"incidentTyp\"\n                        label=\"Incident Type\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"location\"\n                        label=\"Location\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"shift\"\n                        label=\"shift\"\n                        options={shifts}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"peopleInvoved\"\n                        label=\"People Involved\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"equibment\"\n                        label=\"shift\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"responsible\"\n                        label=\"Responsible\"\n                        options={rooms.map((c) => ({\n                          label: c.roomNumber,\n                          value: c.id,\n                        }))}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <TextField\n                        name=\"action\"\n                        label=\"Action on site\"\n                        required\n                        type=\"number\"\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <TextField\n                        name=\"action\"\n                        label=\"Action on site\"\n                        required\n                        type=\"number\"\n                      />\n                    </Col>\n                    <Col>\n                      <UploadFileField\n                        name=\"document\"\n                        file=\"file\"\n                        label=\"Document\"\n                        type=\"file\"\n                        setFile={this.handleFile}\n                      />\n                      {file && (\n                        <a href={fileImage} download>\n                          <img\n                            width=\"400\"\n                            height=\"400\"\n                            src={fileImage}\n                            alt=\"\"\n                          />\n                        </a>\n                      )}\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <TextAreaField\n                        name=\"action\"\n                        label=\"Action on site\"\n                        required\n                        type=\"number\"\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n                <Card.Footer className=\"text-center\">\n                  <SubmitBtn />\n                </Card.Footer>\n              </>\n            )}\n          </Formik>\n        </Card>\n      </>\n    );\n  }\n\n  handlePapulate = (customer) => {\n    const { customers, snapshot } = this.state;\n    snapshot.customerId = customer.id;\n\n    this.setState({ customers: [customer, ...customers], snapshot });\n  };\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n  handleFile = (file) => {\n    this.setState({ file });\n  };\n  componentDidMount() {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const { id } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/snapshots/\" + id, { headers: auth })\n        .then(({ data }) => {\n          delete data.endDate;\n          delete data.isCurrent;\n          delete data.customer;\n          delete data.room;\n\n          this.setState({ file: data.document });\n          delete data.document;\n          this.setState({ snapshot: data });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n\n    Services.get(Config.apiUrl + \"/customers\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ customers: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n\n    Services.get(Config.apiUrl + \"/rooms\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ rooms: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleStringToArray = (str = \"\") => {\n    const array = str.split(\",\");\n    const buffer = [];\n\n    for (let index = 0; index < array.length; index++) {\n      buffer[index] = array[index];\n    }\n\n    const data = new Uint8Array(buffer);\n\n    return data;\n  };\n  handleSubmit = () => {\n    const { snapshot, file } = this.state;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const data = { ...snapshot, document: file };\n\n    this.setState({\n      snapshot: {\n        id: 0,\n        customerId: \"\",\n        roomId: \"\",\n        amount: \"\",\n        startDate: snapshot.startDate,\n      },\n      file: \"\",\n    });\n\n    if (snapshot.id === 0) {\n      Services.post(Config.apiUrl + \"/snapshots\", data, { headers: auth })\n        .then(() => {\n          toast.success(\"Successful Registred.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/snapshots/\" + data.id, data, {\n        headers: auth,\n      })\n        .then(() => {\n          toast.info(\"Successful Updates.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    }\n  };\n}\n\nexport default Snapshot;\n"]},"metadata":{},"sourceType":"module"}