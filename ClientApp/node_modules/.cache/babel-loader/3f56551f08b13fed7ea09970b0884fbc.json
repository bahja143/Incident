{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/ServicesRequest/ServiceRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn, DateField, FieldArrayForm } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ServiceRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      service: {\n        id: 0,\n        categoryId: \"\",\n        date: new Date(),\n        items: []\n      },\n      categories: [],\n      items: [],\n      allItems: [],\n      balance: \"\"\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      categoryId: Yup.number().required().label(\"Customer\"),\n      date: Yup.date().required().label(\"Start Date\"),\n      items: Yup.array().min(1, \"Please select at least 1 item.\").label(\"Items\")\n    });\n\n    this.handleAddItem = id => {\n      const {\n        items,\n        allItems\n      } = this.state;\n      this.setState({\n        items: [allItems.find(i => i.id === id), ...items]\n      });\n    };\n\n    this.handleRemoveItem = id => {\n      const {\n        items\n      } = this.state;\n      this.setState({\n        items: items.filter(i => i.id !== id)\n      });\n    };\n\n    this.handleAddBalance = value => {\n      const {\n        balance\n      } = this.state;\n      this.setState({\n        balance: parseFloat(balance) + parseFloat(value)\n      });\n    };\n\n    this.handleSubBalance = value => {\n      const {\n        balance\n      } = this.state;\n      this.setState({\n        balance: balance - value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        service,\n        allItems\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      service.items.map(i => {\n        i.amount = parseFloat(i.amount);\n        return i;\n      });\n      this.setState({\n        service: {\n          id: 0,\n          categoryId: \"\",\n          date: new Date(),\n          items: []\n        },\n        items: allItems\n      });\n\n      if (service.id === 0) {\n        Services.post(Config.apiUrl + \"/services\", service, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/services/\" + service.id, service, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      service,\n      categories,\n      items,\n      balance,\n      allItems\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: service.id === 0 ? \"New Service Request\" : \"Update Service Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: service,\n        enableReinitialize: true,\n        validationSchema: this.schema,\n        onSubmit: (service, {\n          resetForm\n        }) => {\n          resetForm();\n          this.setState({\n            service\n          });\n          this.handleSubmit(service);\n        },\n        children: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  name: \"categoryId\",\n                  label: \"Category\",\n                  options: categories.map(c => ({\n                    label: c.name,\n                    value: c.id\n                  })),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(DateField, {\n                  name: \"date\",\n                  label: \"Date\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(FieldArrayForm, {\n                  name: \"items\",\n                  label: \"Select Item\",\n                  options: items.map(i => ({\n                    label: i.name + \" (\" + i.category.name + \")\",\n                    value: i.id\n                  })),\n                  allOptions: allItems.map(i => ({\n                    label: i.name + \" (\" + i.category.name + \")\",\n                    value: i.id\n                  })),\n                  balance: balance,\n                  onAdd: this.handleAddBalance,\n                  onSub: this.handleSubBalance,\n                  onRemoveItem: this.handleRemoveItem,\n                  onAddItem: this.handleAddItem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/services/\" + id, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          service: data\n        });\n      }).catch(error => {\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n    }\n\n    Services.get(Config.apiUrl + \"/serviceCategories\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        categories: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/budget/balance\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        balance: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/items\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        items: data,\n        allItems: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default ServiceRequest;","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/ServicesRequest/ServiceRequest.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","SelectField","SubmitBtn","DateField","FieldArrayForm","Config","Services","toast","ServiceRequest","state","service","id","categoryId","date","Date","items","categories","allItems","balance","schema","object","number","label","required","array","min","handleAddItem","setState","find","i","handleRemoveItem","filter","handleAddBalance","value","parseFloat","handleSubBalance","handleSubmit","auth","Authorization","localStorage","map","amount","post","apiUrl","headers","then","success","catch","error","console","log","response","data","put","info","render","resetForm","c","name","category","componentDidMount","props","match","params","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  DateField,\n  FieldArrayForm,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nclass ServiceRequest extends Component {\n  state = {\n    service: {\n      id: 0,\n      categoryId: \"\",\n      date: new Date(),\n      items: [],\n    },\n    categories: [],\n    items: [],\n    allItems: [],\n    balance: \"\",\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    categoryId: Yup.number().required().label(\"Customer\"),\n    date: Yup.date().required().label(\"Start Date\"),\n    items: Yup.array().min(1, \"Please select at least 1 item.\").label(\"Items\"),\n  });\n\n  render() {\n    const { service, categories, items, balance, allItems } = this.state;\n\n    return (\n      <Card>\n        <Card.Header>\n          <Card.Title>\n            {service.id === 0\n              ? \"New Service Request\"\n              : \"Update Service Request\"}\n          </Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={service}\n          enableReinitialize={true}\n          validationSchema={this.schema}\n          onSubmit={(service, { resetForm }) => {\n            resetForm();\n            this.setState({ service });\n            this.handleSubmit(service);\n          }}\n        >\n          {() => (\n            <>\n              <Card.Body>\n                <Row>\n                  <Col>\n                    <SelectField\n                      name=\"categoryId\"\n                      label=\"Category\"\n                      options={categories.map((c) => ({\n                        label: c.name,\n                        value: c.id,\n                      }))}\n                      required\n                    />\n                  </Col>\n                  <Col>\n                    <DateField name=\"date\" label=\"Date\" required />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <FieldArrayForm\n                      name=\"items\"\n                      label=\"Select Item\"\n                      options={items.map((i) => ({\n                        label: i.name + \" (\" + i.category.name + \")\",\n                        value: i.id,\n                      }))}\n                      allOptions={allItems.map((i) => ({\n                        label: i.name + \" (\" + i.category.name + \")\",\n                        value: i.id,\n                      }))}\n                      balance={balance}\n                      onAdd={this.handleAddBalance}\n                      onSub={this.handleSubBalance}\n                      onRemoveItem={this.handleRemoveItem}\n                      onAddItem={this.handleAddItem}\n                    />\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer className=\"text-center\">\n                <SubmitBtn />\n              </Card.Footer>\n            </>\n          )}\n        </Formik>\n      </Card>\n    );\n  }\n\n  handleAddItem = (id) => {\n    const { items, allItems } = this.state;\n\n    this.setState({ items: [allItems.find((i) => i.id === id), ...items] });\n  };\n  handleRemoveItem = (id) => {\n    const { items } = this.state;\n\n    this.setState({ items: items.filter((i) => i.id !== id) });\n  };\n  handleAddBalance = (value) => {\n    const { balance } = this.state;\n\n    this.setState({ balance: parseFloat(balance) + parseFloat(value) });\n  };\n  handleSubBalance = (value) => {\n    const { balance } = this.state;\n\n    this.setState({ balance: balance - value });\n  };\n  componentDidMount() {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const { id } = this.props.match.params;\n\n    if (id) {\n      Services.get(Config.apiUrl + \"/services/\" + id, {\n        headers: auth,\n      })\n        .then(({ data }) => {\n          this.setState({ service: data });\n        })\n        .catch((error) => {\n          console.log(error);\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n\n    Services.get(Config.apiUrl + \"/serviceCategories\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ categories: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n\n    Services.get(Config.apiUrl + \"/budget/balance\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ balance: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n\n    Services.get(Config.apiUrl + \"/items\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({ items: data, allItems: data });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleSubmit = () => {\n    const { service, allItems } = this.state;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    service.items.map((i) => {\n      i.amount = parseFloat(i.amount);\n\n      return i;\n    });\n\n    this.setState({\n      service: {\n        id: 0,\n        categoryId: \"\",\n        date: new Date(),\n        items: [],\n      },\n      items: allItems,\n    });\n\n    if (service.id === 0) {\n      Services.post(Config.apiUrl + \"/services\", service, { headers: auth })\n        .then(() => {\n          toast.success(\"Successful Registred.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/services/\" + service.id, service, {\n        headers: auth,\n      })\n        .then(() => {\n          toast.info(\"Successful Updates.\");\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    }\n  };\n}\n\nexport default ServiceRequest;\n"]},"metadata":{},"sourceType":"module"}