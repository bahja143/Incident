{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/ServiceCategory/ServiceCategories.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport FontAwesome from \"react-fontawesome\";\nimport NewServiceCategories from \"./NewServiceCategories\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = Yup.object({\n  id: Yup.number(),\n  name: Yup.string().min(5).max(50).required().label(\"Name\")\n});\n\nconst ServiceCategories = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [category, setCategory] = useState({\n    id: 0,\n    name: \"\"\n  });\n  const [tableHeaders] = useState([{\n    label: \"Name\",\n    field: \"name\"\n  }, {\n    label: \"\",\n    field: \"edit\"\n  }]);\n  useEffect(() => {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/serviceCategories\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      setCategories(data);\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }, [category]);\n\n  const handleSubmit = category => {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n\n    if (category.id === 0) {\n      Services.post(Config.apiUrl + \"/serviceCategories\", category, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        toast.success(\"Successful Registred.\");\n        setShow(false);\n        setCategories([data, ...categories]);\n      }).catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.data) {\n          toast.error(error.response.data);\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      });\n    } else {\n      Services.put(Config.apiUrl + \"/serviceCategories/\" + category.id, category, {\n        headers: auth\n      }).then(({\n        data\n      }) => {\n        toast.info(\"Successful Updates.\");\n        setShow(false);\n        setCategories([data, ...categories.filter(c => c.id !== category.id)]);\n      }).catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.data) {\n          toast.error(error.response.data);\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      });\n    }\n  };\n\n  const handleEdit = custom => {\n    const cust = { ...custom\n    };\n    delete cust.edit;\n    setCategory(cust);\n    setShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewServiceCategories, {\n      show: show,\n      setShow: setShow,\n      category: category,\n      schema: schema,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"float-right\",\n          onClick: () => {\n            setShow(true);\n            setCategory({\n              id: 0,\n              name: \"\"\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(FontAwesome, {\n            name: \"fas fa-plus-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), \" New Category\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Service Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n          hover: true,\n          entriesOptions: [10, 25, 50, 100, 250, 500, 1000],\n          entries: 10,\n          pagesAmount: 10,\n          data: {\n            columns: tableHeaders,\n            rows: categories.map(categ => {\n              categ.edit = /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleEdit(categ),\n                className: \"btn-light btn-sm\",\n                children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                  className: \"fas fa-edit text-primary\",\n                  style: {\n                    fontSize: 17\n                  },\n                  name: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this);\n              return categ;\n            })\n          },\n          pagingTop: true,\n          searchTop: true,\n          searchBottom: false,\n          fullPagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ServiceCategories, \"YiUOYVP9sajlNgHpuKU8OWdCc0k=\");\n\n_c = ServiceCategories;\nexport default ServiceCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceCategories\");","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/ServiceCategory/ServiceCategories.jsx"],"names":["React","useState","useEffect","Card","Button","Yup","FontAwesome","NewServiceCategories","Config","Services","toast","MDBDataTableV5","Fontawesome","schema","object","id","number","name","string","min","max","required","label","ServiceCategories","show","setShow","categories","setCategories","category","setCategory","tableHeaders","field","auth","Authorization","localStorage","get","apiUrl","headers","then","data","catch","error","console","log","handleSubmit","post","success","response","put","info","filter","c","handleEdit","custom","cust","edit","columns","rows","map","categ","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\n\nimport FontAwesome from \"react-fontawesome\";\nimport NewServiceCategories from \"./NewServiceCategories\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\n\nconst schema = Yup.object({\n  id: Yup.number(),\n  name: Yup.string().min(5).max(50).required().label(\"Name\"),\n});\n\nconst ServiceCategories = () => {\n  const [show, setShow] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [category, setCategory] = useState({\n    id: 0,\n    name: \"\",\n  });\n  const [tableHeaders] = useState([\n    { label: \"Name\", field: \"name\" },\n    { label: \"\", field: \"edit\" },\n  ]);\n\n  useEffect(() => {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/serviceCategories\", { headers: auth })\n      .then(({ data }) => {\n        setCategories(data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }, [category]);\n\n  const handleSubmit = (category) => {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    if (category.id === 0) {\n      Services.post(Config.apiUrl + \"/serviceCategories\", category, {\n        headers: auth,\n      })\n        .then(({ data }) => {\n          toast.success(\"Successful Registred.\");\n          setShow(false);\n          setCategories([data, ...categories]);\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(\n        Config.apiUrl + \"/serviceCategories/\" + category.id,\n        category,\n        {\n          headers: auth,\n        }\n      )\n        .then(({ data }) => {\n          toast.info(\"Successful Updates.\");\n          setShow(false);\n          setCategories([\n            data,\n            ...categories.filter((c) => c.id !== category.id),\n          ]);\n        })\n        .catch((error) => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    }\n  };\n  const handleEdit = (custom) => {\n    const cust = { ...custom };\n    delete cust.edit;\n    setCategory(cust);\n    setShow(true);\n  };\n\n  return (\n    <>\n      <NewServiceCategories\n        show={show}\n        setShow={setShow}\n        category={category}\n        schema={schema}\n        handleSubmit={handleSubmit}\n      />\n      <Card>\n        <Card.Header>\n          <Button\n            className=\"float-right\"\n            onClick={() => {\n              setShow(true);\n              setCategory({\n                id: 0,\n                name: \"\",\n              });\n            }}\n          >\n            <FontAwesome name=\"fas fa-plus-circle\" /> New Category\n          </Button>\n          <Card.Title>Service Categories</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <MDBDataTableV5\n            hover\n            entriesOptions={[10, 25, 50, 100, 250, 500, 1000]}\n            entries={10}\n            pagesAmount={10}\n            data={{\n              columns: tableHeaders,\n              rows: categories.map((categ) => {\n                categ.edit = (\n                  <Button\n                    onClick={() => handleEdit(categ)}\n                    className=\"btn-light btn-sm\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-edit text-primary\"\n                      style={{ fontSize: 17 }}\n                      name=\"edit\"\n                    />\n                  </Button>\n                );\n                return categ;\n              }),\n            }}\n            pagingTop\n            searchTop\n            searchBottom={false}\n            fullPagination\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ServiceCategories;\n"]},"metadata":{},"sourceType":"module"}