{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { SelectField, SubmitBtn } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChecklistForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chechlist: {\n        id: 0,\n        equibmentId: \"\",\n        equibmenTypeId: \"\",\n        shift: \"\"\n      },\n      equibments: [{\n        value: 1,\n        label: \"FORKLIFT\"\n      }, {\n        value: 2,\n        label: \"ITV\"\n      }, {\n        value: 3,\n        label: \"MHC\"\n      }, {\n        value: 4,\n        label: \"MC\"\n      }, {\n        value: 5,\n        label: \"RTG\"\n      }, {\n        value: 6,\n        label: \"ECH\"\n      }, {\n        value: 7,\n        label: \"RS\"\n      }],\n      shifts: [{\n        value: 1,\n        label: \"7:00 - 11:00 am\"\n      }, {\n        value: 2,\n        label: \"12:00 - 4:00 pm\"\n      }, {\n        value: 3,\n        label: \"5:00 - 7:00 pm\"\n      }, {\n        value: 4,\n        label: \"7:00 - 11:00 pm\"\n      }, {\n        value: 5,\n        label: \"12:00 - 4:00 am\"\n      }, {\n        value: 6,\n        label: \"5:00 - 7:00 am\"\n      }],\n      forklifts: [],\n      ITVes: [],\n      MHCes: [],\n      MCes: [],\n      RTGes: [],\n      ECHes: [],\n      RSes: [],\n      equibmentTypes: [],\n      forkliftCheck: [{\n        value: \"hydraulicControls\",\n        label: \"Hydraulic controls\"\n      }]\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      customerId: Yup.number().required().label(\"Customer\"),\n      roomId: Yup.number().required().label(\"Room\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      startDate: Yup.date().required().label(\"Start Date\")\n    });\n\n    this.handleEquibmentType = id => {\n      const {\n        chechlist,\n        equibments,\n        shifts,\n        forklifts,\n        ITVes,\n        MHCes,\n        MCes,\n        RTGes,\n        ECHes,\n        RSes\n      } = this.state;\n\n      if (id === 1) {\n        return forklifts;\n      } else if (id === 2) {\n        return ITVes;\n      } else if (id === 3) {\n        return MHCes;\n      } else if (id === 4) {\n        return MCes;\n      } else if (id === 5) {\n        return RTGes;\n      } else if (id === 6) {\n        return ECHes;\n      } else if (id === 7) {\n        return RSes;\n      } else {\n        return [];\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        chechlist,\n        file\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      const data = { ...chechlist,\n        document: file\n      };\n      this.setState({\n        chechlist: {\n          id: 0,\n          customerId: \"\",\n          roomId: \"\",\n          amount: \"\",\n          startDate: chechlist.startDate\n        },\n        file: \"\"\n      });\n\n      if (chechlist.id === 0) {\n        Services.post(Config.apiUrl + \"/rentals\", data, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/rentals/\" + data.id, data, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      chechlist,\n      equibments,\n      shifts,\n      equibmentTypes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: chechlist,\n          enableReinitialize: true,\n          validationSchema: this.schema,\n          onSubmit: (chechlist, {\n            resetForm\n          }) => {\n            resetForm();\n            this.setState({\n              chechlist\n            });\n            this.handleSubmit(chechlist);\n          },\n          children: ({\n            values\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"equibmentId\",\n                    label: \"Equibment\",\n                    options: equibments,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"shiftId\",\n                    label: \"Shift\",\n                    options: shifts,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"equibmentTypeId\",\n                    label: \"Equibment Type\",\n                    options: this.handleEquibmentType(values['equibmentId']).map(fork => ({\n                      label: fork.name,\n                      value: fork.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/forklift\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        forklifts: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/itv\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        ITVes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/mhc\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        MHCes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/mc\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        MCes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rtg\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        RTGes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/ech\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        ECHes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rs\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        RSes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default ChecklistForm;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","SelectField","SubmitBtn","Config","Services","toast","ChecklistForm","state","chechlist","id","equibmentId","equibmenTypeId","shift","equibments","value","label","shifts","forklifts","ITVes","MHCes","MCes","RTGes","ECHes","RSes","equibmentTypes","forkliftCheck","schema","object","number","customerId","required","roomId","amount","min","max","startDate","date","handleEquibmentType","handleSubmit","file","auth","Authorization","localStorage","data","document","setState","post","apiUrl","headers","then","success","catch","error","console","log","response","put","info","render","resetForm","values","map","fork","name","componentDidMount","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n    SelectField,\n    SubmitBtn,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\n\nclass ChecklistForm extends Component {\n    state = {\n        chechlist: {\n            id: 0,\n            equibmentId: \"\",\n            equibmenTypeId: \"\",\n            shift: \"\",\n        },\n        equibments: [\n            { value: 1, label: \"FORKLIFT\" },\n            { value: 2, label: \"ITV\" },\n            { value: 3, label: \"MHC\" },\n            { value: 4, label: \"MC\" },\n            { value: 5, label: \"RTG\" },\n            { value: 6, label: \"ECH\" },\n            { value: 7, label: \"RS\" }\n        ],\n        shifts: [\n            { value: 1, label: \"7:00 - 11:00 am\" },\n            { value: 2, label: \"12:00 - 4:00 pm\" },\n            { value: 3, label: \"5:00 - 7:00 pm\" },\n            { value: 4, label: \"7:00 - 11:00 pm\" },\n            { value: 5, label: \"12:00 - 4:00 am\" },\n            { value: 6, label: \"5:00 - 7:00 am\" }\n        ],\n        forklifts: [],\n        ITVes: [],\n        MHCes: [],\n        MCes: [],\n        RTGes: [],\n        ECHes: [],\n        RSes: [],\n        equibmentTypes: [],\n        forkliftCheck: [{ value: \"hydraulicControls\", label: \"Hydraulic controls\", }]\n    };\n\n    schema = Yup.object({\n        id: Yup.number().label(\"Id\"),\n        customerId: Yup.number().required().label(\"Customer\"),\n        roomId: Yup.number().required().label(\"Room\"),\n        amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n        startDate: Yup.date().required().label(\"Start Date\"),\n    });\n\n    render() {\n        const { chechlist, equibments, shifts, equibmentTypes } = this.state;\n\n\n        return (\n            <>\n                <Card>\n                    <Card.Header>\n                        <Card.Title>\n                            {chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"}\n                        </Card.Title>\n                    </Card.Header>\n                    <Formik\n                        initialValues={chechlist}\n                        enableReinitialize={true}\n                        validationSchema={this.schema}\n                        onSubmit={(chechlist, { resetForm }) => {\n                            resetForm();\n                            this.setState({ chechlist });\n                            this.handleSubmit(chechlist);\n                        }}\n                    >\n                        {({ values }) => (\n                            <>\n                                <Card.Body>\n                                    <Row>\n                                        <Col>\n                                            <SelectField\n                                                name=\"equibmentId\"\n                                                label=\"Equibment\"\n                                                options={equibments}\n                                                required\n                                            />\n                                        </Col>\n                                        <Col>\n                                            <SelectField\n                                                name=\"shiftId\"\n                                                label=\"Shift\"\n                                                options={shifts}\n                                                required\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <SelectField\n                                                name=\"equibmentTypeId\"\n                                                label=\"Equibment Type\"\n                                                options={this.handleEquibmentType(values['equibmentId']).map((fork) => ({ label: fork.name, value: fork.id }))}\n                                                required\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Card.Body>\n                                <Card.Footer className=\"text-center\">\n                                    <SubmitBtn />\n                                </Card.Footer>\n                            </>\n                        )}\n                    </Formik>\n                </Card>\n            </>\n        );\n    }\n\n    handleEquibmentType = (id) => {\n        const { chechlist, equibments, shifts, forklifts, ITVes, MHCes, MCes, RTGes, ECHes, RSes } = this.state;\n\n\n        if (id === 1) {\n\n            return forklifts;\n        }\n        else if (id === 2) {\n\n            return ITVes;\n        }\n        else if (id === 3) {\n\n            return MHCes;\n        }\n        else if (id === 4) {\n\n            return MCes;\n        }\n        else if (id === 5) {\n\n            return RTGes;\n        }\n        else if (id === 6) {\n\n            return ECHes;\n        }\n        else if (id === 7) {\n\n            return RSes;\n        }\n        else {\n            return []\n        }\n    }\n\n    componentDidMount() {\n        const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n\n        Services.get(Config.apiUrl + \"/forklift\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ forklifts: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/itv\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ ITVes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/mhc\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ MHCes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/mc\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ MCes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/rtg\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ RTGes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/ech\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ ECHes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/rs\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ RSes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n    }\n    handleSubmit = () => {\n        const { chechlist, file } = this.state;\n        const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n        const data = { ...chechlist, document: file };\n\n        this.setState({\n            chechlist: {\n                id: 0,\n                customerId: \"\",\n                roomId: \"\",\n                amount: \"\",\n                startDate: chechlist.startDate,\n            },\n            file: \"\",\n        });\n\n        if (chechlist.id === 0) {\n            Services.post(Config.apiUrl + \"/rentals\", data, { headers: auth })\n                .then(() => {\n                    toast.success(\"Successful Registred.\");\n                })\n                .catch((error) => {\n                    console.log(error);\n\n                    if (error.response && error.response.data) {\n                        toast.error(error.response.data);\n                    } else {\n                        toast.error(\"Something went wrong\");\n                    }\n                });\n        } else {\n            Services.put(Config.apiUrl + \"/rentals/\" + data.id, data, {\n                headers: auth,\n            })\n                .then(() => {\n                    toast.info(\"Successful Updates.\");\n                })\n                .catch((error) => {\n                    console.log(error);\n\n                    if (error.response && error.response.data) {\n                        toast.error(error.response.data);\n                    } else {\n                        toast.error(\"Something went wrong\");\n                    }\n                });\n        }\n    };\n}\n\nexport default ChecklistForm;\n"]},"metadata":{},"sourceType":"module"}