{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport { SelectField, SubmitBtn } from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport Fontawesome from \"react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChecklistForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chechlist: {\n        id: 0,\n        equibmentId: \"\",\n        equibmenTypeId: \"\",\n        shift: \"\"\n      },\n      equibments: [{\n        value: 1,\n        label: \"FORKLIFT\"\n      }, {\n        value: 2,\n        label: \"ITV\"\n      }, {\n        value: 3,\n        label: \"MHC\"\n      }, {\n        value: 4,\n        label: \"MC\"\n      }, {\n        value: 5,\n        label: \"RTG\"\n      }, {\n        value: 6,\n        label: \"ECH\"\n      }, {\n        value: 7,\n        label: \"RS\"\n      }],\n      shifts: [{\n        value: 1,\n        label: \"7:00 - 11:00 am\"\n      }, {\n        value: 2,\n        label: \"12:00 - 4:00 pm\"\n      }, {\n        value: 3,\n        label: \"5:00 - 7:00 pm\"\n      }, {\n        value: 4,\n        label: \"7:00 - 11:00 pm\"\n      }, {\n        value: 5,\n        label: \"12:00 - 4:00 am\"\n      }, {\n        value: 6,\n        label: \"5:00 - 7:00 am\"\n      }],\n      forklifts: [],\n      ITVes: [],\n      MHCes: [],\n      MCes: [],\n      RTGes: [],\n      ECHes: [],\n      RSes: [],\n      equibmentTypes: [],\n      forkliftCheck: [{\n        value: \"hydraulicControls\",\n        label: \"Hydraulic controls\"\n      }, {\n        value: \"steering \",\n        label: \"Steering\"\n      }, {\n        value: \"handBreak \",\n        label: \"Hand Break\"\n      }, {\n        value: \"lights \",\n        label: \"Lights\"\n      }, {\n        value: \"hornsAndAlarms\",\n        label: \"Horns/ Alarms \"\n      }, {\n        value: \"seatBelts\",\n        label: \"Seat belts \"\n      }, {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"No tyre damage or insuficient inflation\"\n      }, {\n        value: \"noWheelsLooseNuts\",\n        label: \"No Wheels- loose nuts\"\n      }, {\n        value: \"noAccidentDamageOrFrameIncludingAttachements \",\n        label: \"No accident damage or frame including attachements\"\n      }, {\n        value: \"noExcessiveFluidLeaksEspeciallyUnderMachine\",\n        label: \"No excessive fluid leaks especially under machine \"\n      }, {\n        value: \"floodLightsAreWorking \",\n        label: \"Flood lights are working \"\n      }, {\n        value: \"tailLightsAreWorking \",\n        label: \"Tail lights are working\"\n      }, {\n        value: \"mirrors \",\n        label: \"Mirrors\"\n      }, {\n        value: \"rotatingAmbersLightsAreWorking \",\n        label: \"Rotating ambers lights are working \"\n      }, {\n        value: \"fireExtingisher\",\n        label: \"Fire extingisher\"\n      }],\n      tableHeaders: [{\n        label: \"Name\",\n        field: \"label\"\n      }, {\n        label: \"\",\n        field: \"edit\"\n      }]\n    };\n    this.schema = Yup.object({\n      id: Yup.number().label(\"Id\"),\n      customerId: Yup.number().required().label(\"Customer\"),\n      roomId: Yup.number().required().label(\"Room\"),\n      amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n      startDate: Yup.date().required().label(\"Start Date\")\n    });\n\n    this.handleEquibmentType = id => {\n      const {\n        chechlist,\n        equibments,\n        shifts,\n        forklifts,\n        ITVes,\n        MHCes,\n        MCes,\n        RTGes,\n        ECHes,\n        RSes\n      } = this.state;\n\n      if (id === 1) {\n        return forklifts;\n      } else if (id === 2) {\n        return ITVes;\n      } else if (id === 3) {\n        return MHCes;\n      } else if (id === 4) {\n        return MCes;\n      } else if (id === 5) {\n        return RTGes;\n      } else if (id === 6) {\n        return ECHes;\n      } else if (id === 7) {\n        return RSes;\n      } else {\n        return [];\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        chechlist,\n        file\n      } = this.state;\n      const auth = {\n        Authorization: `bearer ${localStorage[\"token\"]}`\n      };\n      const data = { ...chechlist,\n        document: file\n      };\n      this.setState({\n        chechlist: {\n          id: 0,\n          customerId: \"\",\n          roomId: \"\",\n          amount: \"\",\n          startDate: chechlist.startDate\n        },\n        file: \"\"\n      });\n\n      if (chechlist.id === 0) {\n        Services.post(Config.apiUrl + \"/rentals\", data, {\n          headers: auth\n        }).then(() => {\n          toast.success(\"Successful Registred.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        Services.put(Config.apiUrl + \"/rentals/\" + data.id, data, {\n          headers: auth\n        }).then(() => {\n          toast.info(\"Successful Updates.\");\n        }).catch(error => {\n          console.log(error);\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      chechlist,\n      equibments,\n      shifts,\n      tableHeaders,\n      forkliftCheck\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: chechlist,\n          enableReinitialize: true,\n          validationSchema: this.schema,\n          onSubmit: (chechlist, {\n            resetForm\n          }) => {\n            resetForm();\n            this.setState({\n              chechlist\n            });\n            this.handleSubmit(chechlist);\n          },\n          children: ({\n            values\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"equibmentId\",\n                    label: \"Equibment\",\n                    options: equibments,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"shiftId\",\n                    label: \"Shift\",\n                    options: shifts,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"equibmentTypeId\",\n                    label: \"Equibment Type\",\n                    options: this.handleEquibmentType(values['equibmentId']).map(fork => ({\n                      label: fork.name,\n                      value: fork.id\n                    })),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n                hover: true,\n                entriesOptions: false,\n                entries: 15,\n                pagesAmount: 15,\n                data: {\n                  columns: tableHeaders,\n                  rows: forkliftCheck.map(user => {\n                    user.edit = user.status ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => this.handleStatus(user.id),\n                        className: \"btn btn-link\",\n                        children: \"Active\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-link\",\n                        onClick: () => this.handleUpdate(user),\n                        children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                          className: \"fas fa-edit text-primary\",\n                          style: {\n                            fontSize: 17\n                          },\n                          name: \"edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => this.handleStatus(user.id),\n                        className: \"btn btn-link\",\n                        children: \"Not active\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-link\",\n                        onClick: () => this.handleUpdate(user),\n                        children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                          className: \"fas fa-edit text-primary\",\n                          style: {\n                            fontSize: 17\n                          },\n                          name: \"edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 53\n                    }, this);\n                    return user;\n                  })\n                },\n                pagingTop: false,\n                searchTop: false,\n                searchBottom: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/forklift\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        forklifts: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/itv\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        ITVes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/mhc\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        MHCes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/mc\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        MCes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rtg\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        RTGes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/ech\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        ECHes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n    Services.get(Config.apiUrl + \"/rs\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        RSes: data\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n  }\n\n}\n\nexport default ChecklistForm;","map":{"version":3,"sources":["/home/abdisalam/Documents/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx"],"names":["React","Component","Formik","Yup","Card","Row","Col","MDBDataTableV5","SelectField","SubmitBtn","Config","Services","toast","Fontawesome","ChecklistForm","state","chechlist","id","equibmentId","equibmenTypeId","shift","equibments","value","label","shifts","forklifts","ITVes","MHCes","MCes","RTGes","ECHes","RSes","equibmentTypes","forkliftCheck","tableHeaders","field","schema","object","number","customerId","required","roomId","amount","min","max","startDate","date","handleEquibmentType","handleSubmit","file","auth","Authorization","localStorage","data","document","setState","post","apiUrl","headers","then","success","catch","error","console","log","response","put","info","render","resetForm","values","map","fork","name","columns","rows","user","edit","status","handleStatus","handleUpdate","fontSize","componentDidMount","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport {\n    SelectField,\n    SubmitBtn,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport Fontawesome from \"react-fontawesome\";\n\nclass ChecklistForm extends Component {\n    state = {\n        chechlist: {\n            id: 0,\n            equibmentId: \"\",\n            equibmenTypeId: \"\",\n            shift: \"\",\n        },\n        equibments: [\n            { value: 1, label: \"FORKLIFT\" },\n            { value: 2, label: \"ITV\" },\n            { value: 3, label: \"MHC\" },\n            { value: 4, label: \"MC\" },\n            { value: 5, label: \"RTG\" },\n            { value: 6, label: \"ECH\" },\n            { value: 7, label: \"RS\" }\n        ],\n        shifts: [\n            { value: 1, label: \"7:00 - 11:00 am\" },\n            { value: 2, label: \"12:00 - 4:00 pm\" },\n            { value: 3, label: \"5:00 - 7:00 pm\" },\n            { value: 4, label: \"7:00 - 11:00 pm\" },\n            { value: 5, label: \"12:00 - 4:00 am\" },\n            { value: 6, label: \"5:00 - 7:00 am\" }\n        ],\n        forklifts: [],\n        ITVes: [],\n        MHCes: [],\n        MCes: [],\n        RTGes: [],\n        ECHes: [],\n        RSes: [],\n        equibmentTypes: [],\n        forkliftCheck: [\n            { value: \"hydraulicControls\", label: \"Hydraulic controls\", },\n            { value: \"steering \", label: \"Steering\", },\n            { value: \"handBreak \", label: \"Hand Break\", },\n            { value: \"lights \", label: \"Lights\", },\n            { value: \"hornsAndAlarms\", label: \"Horns/ Alarms \", },\n            { value: \"seatBelts\", label: \"Seat belts \", },\n            { value: \"noTyreDamageOrInsuficientInflation\", label: \"No tyre damage or insuficient inflation\", },\n            { value: \"noWheelsLooseNuts\", label: \"No Wheels- loose nuts\", },\n            { value: \"noAccidentDamageOrFrameIncludingAttachements \", label: \"No accident damage or frame including attachements\", },\n            { value: \"noExcessiveFluidLeaksEspeciallyUnderMachine\", label: \"No excessive fluid leaks especially under machine \", },\n            { value: \"floodLightsAreWorking \", label: \"Flood lights are working \", },\n            { value: \"tailLightsAreWorking \", label: \"Tail lights are working\", },\n            { value: \"mirrors \", label: \"Mirrors\", },\n            { value: \"rotatingAmbersLightsAreWorking \", label: \"Rotating ambers lights are working \", },\n            { value: \"fireExtingisher\", label: \"Fire extingisher\", },\n        ],\n        tableHeaders: [\n            { label: \"Name\", field: \"label\" },\n            { label: \"\", field: \"edit\" },\n        ],\n    };\n\n    schema = Yup.object({\n        id: Yup.number().label(\"Id\"),\n        customerId: Yup.number().required().label(\"Customer\"),\n        roomId: Yup.number().required().label(\"Room\"),\n        amount: Yup.number().required().min(0).max(10000).label(\"Amount\"),\n        startDate: Yup.date().required().label(\"Start Date\"),\n    });\n\n    render() {\n        const { chechlist, equibments, shifts, tableHeaders, forkliftCheck } = this.state;\n\n\n        return (\n            <>\n                <Card>\n                    <Card.Header>\n                        <Card.Title>\n                            {chechlist.id === 0 ? \"New checklist\" : \"Update checklist\"}\n                        </Card.Title>\n                    </Card.Header>\n                    <Formik\n                        initialValues={chechlist}\n                        enableReinitialize={true}\n                        validationSchema={this.schema}\n                        onSubmit={(chechlist, { resetForm }) => {\n                            resetForm();\n                            this.setState({ chechlist });\n                            this.handleSubmit(chechlist);\n                        }}\n                    >\n                        {({ values }) => (\n                            <>\n                                <Card.Body>\n                                    <Row>\n                                        <Col>\n                                            <SelectField\n                                                name=\"equibmentId\"\n                                                label=\"Equibment\"\n                                                options={equibments}\n                                                required\n                                            />\n                                        </Col>\n                                        <Col>\n                                            <SelectField\n                                                name=\"shiftId\"\n                                                label=\"Shift\"\n                                                options={shifts}\n                                                required\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <SelectField\n                                                name=\"equibmentTypeId\"\n                                                label=\"Equibment Type\"\n                                                options={this.handleEquibmentType(values['equibmentId']).map((fork) => ({ label: fork.name, value: fork.id }))}\n                                                required\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <MDBDataTableV5\n                                        hover\n                                        entriesOptions={false}\n                                        entries={15}\n                                        pagesAmount={15}\n                                        data={{\n                                            columns: tableHeaders,\n                                            rows: forkliftCheck.map((user) => {\n                                                user.edit = user.status ? (\n                                                    <React.Fragment>\n                                                        <button\n                                                            onClick={() => this.handleStatus(user.id)}\n                                                            className=\"btn btn-link\"\n                                                        >\n                                                            Active\n                                                        </button>\n                                                        <button\n                                                            className=\"btn btn-link\"\n                                                            onClick={() => this.handleUpdate(user)}\n                                                        >\n                                                            <Fontawesome\n                                                                className=\"fas fa-edit text-primary\"\n                                                                style={{ fontSize: 17 }}\n                                                                name=\"edit\"\n                                                            />\n                                                        </button>\n                                                    </React.Fragment>\n                                                ) : (\n                                                    <React.Fragment>\n                                                        <button\n                                                            onClick={() => this.handleStatus(user.id)}\n                                                            className=\"btn btn-link\"\n                                                        >\n                                                            Not active\n                                                        </button>\n                                                        <button\n                                                            className=\"btn btn-link\"\n                                                            onClick={() => this.handleUpdate(user)}\n                                                        >\n                                                            <Fontawesome\n                                                                className=\"fas fa-edit text-primary\"\n                                                                style={{ fontSize: 17 }}\n                                                                name=\"edit\"\n                                                            />\n                                                        </button>\n                                                    </React.Fragment>\n                                                );\n\n                                                return user;\n                                            }),\n                                        }}\n                                        pagingTop={false}\n                                        searchTop={false}\n                                        searchBottom={false}\n                                    />\n                                    <Row>\n\n                                    </Row>\n                                </Card.Body>\n                                <Card.Footer className=\"text-center\">\n                                    <SubmitBtn />\n                                </Card.Footer>\n                            </>\n                        )}\n                    </Formik>\n                </Card>\n            </>\n        );\n    }\n\n    handleEquibmentType = (id) => {\n        const { chechlist, equibments, shifts, forklifts, ITVes, MHCes, MCes, RTGes, ECHes, RSes } = this.state;\n\n\n        if (id === 1) {\n\n            return forklifts;\n        }\n        else if (id === 2) {\n\n            return ITVes;\n        }\n        else if (id === 3) {\n\n            return MHCes;\n        }\n        else if (id === 4) {\n\n            return MCes;\n        }\n        else if (id === 5) {\n\n            return RTGes;\n        }\n        else if (id === 6) {\n\n            return ECHes;\n        }\n        else if (id === 7) {\n\n            return RSes;\n        }\n        else {\n            return []\n        }\n    }\n\n    componentDidMount() {\n        const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n\n        Services.get(Config.apiUrl + \"/forklift\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ forklifts: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/itv\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ ITVes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/mhc\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ MHCes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/mc\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ MCes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/rtg\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ RTGes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/ech\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ ECHes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n\n        Services.get(Config.apiUrl + \"/rs\", { headers: auth })\n            .then(({ data }) => {\n                this.setState({ RSes: data });\n            })\n            .catch((error) => {\n                console.log(error);\n\n                toast.error(\"Something went wrong\");\n            });\n    }\n    handleSubmit = () => {\n        const { chechlist, file } = this.state;\n        const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n        const data = { ...chechlist, document: file };\n\n        this.setState({\n            chechlist: {\n                id: 0,\n                customerId: \"\",\n                roomId: \"\",\n                amount: \"\",\n                startDate: chechlist.startDate,\n            },\n            file: \"\",\n        });\n\n        if (chechlist.id === 0) {\n            Services.post(Config.apiUrl + \"/rentals\", data, { headers: auth })\n                .then(() => {\n                    toast.success(\"Successful Registred.\");\n                })\n                .catch((error) => {\n                    console.log(error);\n\n                    if (error.response && error.response.data) {\n                        toast.error(error.response.data);\n                    } else {\n                        toast.error(\"Something went wrong\");\n                    }\n                });\n        } else {\n            Services.put(Config.apiUrl + \"/rentals/\" + data.id, data, {\n                headers: auth,\n            })\n                .then(() => {\n                    toast.info(\"Successful Updates.\");\n                })\n                .catch((error) => {\n                    console.log(error);\n\n                    if (error.response && error.response.data) {\n                        toast.error(error.response.data);\n                    } else {\n                        toast.error(\"Something went wrong\");\n                    }\n                });\n        }\n    };\n}\n\nexport default ChecklistForm;\n"]},"metadata":{},"sourceType":"module"}