{"ast":null,"code":"var _jsxFileName = \"/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/ServicesRequest/Report.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport PrinTible from \"../../Utility/printible\";\nimport ReactToPrint from \"react-to-print\";\nimport Select from \"react-select\";\nimport DateTime from \"react-datetime\";\nimport Filter from \"../../Utility/servicesFilter\";\nimport ViewItemsModal from \"./ViewItemsModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Report extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [{\n        label: \"Category\",\n        field: \"category\"\n      }, {\n        label: \"Total expenses\",\n        field: \"total\"\n      }, {\n        label: \"Date\",\n        field: \"date\"\n      }, {\n        label: \"\",\n        field: \"edit\"\n      }],\n      services: [],\n      categories: [],\n      rooms: [],\n      filter: {\n        name: \"All\",\n        date: \"\"\n      },\n      show: false,\n      items: [],\n      allItems: []\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShowModal = service => {\n      console.log(service.items);\n      this.setState({\n        show: true,\n        items: service.items\n      });\n    };\n\n    this.handleOnChangeFilter = ({\n      currentTarget: input\n    }) => {\n      const {\n        filter\n      } = this.state;\n      filter[input.name] = input.value;\n      this.setState({\n        filter\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleViewModal = death => {\n      this.setState({\n        death,\n        show: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      tableHeaders,\n      services: allservices,\n      categories,\n      filter,\n      show,\n      items,\n      allItems\n    } = this.state;\n    const services = Filter(allservices, filter);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ViewItemsModal, {\n        items: items,\n        options: allItems,\n        show: show,\n        onClose: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Services Report\", /*#__PURE__*/_jsxDEV(ReactToPrint, {\n              trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn d-print-none float-right\",\n                children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                  className: \"fas fa-print\",\n                  name: \"print\",\n                  style: {\n                    fontSize: 25\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this),\n              content: () => {\n                return this.componentRef;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-none\",\n              children: /*#__PURE__*/_jsxDEV(PrinTible, {\n                data: services.map(r => ({\n                  id: r.id,\n                  category: r.category,\n                  date: new Date(r.Date).toDateString()\n                })),\n                theaders: tableHeaders.filter(t => t.label !== \"\").map(h => h.label),\n                title: \"Rental Report\",\n                ref: el => this.componentRef = el\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: categories.filter(c => c.name === filter.name).map(c => ({\n                  label: c.name,\n                  value: c.id\n                })),\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"name\",\n                    value: e.label\n                  }\n                }),\n                options: categories.map(c => ({\n                  label: c.name,\n                  value: c.id\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DateTime, {\n                onChange: e => this.handleOnChangeFilter({\n                  currentTarget: {\n                    name: \"date\",\n                    value: e._d\n                  }\n                }),\n                closeOnSelect: true,\n                timeFormat: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n            hover: true,\n            entriesOptions: [10, 25, 50, 100],\n            entries: 10,\n            pagesAmount: 10,\n            data: {\n              columns: tableHeaders,\n              rows: services.map(ren => {\n                ren.edit = /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"ml-4\",\n                    onClick: () => this.handleShowModal(ren),\n                    children: /*#__PURE__*/_jsxDEV(Fontawesome, {\n                      className: \"fas fa-eye\",\n                      style: {\n                        fontSize: 17\n                      },\n                      name: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false);\n                ren.total = \"$\" + ren.items.map(r => r.amount).reduce((a, b) => a + b, 0);\n                ren.date = new Date(ren.date).toDateString();\n                return ren;\n              })\n            },\n            pagingTop: true,\n            searchTop: false,\n            searchBottom: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const auth = {\n      Authorization: `bearer ${localStorage[\"token\"]}`\n    };\n    Services.get(Config.apiUrl + \"/services\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        services: data.map(s => {\n          s.category = s.category.name;\n          return s;\n        })\n      });\n    });\n    Services.get(Config.apiUrl + \"/serviceCategories\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        categories: [{\n          id: \"All\",\n          name: \"All\"\n        }, ...data]\n      });\n    });\n    Services.get(Config.apiUrl + \"/rooms\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        rooms: [{\n          id: \"All\",\n          roomNumber: \"All\"\n        }, ...data]\n      });\n    });\n    Services.get(Config.apiUrl + \"/items\", {\n      headers: auth\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        allItems: data\n      });\n    });\n  }\n\n}\n\nexport default Report;","map":{"version":3,"sources":["/home/abdisalam/Downloads/BMSytem/ClientApp/src/views/ServicesRequest/Report.jsx"],"names":["React","Component","Card","Row","Col","FormLabel","Fontawesome","MDBDataTableV5","Config","Services","PrinTible","ReactToPrint","Select","DateTime","Filter","ViewItemsModal","Report","state","tableHeaders","label","field","services","categories","rooms","filter","name","date","show","items","allItems","handleCloseModal","setState","handleShowModal","service","console","log","handleOnChangeFilter","currentTarget","input","value","handleViewModal","death","render","allservices","fontSize","componentRef","map","r","id","category","Date","toDateString","t","h","el","c","e","_d","columns","rows","ren","edit","total","amount","reduce","a","b","componentDidMount","loading","auth","Authorization","localStorage","get","apiUrl","headers","then","data","s","roomNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,iBAA1C;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,MAAN,SAAqBf,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BgB,KAD6B,GACrB;AACNC,MAAAA,YAAY,EAAE,CACZ;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OADY,EAEZ;AAAED,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAFY,EAGZ;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAHY,EAIZ;AAAED,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAJY,CADR;AAONC,MAAAA,QAAQ,EAAE,EAPJ;AAQNC,MAAAA,UAAU,EAAE,EARN;AASNC,MAAAA,KAAK,EAAE,EATD;AAUNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,KADA;AAENC,QAAAA,IAAI,EAAE;AAFA,OAVF;AAcNC,MAAAA,IAAI,EAAE,KAdA;AAeNC,MAAAA,KAAK,EAAE,EAfD;AAgBNC,MAAAA,QAAQ,EAAE;AAhBJ,KADqB;;AAAA,SAsJ7BC,gBAtJ6B,GAsJV,MAAM;AACvB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAxJ4B;;AAAA,SAyJ7BK,eAzJ6B,GAyJVC,OAAD,IAAa;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACL,KAApB;AACA,WAAKG,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAEK,OAAO,CAACL;AAA7B,OAAd;AACD,KA5J4B;;AAAA,SA6J7BQ,oBA7J6B,GA6JN,CAAC;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAAD,KAA8B;AACnD,YAAM;AAAEd,QAAAA;AAAF,UAAa,KAAKP,KAAxB;AACAO,MAAAA,MAAM,CAACc,KAAK,CAACb,IAAP,CAAN,GAAqBa,KAAK,CAACC,KAA3B;AAEA,WAAKR,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAlK4B;;AAAA,SAmK7BM,gBAnK6B,GAmKV,MAAM;AACvB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KArK4B;;AAAA,SAsK7Ba,eAtK6B,GAsKVC,KAAD,IAAW;AAC3B,WAAKV,QAAL,CAAc;AAAEU,QAAAA,KAAF;AAASd,QAAAA,IAAI,EAAE;AAAf,OAAd;AACD,KAxK4B;AAAA;;AAoB7Be,EAAAA,MAAM,GAAG;AACP,UAAM;AACJxB,MAAAA,YADI;AAEJG,MAAAA,QAAQ,EAAEsB,WAFN;AAGJrB,MAAAA,UAHI;AAIJE,MAAAA,MAJI;AAKJG,MAAAA,IALI;AAMJC,MAAAA,KANI;AAOJC,MAAAA;AAPI,QAQF,KAAKZ,KART;AAUA,UAAMI,QAAQ,GAAGP,MAAM,CAAC6B,WAAD,EAAcnB,MAAd,CAAvB;AAEA,wBACE;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,KAAK,EAAEI,KADT;AAEE,QAAA,OAAO,EAAEC,QAFX;AAGE,QAAA,IAAI,EAAEF,IAHR;AAIE,QAAA,OAAO,EAAE,KAAKG;AAJhB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,uDAEE,QAAC,YAAD;AACE,cAAA,OAAO,EAAE,mBACP;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,8BAFZ;AAAA,uCAIE,QAAC,WAAD;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,KAAK,EAAE;AAAEc,oBAAAA,QAAQ,EAAE;AAAZ;AAHT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAaE,cAAA,OAAO,EAAE,MAAM;AACb,uBAAO,KAAKC,YAAZ;AACD;AAfH;AAAA;AAAA;AAAA;AAAA,oBAFF,eAmBE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,IAAI,EAAExB,QAAQ,CAACyB,GAAT,CAAcC,CAAD,KAAQ;AACzBC,kBAAAA,EAAE,EAAED,CAAC,CAACC,EADmB;AAEzBC,kBAAAA,QAAQ,EAAEF,CAAC,CAACE,QAFa;AAGzBvB,kBAAAA,IAAI,EAAE,IAAIwB,IAAJ,CAASH,CAAC,CAACG,IAAX,EAAiBC,YAAjB;AAHmB,iBAAR,CAAb,CADR;AAME,gBAAA,QAAQ,EAAEjC,YAAY,CACnBM,MADO,CACC4B,CAAD,IAAOA,CAAC,CAACjC,KAAF,KAAY,EADnB,EAEP2B,GAFO,CAEFO,CAAD,IAAOA,CAAC,CAAClC,KAFN,CANZ;AASE,gBAAA,KAAK,EAAC,eATR;AAUE,gBAAA,GAAG,EAAGmC,EAAD,IAAS,KAAKT,YAAL,GAAoBS;AAVpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAmCE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,MAAD;AACE,gBAAA,KAAK,EAAEhC,UAAU,CACdE,MADI,CACI+B,CAAD,IAAOA,CAAC,CAAC9B,IAAF,KAAWD,MAAM,CAACC,IAD5B,EAEJqB,GAFI,CAECS,CAAD,KAAQ;AAAEpC,kBAAAA,KAAK,EAAEoC,CAAC,CAAC9B,IAAX;AAAiBc,kBAAAA,KAAK,EAAEgB,CAAC,CAACP;AAA1B,iBAAR,CAFA,CADT;AAIE,gBAAA,QAAQ,EAAGQ,CAAD,IACR,KAAKpB,oBAAL,CAA0B;AACxBC,kBAAAA,aAAa,EAAE;AAAEZ,oBAAAA,IAAI,EAAE,MAAR;AAAgBc,oBAAAA,KAAK,EAAEiB,CAAC,CAACrC;AAAzB;AADS,iBAA1B,CALJ;AASE,gBAAA,OAAO,EAAEG,UAAU,CAACwB,GAAX,CAAgBS,CAAD,KAAQ;AAC9BpC,kBAAAA,KAAK,EAAEoC,CAAC,CAAC9B,IADqB;AAE9Bc,kBAAAA,KAAK,EAAEgB,CAAC,CAACP;AAFqB,iBAAR,CAAf;AATX;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAkBE,QAAC,GAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AACE,gBAAA,QAAQ,EAAGQ,CAAD,IACR,KAAKpB,oBAAL,CAA0B;AACxBC,kBAAAA,aAAa,EAAE;AAAEZ,oBAAAA,IAAI,EAAE,MAAR;AAAgBc,oBAAAA,KAAK,EAAEiB,CAAC,CAACC;AAAzB;AADS,iBAA1B,CAFJ;AAME,gBAAA,aAAa,EAAE,IANjB;AAOE,gBAAA,UAAU,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoEE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,cAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,cAAc,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,CAFlB;AAGE,YAAA,OAAO,EAAE,EAHX;AAIE,YAAA,WAAW,EAAE,EAJf;AAKE,YAAA,IAAI,EAAE;AACJC,cAAAA,OAAO,EAAExC,YADL;AAEJyC,cAAAA,IAAI,EAAEtC,QAAQ,CAACyB,GAAT,CAAcc,GAAD,IAAS;AAC1BA,gBAAAA,GAAG,CAACC,IAAJ,gBACE;AAAA,yCACE;AACE,oBAAA,SAAS,EAAC,MADZ;AAEE,oBAAA,OAAO,EAAE,MAAM,KAAK7B,eAAL,CAAqB4B,GAArB,CAFjB;AAAA,2CAIE,QAAC,WAAD;AACE,sBAAA,SAAS,EAAC,YADZ;AAEE,sBAAA,KAAK,EAAE;AAAEhB,wBAAAA,QAAQ,EAAE;AAAZ,uBAFT;AAGE,sBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,iCADF;AAcAgB,gBAAAA,GAAG,CAACE,KAAJ,GACE,MACAF,GAAG,CAAChC,KAAJ,CAAUkB,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAACgB,MAAvB,EAA+BC,MAA/B,CAAsC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAApD,EAAuD,CAAvD,CAFF;AAGAN,gBAAAA,GAAG,CAAClC,IAAJ,GAAW,IAAIwB,IAAJ,CAASU,GAAG,CAAClC,IAAb,EAAmByB,YAAnB,EAAX;AAEA,uBAAOS,GAAP;AACD,eArBK;AAFF,aALR;AA8BE,YAAA,SAAS,MA9BX;AA+BE,YAAA,SAAS,EAAE,KA/Bb;AAgCE,YAAA,YAAY,EAAE;AAhChB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApEF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAmHD;;AAqBDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKpC,QAAL,CAAc;AAAEqC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMC,IAAI,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAAC,OAAD,CAAU;AAAjD,KAAb;AAEA9D,IAAAA,QAAQ,CAAC+D,GAAT,CAAahE,MAAM,CAACiE,MAAP,GAAgB,WAA7B,EAA0C;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAA1C,EAA6DM,IAA7D,CACE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACZ,WAAK7C,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAEuD,IAAI,CAAC9B,GAAL,CAAU+B,CAAD,IAAO;AACxBA,UAAAA,CAAC,CAAC5B,QAAF,GAAa4B,CAAC,CAAC5B,QAAF,CAAWxB,IAAxB;AAEA,iBAAOoD,CAAP;AACD,SAJS;AADE,OAAd;AAOD,KATH;AAYApE,IAAAA,QAAQ,CAAC+D,GAAT,CAAahE,MAAM,CAACiE,MAAP,GAAgB,oBAA7B,EAAmD;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAnD,EAAsEM,IAAtE,CACE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACZ,WAAK7C,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAE,CAAC;AAAE0B,UAAAA,EAAE,EAAE,KAAN;AAAavB,UAAAA,IAAI,EAAE;AAAnB,SAAD,EAA6B,GAAGmD,IAAhC;AADA,OAAd;AAGD,KALH;AAQAnE,IAAAA,QAAQ,CAAC+D,GAAT,CAAahE,MAAM,CAACiE,MAAP,GAAgB,QAA7B,EAAuC;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAvC,EAA0DM,IAA1D,CACE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACZ,WAAK7C,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,CAAC;AAAEyB,UAAAA,EAAE,EAAE,KAAN;AAAa8B,UAAAA,UAAU,EAAE;AAAzB,SAAD,EAAmC,GAAGF,IAAtC;AADK,OAAd;AAGD,KALH;AAQAnE,IAAAA,QAAQ,CAAC+D,GAAT,CAAahE,MAAM,CAACiE,MAAP,GAAgB,QAA7B,EAAuC;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAvC,EAA0DM,IAA1D,CACE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACZ,WAAK7C,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE+C;AADE,OAAd;AAGD,KALH;AAOD;;AAhN4B;;AAmN/B,eAAe5D,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, FormLabel } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport PrinTible from \"../../Utility/printible\";\nimport ReactToPrint from \"react-to-print\";\nimport Select from \"react-select\";\nimport DateTime from \"react-datetime\";\nimport Filter from \"../../Utility/servicesFilter\";\nimport ViewItemsModal from \"./ViewItemsModal\";\n\nclass Report extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Category\", field: \"category\" },\n      { label: \"Total expenses\", field: \"total\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n  };\n\n  render() {\n    const {\n      tableHeaders,\n      services: allservices,\n      categories,\n      filter,\n      show,\n      items,\n      allItems,\n    } = this.state;\n\n    const services = Filter(allservices, filter);\n\n    return (\n      <>\n        <ViewItemsModal\n          items={items}\n          options={allItems}\n          show={show}\n          onClose={this.handleCloseModal}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Services Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                <PrinTible\n                  data={services.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                />\n              </div>\n            </Card.Title>\n            <Row>\n              <Col>\n                <FormLabel>Category</FormLabel>\n                <Select\n                  value={categories\n                    .filter((c) => c.name === filter.name)\n                    .map((c) => ({ label: c.name, value: c.id }))}\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"name\", value: e.label },\n                    })\n                  }\n                  options={categories.map((c) => ({\n                    label: c.name,\n                    value: c.id,\n                  }))}\n                />\n              </Col>\n              <Col>\n                <FormLabel>Date</FormLabel>\n                <DateTime\n                  onChange={(e) =>\n                    this.handleOnChangeFilter({\n                      currentTarget: { name: \"date\", value: e._d },\n                    })\n                  }\n                  closeOnSelect={true}\n                  timeFormat={false}\n                />\n              </Col>\n            </Row>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: services.map((ren) => {\n                  ren.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(ren)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  ren.total =\n                    \"$\" +\n                    ren.items.map((r) => r.amount).reduce((a, b) => a + b, 0);\n                  ren.date = new Date(ren.date).toDateString();\n\n                  return ren;\n                }),\n              }}\n              pagingTop\n              searchTop={false}\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleCloseModal = () => {\n    this.setState({ show: false });\n  };\n  handleShowModal = (service) => {\n    console.log(service.items);\n    this.setState({ show: true, items: service.items });\n  };\n  handleOnChangeFilter = ({ currentTarget: input }) => {\n    const { filter } = this.state;\n    filter[input.name] = input.value;\n\n    this.setState({ filter });\n  };\n  handleCloseModal = () => {\n    this.setState({ show: false });\n  };\n  handleViewModal = (death) => {\n    this.setState({ death, show: true });\n  };\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/services\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          services: data.map((s) => {\n            s.category = s.category.name;\n\n            return s;\n          }),\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/serviceCategories\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          categories: [{ id: \"All\", name: \"All\" }, ...data],\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/rooms\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          rooms: [{ id: \"All\", roomNumber: \"All\" }, ...data],\n        });\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/items\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          allItems: data,\n        });\n      }\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}