[{"/home/abdisalam/Projects/Web/Incident/ClientApp/src/index.js":"1","/home/abdisalam/Projects/Web/Incident/ClientApp/src/App.js":"2","/home/abdisalam/Projects/Web/Incident/ClientApp/src/reportWebVitals.js":"3","/home/abdisalam/Projects/Web/Incident/ClientApp/src/contexts/ConfigContext.js":"4","/home/abdisalam/Projects/Web/Incident/ClientApp/src/store/index.js":"5","/home/abdisalam/Projects/Web/Incident/ClientApp/src/routes.js":"6","/home/abdisalam/Projects/Web/Incident/ClientApp/src/store/actions.js":"7","/home/abdisalam/Projects/Web/Incident/ClientApp/src/config/constant.js":"8","/home/abdisalam/Projects/Web/Incident/ClientApp/src/store/reducers.js":"9","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Loader.js":"10","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Auth/AuthGuard.js":"11","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/auth/SignIn5.js":"12","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/auth/ChangePassword.js":"13","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Shift/Shifts.jsx":"14","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Dashboard/Dashboard.jsx":"15","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ITV/ITVES.jsx":"16","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MHC/MHC.jsx":"17","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MC/MC.jsx":"18","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RTG/RTG.jsx":"19","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ECH/ECH.jsx":"20","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Forklift/Forklifts.jsx":"21","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RS/RS.jsx":"22","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/snapshot/Snapshot.jsx":"23","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/Forklifts.jsx":"24","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/ITV.jsx":"25","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx":"26","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/MHC.jsx":"27","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/RTG.jsx":"28","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/ECH.jsx":"29","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/User/Users.jsx":"30","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/RS.jsx":"31","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/Snapshot.jsx":"32","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/index.js":"33","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Progress.js":"34","/home/abdisalam/Projects/Web/Incident/ClientApp/src/services/HttpServices.js":"35","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Shift/NewShiftModal.jsx":"36","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ITV/NewITVModal.jsx":"37","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MHC/NewMHCModal.jsx":"38","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/SnapshotModal.jsx":"39","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/NewModal.jsx":"40","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/User/UserModal.jsx":"41","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Breadcrumb/index.js":"42","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Spinner.js":"43","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Container.js":"44","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Bar.js":"45","/home/abdisalam/Projects/Web/Incident/ClientApp/src/hooks/useOutsideClick.js":"46","/home/abdisalam/Projects/Web/Incident/ClientApp/src/hooks/useWindowSize.js":"47","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/index.js":"48","/home/abdisalam/Projects/Web/Incident/ClientApp/src/menu-items.js":"49","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/index.js":"50","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/index.js":"51","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/SubmitBtn.js":"52","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/FieldArrayForm.js":"53","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/NavLeft/index.js":"54","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/NavRight/index.js":"55","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/DateField.js":"56","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/UploadFileField.js":"57","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/MultiSelectField.js":"58","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/SelectField.js":"59","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/TextAreaField.js":"60","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/index.js":"61","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavLogo/index.js":"62","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/NavLeft/NavSearch/index.js":"63","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavGroup/index.js":"64","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js":"65","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavCollapse/index.js":"66","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/TextField.js":"67","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavBadge/index.js":"68","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavIcon/index.js":"69","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RS/NewRSModal.jsx":"70","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Forklift/NewForkliftModal.jsx":"71","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ECH/NewECHModal.jsx":"72","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RTG/NewRTGModal.jsx":"73","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MC/NewMCModal.jsx":"74"},{"size":533,"mtime":1643600394789,"results":"75","hashOfConfig":"76"},{"size":468,"mtime":1643600394629,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":1643600394789,"results":"78","hashOfConfig":"76"},{"size":8582,"mtime":1643600394789,"results":"79","hashOfConfig":"76"},{"size":392,"mtime":1643600394789,"results":"80","hashOfConfig":"76"},{"size":4068,"mtime":1644417085872,"results":"81","hashOfConfig":"76"},{"size":1378,"mtime":1643600394789,"results":"82","hashOfConfig":"76"},{"size":2309,"mtime":1643600394789,"results":"83","hashOfConfig":"76"},{"size":192,"mtime":1643600394789,"results":"84","hashOfConfig":"76"},{"size":220,"mtime":1643600394789,"results":"85","hashOfConfig":"76"},{"size":150,"mtime":1643600394789,"results":"86","hashOfConfig":"76"},{"size":3848,"mtime":1644411654311,"results":"87","hashOfConfig":"76"},{"size":6187,"mtime":1643600394793,"results":"88","hashOfConfig":"76"},{"size":4330,"mtime":1643610329405,"results":"89","hashOfConfig":"76"},{"size":5702,"mtime":1645798545982,"results":"90","hashOfConfig":"76"},{"size":4417,"mtime":1643613396731,"results":"91","hashOfConfig":"76"},{"size":4417,"mtime":1643613703570,"results":"92","hashOfConfig":"76"},{"size":4385,"mtime":1643615305992,"results":"93","hashOfConfig":"76"},{"size":4417,"mtime":1643615936370,"results":"94","hashOfConfig":"76"},{"size":4417,"mtime":1643616516584,"results":"95","hashOfConfig":"76"},{"size":4566,"mtime":1643611664890,"results":"96","hashOfConfig":"76"},{"size":4385,"mtime":1643617007909,"results":"97","hashOfConfig":"76"},{"size":9733,"mtime":1644413089046,"results":"98","hashOfConfig":"76"},{"size":5631,"mtime":1644406104560,"results":"99","hashOfConfig":"76"},{"size":6305,"mtime":1644406677770,"results":"100","hashOfConfig":"76"},{"size":30425,"mtime":1645886792370,"results":"101","hashOfConfig":"76"},{"size":7971,"mtime":1644407252135,"results":"102","hashOfConfig":"76"},{"size":6164,"mtime":1645887375289,"results":"103","hashOfConfig":"76"},{"size":5870,"mtime":1645798946992,"results":"104","hashOfConfig":"76"},{"size":8573,"mtime":1644477801758,"results":"105","hashOfConfig":"76"},{"size":5258,"mtime":1644407842001,"results":"106","hashOfConfig":"76"},{"size":3948,"mtime":1644410047144,"results":"107","hashOfConfig":"76"},{"size":2830,"mtime":1643600394789,"results":"108","hashOfConfig":"76"},{"size":515,"mtime":1643600394789,"results":"109","hashOfConfig":"76"},{"size":464,"mtime":1643600394789,"results":"110","hashOfConfig":"76"},{"size":1161,"mtime":1643609507616,"results":"111","hashOfConfig":"76"},{"size":1210,"mtime":1643612898700,"results":"112","hashOfConfig":"76"},{"size":1210,"mtime":1643613612626,"results":"113","hashOfConfig":"76"},{"size":6868,"mtime":1644410131358,"results":"114","hashOfConfig":"76"},{"size":1707,"mtime":1644399124207,"results":"115","hashOfConfig":"76"},{"size":3671,"mtime":1644477617133,"results":"116","hashOfConfig":"76"},{"size":2540,"mtime":1643600394789,"results":"117","hashOfConfig":"76"},{"size":726,"mtime":1643600394789,"results":"118","hashOfConfig":"76"},{"size":351,"mtime":1643600394789,"results":"119","hashOfConfig":"76"},{"size":949,"mtime":1643600394789,"results":"120","hashOfConfig":"76"},{"size":437,"mtime":1643600394789,"results":"121","hashOfConfig":"76"},{"size":609,"mtime":1643600394789,"results":"122","hashOfConfig":"76"},{"size":464,"mtime":1643600394789,"results":"123","hashOfConfig":"76"},{"size":3682,"mtime":1644417095469,"results":"124","hashOfConfig":"76"},{"size":2368,"mtime":1643600394789,"results":"125","hashOfConfig":"76"},{"size":4296,"mtime":1643600394789,"results":"126","hashOfConfig":"76"},{"size":351,"mtime":1643600394789,"results":"127","hashOfConfig":"76"},{"size":4684,"mtime":1643600394789,"results":"128","hashOfConfig":"76"},{"size":1902,"mtime":1643600394789,"results":"129","hashOfConfig":"76"},{"size":2057,"mtime":1644411595022,"results":"130","hashOfConfig":"76"},{"size":803,"mtime":1643609177232,"results":"131","hashOfConfig":"76"},{"size":1291,"mtime":1643600394789,"results":"132","hashOfConfig":"76"},{"size":1060,"mtime":1643600394789,"results":"133","hashOfConfig":"76"},{"size":1158,"mtime":1644410069916,"results":"134","hashOfConfig":"76"},{"size":790,"mtime":1643600394789,"results":"135","hashOfConfig":"76"},{"size":3956,"mtime":1643600394789,"results":"136","hashOfConfig":"76"},{"size":324,"mtime":1645798087676,"results":"137","hashOfConfig":"76"},{"size":1724,"mtime":1643600394789,"results":"138","hashOfConfig":"76"},{"size":995,"mtime":1643600394789,"results":"139","hashOfConfig":"76"},{"size":2155,"mtime":1643600394789,"results":"140","hashOfConfig":"76"},{"size":3750,"mtime":1643600394789,"results":"141","hashOfConfig":"76"},{"size":779,"mtime":1643600394789,"results":"142","hashOfConfig":"76"},{"size":457,"mtime":1643600394789,"results":"143","hashOfConfig":"76"},{"size":325,"mtime":1643600394789,"results":"144","hashOfConfig":"76"},{"size":1201,"mtime":1643617070283,"results":"145","hashOfConfig":"76"},{"size":1255,"mtime":1643611463988,"results":"146","hashOfConfig":"76"},{"size":1210,"mtime":1643616810814,"results":"147","hashOfConfig":"76"},{"size":1210,"mtime":1643616021820,"results":"148","hashOfConfig":"76"},{"size":1201,"mtime":1643615560303,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"1wi9z0z",{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"152"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"152"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"152"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"152"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"152"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"152"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"152"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"152"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"152"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"152"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"152"},"/home/abdisalam/Projects/Web/Incident/ClientApp/src/index.js",[],["321","322"],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/App.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/reportWebVitals.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/contexts/ConfigContext.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/store/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/routes.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/store/actions.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/config/constant.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/store/reducers.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Loader.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Auth/AuthGuard.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/auth/SignIn5.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/auth/ChangePassword.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Shift/Shifts.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Dashboard/Dashboard.jsx",["323"],"import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\n\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\n\nconst Dashboard = () => {\n  const [snapshots, setSnapshots] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [forklifts, setForklifts] = useState([]);\n  const [itves, setItves] = useState([]);\n  const [mhc, setMHC] = useState([]);\n  const [mc, setMC] = useState([]);\n  const [rtg, setRTG] = useState([]);\n  const [ech, setECH] = useState([]);\n  const [rs, setRS] = useState([]);\n\n  useEffect(() => {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/rs\", { headers: auth }).then(({ data }) => {\n      setRS([\n        ...data\n          .reverse((a, b) => new Date(a.date) + new Date(b.date))\n          .slice(0, 7),\n      ]);\n    });\n\n    Services.get(Config.apiUrl + \"/rtg\", { headers: auth }).then(({ data }) => {\n      setRTG([\n        ...data\n          .reverse((a, b) => new Date(a.date) + new Date(b.date))\n          .slice(0, 7),\n      ]);\n    });\n\n    Services.get(Config.apiUrl + \"/ech\", { headers: auth }).then(({ data }) => {\n      setECH([\n        ...data\n          .reverse((a, b) => new Date(a.date) + new Date(b.date))\n          .slice(0, 7),\n      ]);\n    });\n\n    Services.get(Config.apiUrl + \"/mc\", { headers: auth }).then(({ data }) => {\n      setMC([\n        ...data\n          .reverse((a, b) => new Date(a.date) + new Date(b.date))\n          .slice(0, 7),\n      ]);\n    });\n\n    Services.get(Config.apiUrl + \"/SnapShot\", { headers: auth }).then(\n      ({ data }) => {\n        setSnapshots([\n          ...data\n            .reverse((a, b) => new Date(a.date) + new Date(b.date))\n            .slice(0, 7),\n        ]);\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/users\", { headers: auth }).then(\n      ({ data }) => {\n        setUsers([...data]);\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/forklift\", { headers: auth }).then(\n      ({ data }) => {\n        setForklifts([...data]);\n      }\n    );\n\n    Services.get(Config.apiUrl + \"/itv\", { headers: auth }).then(({ data }) => {\n      setItves([...data]);\n    });\n\n    Services.get(Config.apiUrl + \"/mhc\", { headers: auth }).then(({ data }) => {\n      setMHC([...data]);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md={4} sm={6}>\n          <Card className=\"user-card\">\n            <Card.Body>\n              <h5 className=\"m-b-15\">FL</h5>\n              <h4 className=\"f-w-300\">{forklifts.length}</h4>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4} sm={6}>\n          <Card className=\"user-card\">\n            <Card.Body>\n              <h5 className=\"f-w-400 m-b-15\">ITV</h5>\n              <h4 className=\"f-w-300\">{itves.length}</h4>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card className=\"user-card\">\n            <Card.Body>\n              <h5 className=\"f-w-400 m-b-15\">MHC</h5>\n              <h4 className=\"f-w-300\">{mhc.length}</h4>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={8}>\n          <Card className=\"user-list\">\n            <Card.Header>\n              <Card.Title as=\"h5\">Recent Snapshots</Card.Title>\n            </Card.Header>\n            <Card.Body className=\"pb-0\">\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>Category</th>\n                    <th>Location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {snapshots.map((s) => (\n                    <tr>\n                      <td>\n                        <h6 className=\"mb-1\">{s.category}</h6>\n                      </td>\n                      <td>\n                        <span className=\"pie_1\">{s.location}</span>\n                      </td>\n                      <td>\n                        <h6 className=\"m-0\">\n                          {new Date(s.date).toDateString()}\n                        </h6>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Row>\n            <Col md={12} xl={12} sm={12} lg={12}>\n              <Card className=\"user-card\">\n                <Card.Body>\n                  <h5 className=\"f-w-400 m-b-15\">MC</h5>\n                  <h4 className=\"f-w-300\">{mc.length}</h4>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={12} xl={12} sm={12} lg={12}>\n              <Card className=\"user-card\">\n                <Card.Body>\n                  <h5 className=\"f-w-400 m-b-15\">RTG</h5>\n                  <h4 className=\"f-w-300\">{rtg.length}</h4>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={12} xl={12} sm={12} lg={12}>\n              <Card className=\"user-card\">\n                <Card.Body>\n                  <h5 className=\"f-w-400 m-b-15\">ECH</h5>\n                  <h4 className=\"f-w-300\">{ech.length}</h4>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={12} xl={12} sm={12} lg={12}>\n              <Card className=\"user-card\">\n                <Card.Body>\n                  <h5 className=\"f-w-400 m-b-15\">RS</h5>\n                  <h4 className=\"f-w-300\">{rs.length}</h4>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ITV/ITVES.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MHC/MHC.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MC/MC.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RTG/RTG.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ECH/ECH.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Forklift/Forklifts.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RS/RS.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/snapshot/Snapshot.jsx",["324"],"import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport {\n  SelectField,\n  SubmitBtn,\n  UploadFileField,\n  TextAreaField,\n} from \"../../components/Form\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport jwtDecode from \"jwt-decode\";\n\nclass Snapshot extends Component {\n  state = {\n    snapshot: {\n      id: 0,\n      category: \"\",\n      incidentType: \"\",\n      location: \"\",\n      shift: \"\",\n      peopleInvolved: \"\",\n      equipment: \"\",\n      responsible: \"\",\n      status: \"\",\n      description: \"\",\n    },\n    file: \"\",\n    shifts: [\n      { value: \"7:00 - 11:00 am\", label: \"7:00 - 11:00 am\" },\n      { value: \"12:00 - 4:00 pm\", label: \"12:00 - 4:00 pm\" },\n      { value: \"5:00 - 7:00 pm\", label: \"5:00 - 7:00 pm\" },\n      { value: \"7:00 - 11:00 pm\", label: \"7:00 - 11:00 pm\" },\n      { value: \"12:00 - 4:00 am\", label: \"12:00 - 4:00 am\" },\n      { value: \"5:00 - 7:00 am\", label: \"5:00 - 7:00 am\" },\n    ],\n    categories: [\n      { label: \"Safety\", value: \"safety\" },\n      { label: \"Environment\", value: \"environment\" },\n      { label: \"Security\", value: \"security\" },\n    ],\n    incidentTypes: [\n      { label: \"Not wearing ppe\", value: \"not wearing ppe\" },\n      { label: \"Driving high speed\", value: \"driving high speed\" },\n      {\n        label: \"Working/Standing under suspension\",\n        value: \"working/Standing under suspension\",\n      },\n    ],\n    locations: [\n      { label: \"Main Yard\", value: \"main yard\" },\n      { label: \"Queyside\", value: \"queyside\" },\n      { label: \"Gate1\", value: \"gate1\" },\n      { label: \"Gate2\", value: \"gate2\" },\n      { label: \"Gate3\", value: \"gate3\" },\n      { label: \"Gate4\", value: \"gate4\" },\n      { label: \"Gate-pregate\", value: \"gate-pregate\" },\n      { label: \"Gate-In\", value: \"gate-in\" },\n      { label: \"Gate-Out\", value: \"gate-out\" },\n    ],\n    peoples: [\n      { label: \"Third part labor\", value: \"third part labor\" },\n      { label: \"Employee\", value: \"employee\" },\n      {\n        label: \"Employee with third part labor\",\n        value: \"employee with third part labor\",\n      },\n    ],\n    equipmenties: [\n      { label: \"Personal car\", value: \"personal car\" },\n      { label: \"Terminal pick up\", value: \"terminal pick up\" },\n      { label: \"MHC\", value: \"mhc\" },\n      { label: \"QC\", value: \"qc\" },\n      { label: \"RS\", value: \"rs\" },\n      { label: \"RTG\", value: \"rtg\" },\n      { label: \"ITV\", value: \"itv\" },\n      { label: \"ECH\", value: \"ech\" },\n      { label: \"MC\", value: \"mc\" },\n      { label: \"ML\", value: \"ml\" },\n      { label: \"FL\", value: \"fl\" },\n    ],\n    responsiblies: [\n      { label: \"Operarion\", value: \"operations\" },\n      { label: \"Technical\", value: \"technical\" },\n      { label: \"Safety\", value: \"safety\" },\n      { label: \"IT\", value: \"it\" },\n      { label: \"Finance\", value: \"finance\" },\n      { label: \"HR\", value: \"hr\" },\n      { label: \"Security\", value: \"security\" },\n      { label: \"Clinical\", value: \"clinical\" },\n      { label: \"Others\", value: \"others\" },\n    ],\n    status: [\n      { label: \"Open\", value: \"open\" },\n      { label: \"Close\", value: \"close\" },\n    ],\n  };\n\n  schema = Yup.object({\n    id: Yup.number().label(\"Id\"),\n    category: Yup.string().required().label(\"Category\"),\n    incidentType: Yup.string().required().label(\"Incident Type\"),\n    location: Yup.string().required().label(\"Location\"),\n    shift: Yup.string().required().label(\"Shift\"),\n    peopleInvolved: Yup.string().required().label(\"People Involved\"),\n    equipment: Yup.string().required().label(\"Equipment\"),\n    responsible: Yup.string().required().label(\"Responsible\"),\n    status: Yup.string().required().label(\"Status\"),\n    description: Yup.string().label(\"Description\"),\n  });\n\n  render() {\n    const {\n      snapshot,\n      file,\n      shifts,\n      categories,\n      incidentTypes,\n      locations,\n      peoples,\n      equipmenties,\n      responsiblies,\n      status,\n    } = this.state;\n    const fileImage = URL.createObjectURL(\n      new Blob([this.handleStringToArray(file)], { type: \"image/png\" })\n    );\n\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {snapshot.id === 0 ? \"New Snapshot\" : \"Update Snapshot\"}\n            </Card.Title>\n          </Card.Header>\n          <Formik\n            initialValues={snapshot}\n            enableReinitialize={true}\n            validationSchema={this.schema}\n            onSubmit={(snapshot, { resetForm }) => {\n              resetForm();\n              this.setState({ snapshot });\n              this.handleSubmit(snapshot);\n            }}\n          >\n            {() => (\n              <>\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"category\"\n                        label=\"Category\"\n                        options={categories}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"incidentType\"\n                        label=\"Incident Type\"\n                        options={incidentTypes}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"location\"\n                        label=\"Location\"\n                        options={locations}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"shift\"\n                        label=\"shift\"\n                        options={shifts}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"peopleInvolved\"\n                        label=\"People Involved\"\n                        options={peoples}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"equipment\"\n                        label=\"Equipment\"\n                        options={equipmenties}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <SelectField\n                        name=\"responsible\"\n                        label=\"Responsible\"\n                        options={responsiblies}\n                        required\n                      />\n                    </Col>\n                    <Col>\n                      <SelectField\n                        name=\"status\"\n                        label=\"Status\"\n                        options={status}\n                        required\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <UploadFileField\n                        name=\"image\"\n                        file=\"file\"\n                        label=\"Document\"\n                        type=\"file\"\n                        setFile={this.handleFile}\n                      />\n                      {file && (\n                        <a href={fileImage} download>\n                          <img\n                            width=\"400\"\n                            height=\"400\"\n                            src={fileImage}\n                            alt=\"\"\n                          />\n                        </a>\n                      )}\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <TextAreaField\n                        name=\"description\"\n                        label=\"Description\"\n                        rows={5}\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n                <Card.Footer className=\"text-center\">\n                  <SubmitBtn />\n                </Card.Footer>\n              </>\n            )}\n          </Formik>\n        </Card>\n      </>\n    );\n  }\n\n  handleFile = (file) => {\n    this.setState({ file });\n  };\n  handleStringToArray = (str = \"\") => {\n    const array = str.split(\",\");\n    const buffer = [];\n\n    for (let index = 0; index < array.length; index++) {\n      buffer[index] = array[index];\n    }\n\n    const data = new Uint8Array(buffer);\n\n    return data;\n  };\n  handleSubmit = () => {\n    const { snapshot, file } = this.state;\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n    const user = jwtDecode(localStorage[\"token\"]);\n    const data = { ...snapshot, image: file, date: new Date() };\n\n    this.setState({\n      snapshot: {\n        id: 0,\n        category: \"\",\n        incidentType: \"\",\n        location: \"\",\n        shift: \"\",\n        peopleInvolved: \"\",\n        equipment: \"\",\n        responsible: \"\",\n        status: \"\",\n        description: \"\",\n      },\n      file: \"\",\n    });\n\n    Services.post(Config.apiUrl + \"/SnapShot\", data, { headers: auth })\n      .then(() => {\n        toast.success(\"Successful Registred.\");\n      })\n      .catch((error) => {\n        console.log(error);\n\n        if (error.response && error.response.data) {\n          toast.error(error.response.data);\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      });\n  };\n}\n\nexport default Snapshot;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/Forklifts.jsx",["325","326"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\nimport { useState } from \"react\";\n\nclass Forklifts extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    forklifts: [],\n    forklift: {},\n    forkliftCheck: [\n      { value: \"hydraulicControls\", label: \"Hydraulic controls\" },\n      { value: \"steering\", label: \"Steering\" },\n      { value: \"handBreak\", label: \"Hand Break\" },\n      { value: \"lights\", label: \"Lights\" },\n      { value: \"hornsAndAlarms\", label: \"Horns/ Alarms\" },\n      { value: \"seatBelts\", label: \"Seat belts\" },\n      { value: \"brakes\", label: \"Brakes\" },\n      {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"No tyre damage or insuficient inflation\",\n      },\n      { value: \"noWheelsLooseNuts\", label: \"No Wheels- loose nuts\" },\n      {\n        value: \"noAccidentDamageOrFrameIncludingAttachements\",\n        label: \"No accident damage or frame including attachements\",\n      },\n      {\n        value: \"noExcessiveFluidLeaksEspeciallyUnderMachine\",\n        label: \"No excessive fluid leaks especially under machine\",\n      },\n      { value: \"floodLightsAreWorking\", label: \"Flood lights are working\" },\n      { value: \"tailLightsAreWorking\", label: \"Tail lights are working\" },\n      { value: \"mirrors\", label: \"Mirrors\" },\n      {\n        value: \"rotatingAmbersLightsAreWorking\",\n        label: \"Rotating ambers lights are working\",\n      },\n      { value: \"fireExtingisher\", label: \"Fire extingisher\" },\n      { value: \"deiselLevel\", label: \"Deisel level\", string: true },\n      { value: \"hMR\", label: \"HMR\", string: true },\n    ],\n    data: [],\n  };\n\n  render() {\n    const { tableHeaders, forklifts, show, data } = this.state;\n\n    return (\n      <>\n        <NewModal\n          show={show}\n          title=\"Forklift\"\n          data={data}\n          setClose={this.handleClose}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Forklift Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={forklifts.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: forklifts.map((fork) => {\n                  fork.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(fork)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  fork.date = new Date(fork.date).toDateString();\n                  fork.name = fork.forklift.name;\n\n                  return fork;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(fork) {\n    const { forkliftCheck } = this.state;\n    const data = [];\n\n    for (let f in fork) {\n      for (let fk of forkliftCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = fork[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = fork[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({ fork, show: true, data });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/forkliftcheck\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          forklifts: data,\n        });\n      }\n    );\n  }\n}\n\nexport default Forklifts;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/ITV.jsx",["327"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\n\nclass ITV extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    itvs: [],\n    itv: {},\n    itvCheck: [\n      { value: \"hydraulicControls\", label: \"Hydraulic controls\" },\n      { value: \"steering\", label: \"Steering\" },\n      {\n        value: \"checkWindowsAreCleanAndNotDamaged\",\n        label: \"Check windows are clean and not damaged\",\n      },\n      {\n        value: \"handBreakAndWindscreenWipers\",\n        label: \"Hand-break &windscreen wipers\",\n      },\n      { value: \"vMT\", label: \"VMT\" },\n      { value: \"radioCommunication\", label: \"Radio Communication\" },\n      {\n        value: \"ensure5thwheelAtCorrectHeight\",\n        label: \"Ensure 5th wheel at correct height\",\n      },\n      { value: \"lights\", label: \"Lights\" },\n      { value: \"speedLimitOperating\", label: \"Speed limit operating\" },\n      { value: \"aC\", label: \"AC\" },\n      { value: \"hornsAndAlarms\", label: \"Horns/ Alarms\" },\n      { value: \"seatBelts\", label: \"Seat belts\" },\n      { value: \"brakes\", label: \"Brakes\" },\n      {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"No tyre damage or insuficient inflation\",\n      },\n      { value: \"noWheelsLooseNuts\", label: \"No Wheels- loose nuts\" },\n      {\n        value: \"noAccidentDamageOrFrameIncludingAttachements\",\n        label: \"No accident damage or frame including attachements\",\n      },\n      {\n        value: \"noExcessiveFluidLeaksEspeciallyMnderMachine\",\n        label: \"No excessive fluid leaks especially under machine\",\n      },\n      { value: \"floodLightsAreWorking\", label: \"Flood lights are working\" },\n      { value: \"tailLightsAreWorking\", label: \"Tail lights are working\" },\n      { value: \"mirrors\", label: \"Mirrors\" },\n      {\n        value: \"turntableLockingBarInFullyLatchedPosition\",\n        label: \"Turntable locking bar in fully latched position\",\n      },\n      {\n        value: \"trailerSuzieHosesAndCableSecure\",\n        label: \"Trailer Suzie hoses and cable secure\",\n      },\n      {\n        value: \"trailerLegsLiftedToFullHeight\",\n        label: \"Trailer legs lifted to full height\",\n      },\n      { value: \"fireExtingisher\", label: \"Fire extingisher\" },\n      { value: \"deiselLevel\", label: \"Deisel level\", string: true },\n      { value: \"hMR\", label: \"HMR\", string: true },\n    ],\n    data: [],\n  };\n\n  render() {\n    const { tableHeaders, itvs, show, data } = this.state;\n\n    return (\n      <>\n        <NewModal\n          show={show}\n          title=\"ITV\"\n          data={data}\n          setClose={this.handleClose}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              ITV Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={itvs.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: itvs.map((fork) => {\n                  fork.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(fork)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  fork.date = new Date(fork.date).toDateString();\n                  fork.name = fork.itv.name;\n\n                  return fork;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(fork) {\n    const { itvCheck } = this.state;\n    const data = [];\n\n    for (let f in fork) {\n      for (let fk of itvCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = fork[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = fork[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({ fork, show: true, data });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/itvcheck\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          itvs: data,\n        });\n      }\n    );\n  }\n}\n\nexport default ITV;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Checklist/ChecklistForm.jsx",["328"],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/MHC.jsx",["329"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\n\nclass mhc extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    mhcs: [],\n    mhc: {},\n    mhcCheck: [\n      {\n        value: \"engineFluidLevelCorrect\",\n        label: \"Engine fluid level correct (check dip stick or sight lass)\",\n      },\n      {\n        value: \"hydraulicFluidLevelCorrect\",\n        label: \"Hydraulic fluid level correct (check dip stick or sight glass)\",\n      },\n      {\n        value: \"hydraulicSystemExhibitsNoApparentWeepingOrLeaks\",\n        label: \"hydraulic system exhibits no apparent weeping or leaks\",\n      },\n      {\n        value: \"airSystemexhibitsNoAudibleLeaks\",\n        label: \"Air system exhibits no audible leaks\",\n      },\n      {\n        value: \"tyrePressureAccetableAndTireNotDamaged\",\n        label: \"Tyre pressure accetable and tire not damaged\",\n      },\n      {\n        value:\n          \"telescopingBoomExhibitsNoDamageToRuctureWearPadsBoomStopsOrCylinder\",\n        label:\n          \"telescoping boom exhibits no damage to ructure, wear pads, boom stops, or cylinder\",\n      },\n      {\n        value: \"wireRopeFreeOfDirtExcessLubekinksAndWiresAndSooledCorrectl\",\n        label:\n          \"Wire rope free of dirt, excess lube, kinks, and wires nd s ooled correctl\",\n      },\n      { value: \"reevingCorrect\", label: \"Reeving correct\" },\n      {\n        value: \"wedgeAocketsAndWireRopeClipsNotDistortedCrackedOrMissing\",\n        label:\n          \"Wedge sockets and wire rope clips not distorted, cracked, or missing\",\n      },\n      {\n        value: \"allAndHookAreFreeToSwivelAndRotate\",\n        label: \"All and hook are free to swivel and rotate\",\n      },\n      {\n        value: \"outriggerFloatsSecuredWithPadIn\",\n        label: \"Outrigger float(s) secured with pad in\",\n      },\n      { value: \"cab\", label: \"Cab\" },\n      {\n        value: \"handrailsInPlaceAndNotDamaged\",\n        label: \"Handrails in place and not damaged\",\n      },\n      {\n        value: \"operatorManualInVehicle\",\n        label: \"Operator's manual in vehicle\",\n      },\n      {\n        value: \"loadChartLegibleAndVisibleToOperator\",\n        label: \"Load chart legible and visible to operator\",\n      },\n      {\n        value: \"handSignalChartVisibleToWorkers\",\n        label: \"Hand signal chart visible to workers\",\n      },\n      {\n        value: \"chargedFireExtinguisherInplace\",\n        label: \"Charged fire extinguisher in place\",\n      },\n      {\n        value: \"cabGlassNotCrackedAndWipersAreFunctional\",\n        label: \"Cab glass not cracked, and wipers are functional\",\n      },\n      {\n        value: \"loadMomentIndicatorOperational\",\n        label: \"Load moment indicator operational\",\n      },\n      {\n        value: \"drumRotationIndicatorFunctioning\",\n        label: \"Drum rotation indicator functioning\",\n      },\n      {\n        value: \"boomLengthIndicatorFunctioning\",\n        label: \"Boom length indicator functioning\",\n      },\n      {\n        value: \"boomAngleIndicatorFunctioning\",\n        label: \"Boom angle indicator functioning\",\n      },\n      {\n        value: \"engineHydraulicAirElectricalOilPressureTemperatureAandFuel\",\n        label:\n          \"Engine: hydraulic, air, electrical, oil pressure, temperature, and fuel\",\n      },\n      {\n        value: \"correctCounterweightForTheLoad\",\n        label: \"Correct counterweight for the load\",\n      },\n      {\n        value: \"mainHoistControlFunctioning\",\n        label: \"Main hoist control functioning\",\n      },\n      {\n        value: \"antiTwoBlockInLaceAndFunctioning\",\n        label: \"Anti-two block in lace and functioning\",\n      },\n      { value: \"swingBrake\", label: \"Swing brake\" },\n      {\n        value: \"auxiliaryHoistControlFunctioning\",\n        label: \"Auxiliary hoist control functioning\",\n      },\n      { value: \"dieselFuelLeakage\", label: \"Diesel Fuel Leakage\" },\n      { value: \"engineHourMeter\", label: \"Engine Hour Meter\", string: true },\n      { value: \"fuelLevelReading\", label: \"Fuel Level Reading\", string: true },\n    ],\n    data: [],\n  };\n\n  render() {\n    const { tableHeaders, mhcs, show, data } = this.state;\n\n    return (\n      <>\n        <NewModal\n          show={show}\n          title=\"MHC\"\n          data={data}\n          setClose={this.handleClose}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              MHC Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={mhcs.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: mhcs.map((mhc) => {\n                  mhc.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(mhc)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  mhc.date = new Date(mhc.date).toDateString();\n                  mhc.name = mhc.mhc.name;\n\n                  return mhc;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(mhc) {\n    const { mhcCheck } = this.state;\n    const data = [];\n\n    for (let f in mhc) {\n      for (let fk of mhcCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = mhc[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = mhc[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({ mhc, show: true, data });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/mhccheck\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          mhcs: data,\n        });\n      }\n    );\n  }\n}\n\nexport default mhc;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/RTG.jsx",["330"],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/ECH.jsx",["331"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\n\nclass ECH extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    echs: [],\n    ech: {},\n    echCheck: [\n      { value: \"hydraulicControls\", label: \"Hydraulic controls\" },\n      { value: \"steering\", label: \"Steering\" },\n      {\n        value: \"checkWindowsAreCleanAndNotDamaged\",\n        label: \"Windows are clean and not damaged\",\n      },\n      {\n        value: \"handBreakAndWindscreenWipers\",\n        label: \"Hand-break & window screen wipers\",\n      },\n      { value: \"vMT\", label: \"VMT\" },\n      { value: \"radioCommunication\", label: \"Radio Communication\" },\n      { value: \"lights\", label: \"Lights\" },\n      { value: \"speedLimitOperating\", label: \"Speed limit operating\" },\n      { value: \"aC\", label: \"AC\" },\n      { value: \"hornsAndAlarms\", label: \"Horns/ Alarms\" },\n      { value: \"seatBelts\", label: \"Seat belts\" },\n      { value: \"brakes\", label: \"Brakes\" },\n      {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"No Tyre damage or insuficient inflation\",\n      },\n      { value: \"noWheelsLooseNuts\", label: \"No Wheels- loose nuts\" },\n      {\n        value: \"noAccidentDamageOrFrameIncludingAttachements\",\n        label: \"No accident damage or frame including attachements \",\n      },\n      {\n        value: \"noExcessiveFluidLeaksEspeciallyMnderMachine\",\n        label: \"No excessive fluid leaks especially under machine\",\n      },\n      { value: \"sPREADEROilLeakingSPR\", label: \"SPREADER: oil leaking, SPR\" },\n      { value: \"floodLightsAreWorking\", label: \"Flood lights are working \" },\n      { value: \"tailLightsAreWorking\", label: \"Tail lights are working\" },\n      { value: \"mirrors\", label: \"Mirrors\" },\n      { value: \"fireExtingisher\", label: \"Fire extingisher\" },\n      { value: \"deiselLevel\", label: \"Deisel level\", string: true },\n      { value: \"hMR\", label: \"HMR\", string: true },\n    ],\n    data: [],\n  };\n\n  render() {\n    const { tableHeaders, echs, show, data } = this.state;\n\n    return (\n      <>\n        <NewModal\n          show={show}\n          title=\"ech\"\n          data={data}\n          setClose={this.handleClose}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              ECH Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={echs.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: echs.map((ech) => {\n                  ech.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(ech)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  ech.date = new Date(ech.date).toDateString();\n                  ech.name = ech.ech.name;\n\n                  return ech;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(ech) {\n    const { echCheck } = this.state;\n    const data = [];\n\n    for (let f in ech) {\n      for (let fk of echCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = ech[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = ech[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({ ech, show: true, data });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/echcheck\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          echs: data,\n        });\n      }\n    );\n  }\n}\n\nexport default ECH;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/User/Users.jsx",["332"],"import React, { Component } from \"react\";\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Services from \"../../services/HttpServices\";\nimport Config from \"../../config/config.json\";\nimport UserModal from \"././UserModal\";\nimport JwtDecode from \"jwt-decode\";\n\nclass Users extends Component {\n  state = {\n    user: {\n      id: 0,\n      name: \"\",\n      tellphone: \"\",\n      employeeId: \"\",\n      username: \"\",\n      role: \"\",\n      password: \"\",\n      status: true,\n    },\n    users: [],\n    errors: {},\n    show: false,\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Username\", field: \"username\" },\n      { label: \"Tellphone\", field: \"tellphone\" },\n      { label: \"EmployeeId\", field: \"employeeId\" },\n      { label: \"Role\", field: \"role\" },\n      { label: \"\", field: \"edit\" },\n    ],\n  };\n\n  schema = {\n    id: Joi.any(),\n    name: Joi.string().required().label(\"Name\"),\n    username: Joi.string().required().label(\"Username\"),\n    tellphone: Joi.string().required().label(\"Tellphone\"),\n    employeeId: Joi.string().required().label(\"Employee\"),\n    role: Joi.string().required().label(\"Role\"),\n    status: Joi.any(),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  render() {\n    const { users, tableHeaders, show, user, errors } = this.state;\n\n    return (\n      <>\n        <UserModal\n          show={show}\n          onClose={this.handleClose}\n          onChange={this.handleOnChange}\n          user={user}\n          onSubmit={this.handleSubmit}\n          errors={errors}\n          validate={this.validate}\n        />\n        <Card>\n          <Card.Header>\n            <Row className=\"float-right\">\n              <Button onClick={this.handleShow}>\n                <Fontawesome\n                  name=\"plus-circle\"\n                  className=\"fas fa-plus-circle\"\n                />{\" \"}\n                New User\n              </Button>\n            </Row>\n            <Card.Title>Users</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: users.map((user) => {\n                  user.edit = user.status ? (\n                    <React.Fragment>\n                      <button\n                        onClick={() => this.handleStatus(user.id)}\n                        className=\"btn btn-link\"\n                      >\n                        Active\n                      </button>\n                      <button\n                        className=\"btn btn-link\"\n                        onClick={() => this.handleUpdate(user)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-edit text-primary\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </button>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <button\n                        onClick={() => this.handleStatus(user.id)}\n                        className=\"btn btn-link\"\n                      >\n                        Not active\n                      </button>\n                      <button\n                        className=\"btn btn-link\"\n                        onClick={() => this.handleUpdate(user)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-edit text-primary\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </button>\n                    </React.Fragment>\n                  );\n\n                  return user;\n                }),\n              }}\n              pagingTop\n              searchTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleStatus = (id) => {\n    const { users } = this.state;\n    this.setState({ loader: true });\n    const token = localStorage[\"token\"];\n    const auth = { Authorization: `bearer ${token}` };\n\n    Services.get(Config.apiUrl + \"/userStatus/\" + id, { headers: auth })\n      .then(({ data }) => {\n        this.setState({\n          users: users.map((u) => {\n            if (u.id === id) u.status = data.status;\n            return u;\n          }),\n          loader: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        this.setState({ loader: false });\n        toast.error(\"Something went wrong\");\n      });\n  };\n  handleUpdate = (row) => {\n    const user = { ...row };\n    delete user.edit;\n\n    this.setState({ user, show: true });\n  };\n  handlePapulate = (user) => {\n    const { users } = this.state;\n\n    this.setState({\n      users: [user, ...users.filter((f) => f.id !== user.id)],\n    });\n  };\n  validateOnProperty = (input) => {\n    const obj = { [input.name]: input.value };\n    const schema = { [input.name]: this.schema[input.name] };\n    const { error } = Joi.validate(obj, schema);\n\n    if (!error) return null;\n\n    return error.details[0].message;\n  };\n  validate = () => {\n    const { user } = this.state;\n    const errors = {};\n    const { error } = Joi.validate(user, this.schema, { abortEarly: false });\n\n    if (!error) return null;\n\n    for (let e of error.details) errors[e.path[0]] = e.message;\n\n    return errors;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { user } = this.state;\n    const errors = this.validate();\n    const token = localStorage[\"token\"];\n    const auth = { Authorization: `bearer ${token}` };\n\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n\n    this.handleClose();\n    this.setState({ loader: true });\n\n    if (user.id === 0) {\n      Services.post(Config.apiUrl + \"/users\", user, { headers: auth })\n        .then(({ data }) => {\n          this.setState({ loader: false });\n          toast.success(\"Successfull Registred\");\n          this.handlePapulate(data);\n\n          this.setState({\n            user: {\n              id: 0,\n              name: \"\",\n              username: \"\",\n              role: \"\",\n              password: \"\",\n              status: true,\n            },\n          });\n        })\n        .catch((error) => {\n          this.setState({ loader: false });\n          console.log(error);\n          this.handleShow();\n\n          if (error.response && error.response.data) {\n            toast.error(error.response.data);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        });\n    } else {\n      Services.put(Config.apiUrl + \"/users/\" + user.id, user, { headers: auth })\n        .then(({ data }) => {\n          this.setState({ loader: false });\n          toast.info(\"Successfull Update\");\n          this.handlePapulate(data);\n\n          this.setState({\n            user: {\n              id: 0,\n              name: \"\",\n              username: \"\",\n              role: \"\",\n              password: \"\",\n              status: true,\n            },\n          });\n        })\n        .catch((error) => {\n          this.setState({ loader: false });\n          console.log(error);\n          this.handleShow();\n\n          toast.error(\"Something went wrong\");\n        });\n    }\n  };\n  handleOnChange = ({ currentTarget: input }) => {\n    const { user, errors } = this.state;\n    user[input.name] = input.value;\n    const errorMessage = this.validateOnProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    this.setState({ user });\n  };\n  componentDidMount() {\n    this.setState({ loader: true });\n    const token = localStorage[\"token\"];\n    const user = token ? JwtDecode(token) : \"\";\n    const auth = { Authorization: `bearer ${token}` };\n\n    Services.get(Config.apiUrl + \"/users\", { headers: auth })\n      .then(({ data }) => {\n        this.setState({\n          users: data.filter((u) => u.id != user.id),\n          loader: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ loader: false });\n\n        toast.error(\"Something went wrong\");\n      });\n  }\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n}\n\nexport default Users;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/RS.jsx",["333"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport NewModal from \"./NewModal\";\n\nclass RS extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Name\", field: \"name\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    rss: [],\n    rs: {},\n    rsCheck: [\n      {\n        value: \"noTyreDamageOrInsuficientInflation\",\n        label: \"Hydraulic controls\",\n      },\n      { value: \"noWheelsLooseNuts\", label: \"Steering\" },\n      {\n        value: \"sPREADEROilLeakingFlipperDamageFlipperMissingSPR\",\n        label: \"Hand Break\",\n      },\n      {\n        value: \"noAccidentDamageOrFrameIncludingAttachements\",\n        label: \"Lights\",\n      },\n      { value: \"visualCheckOfBeltsBeforeOperation\", label: \"Horns/ Alarms\" },\n      {\n        value: \"excessiveFluidLeaksEspeciallyUnderMachine\",\n        label: \"Seat belts\",\n      },\n      {\n        value: \"floodLightsAreWorking\",\n        label: \"No tyre damage or insuficient inflation\",\n      },\n      { value: \"tailLightsAreWorking\", label: \"No Wheels- loose nuts\" },\n      {\n        value: \"mirrors\",\n        label: \"No accident damage or frame including attachements\",\n      },\n      {\n        value: \"fireExtingisher\",\n        label: \"No excessive fluid leaks especially under machine\",\n      },\n      { value: \"dieselLevel\", label: \"Flood lights are working\", string: true },\n      { value: \"hMR\", label: \"Tail lights are working\", string: true },\n    ],\n    data: [],\n  };\n\n  render() {\n    const { tableHeaders, rss, show, data } = this.state;\n\n    return (\n      <>\n        <NewModal\n          show={show}\n          title=\"RS\"\n          data={data}\n          setClose={this.handleClose}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              RS Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={rss.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: rss.map((rs) => {\n                  rs.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(rs)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  rs.date = new Date(rs.date).toDateString();\n                  rs.name = rs.rs.name;\n\n                  return rs;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(rs) {\n    const { rsCheck } = this.state;\n    const data = [];\n\n    for (let f in rs) {\n      for (let fk of rsCheck) {\n        if (fk.value.toLocaleLowerCase() === f.toLocaleLowerCase()) {\n          if (fk.string) {\n            fk.input = rs[f];\n            data.push(fk);\n          } else {\n            fk.isTrue = rs[f];\n            data.push(fk);\n          }\n        }\n      }\n    }\n\n    this.setState({ rs, show: true, data });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/rscheck\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          rss: data,\n        });\n      }\n    );\n  }\n}\n\nexport default RS;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/Snapshot.jsx",["334"],"import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Fontawesome from \"react-fontawesome\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Config from \"../../config/config.json\";\nimport Services from \"../../services/HttpServices\";\nimport ReactToPrint from \"react-to-print\";\nimport SnapshotModal from \"./SnapshotModal\";\n\nclass Snapshot extends Component {\n  state = {\n    tableHeaders: [\n      { label: \"Category\", field: \"category\" },\n      { label: \"Incident Type\", field: \"incidentType\" },\n      { label: \"Locatiobn\", field: \"location\" },\n      { label: \"Shift\", field: \"shift\" },\n      { label: \"Date\", field: \"date\" },\n      { label: \"\", field: \"edit\" },\n    ],\n    services: [],\n    categories: [],\n    rooms: [],\n    filter: {\n      name: \"All\",\n      date: \"\",\n    },\n    show: false,\n    items: [],\n    allItems: [],\n    snapshots: [],\n    snapshot: {},\n  };\n\n  render() {\n    const { tableHeaders, snapshots, show, snapshot } = this.state;\n\n    return (\n      <>\n        <SnapshotModal\n          show={show}\n          snapshot={snapshot}\n          title=\"Snapshot\"\n          setClose={this.handleClose}\n        />\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Snapshot Report\n              <ReactToPrint\n                trigger={() => (\n                  <button\n                    type=\"button\"\n                    className=\"btn d-print-none float-right\"\n                  >\n                    <Fontawesome\n                      className=\"fas fa-print\"\n                      name=\"print\"\n                      style={{ fontSize: 25 }}\n                    />\n                  </button>\n                )}\n                content={() => {\n                  return this.componentRef;\n                }}\n              />\n              <div className=\"d-none\">\n                {/* <PrinTible\n                  data={snapshots.map((r) => ({\n                    id: r.id,\n                    category: r.category,\n                    date: new Date(r.Date).toDateString(),\n                  }))}\n                  theaders={tableHeaders\n                    .filter((t) => t.label !== \"\")\n                    .map((h) => h.label)}\n                  title=\"Rental Report\"\n                  ref={(el) => (this.componentRef = el)}\n                /> */}\n              </div>\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <MDBDataTableV5\n              hover\n              entriesOptions={[10, 25, 50, 100]}\n              entries={10}\n              pagesAmount={10}\n              data={{\n                columns: tableHeaders,\n                rows: snapshots.map((snapshot) => {\n                  snapshot.edit = (\n                    <>\n                      <a\n                        className=\"ml-4\"\n                        onClick={() => this.handleShowModal(snapshot)}\n                      >\n                        <Fontawesome\n                          className=\"fas fa-eye\"\n                          style={{ fontSize: 17 }}\n                          name=\"edit\"\n                        />\n                      </a>\n                    </>\n                  );\n                  snapshot.date = new Date(snapshot.date).toDateString();\n\n                  return snapshot;\n                }),\n              }}\n              pagingTop\n              searchBottom={false}\n            />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleShowModal(snapshot) {\n    this.setState({ snapshot, show: true });\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/snapshot\", { headers: auth }).then(\n      ({ data }) => {\n        this.setState({\n          snapshots: data,\n        });\n      }\n    );\n  }\n}\n\nexport default Snapshot;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/index.js",["335"],"import React, { useContext, useEffect, useRef } from \"react\";\n\nimport Navigation from \"./Navigation\";\nimport NavBar from \"./NavBar\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\nimport { ConfigContext } from \"../../contexts/ConfigContext\";\nimport * as actionType from \"../../store/actions\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"jodit/build/jodit.min.css\";\n\nconst AdminLayout = ({ children }) => {\n  const windowSize = useWindowSize();\n  const ref = useRef();\n  const configContext = useContext(ConfigContext);\n\n  const { collapseMenu, layout, subLayout, headerFixedLayout, configBlock } =\n    configContext.state;\n  const { dispatch } = configContext;\n\n  useOutsideClick(ref, () => {\n    if (collapseMenu) {\n      dispatch({ type: actionType.COLLAPSE_MENU });\n    }\n  });\n\n  useEffect(() => {\n    if (\n      windowSize.width > 992 &&\n      windowSize.width <= 1024 &&\n      layout !== \"horizontal\"\n    ) {\n      dispatch({ type: actionType.COLLAPSE_MENU });\n    }\n\n    if (layout === \"horizontal\" && windowSize.width < 992) {\n      dispatch({ type: actionType.CHANGE_LAYOUT, layout: \"vertical\" });\n    }\n  }, [dispatch, layout, windowSize]);\n\n  const mobileOutClickHandler = () => {\n    if (windowSize.width < 992 && collapseMenu) {\n      dispatch({ type: actionType.COLLAPSE_MENU });\n    }\n  };\n\n  let mainClass = [\"pcoded-wrapper\"];\n  if (layout === \"horizontal\" && subLayout === \"horizontal-2\") {\n    mainClass = [...mainClass, \"container\"];\n  }\n\n  let common = (\n    <React.Fragment>\n      <Navigation />\n    </React.Fragment>\n  );\n\n  let mainContainer = (\n    <React.Fragment>\n      <NavBar />\n      <div className=\"pcoded-main-container\">\n        <div className={mainClass.join(\" \")}>\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <ToastContainer />\n              <Breadcrumb />\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n\n  if (windowSize.width < 992) {\n    let outSideClass = [\"nav-outside\"];\n    if (collapseMenu) {\n      outSideClass = [...outSideClass, \"mob-backdrop\"];\n    }\n    if (headerFixedLayout) {\n      outSideClass = [...outSideClass, \"mob-fixed\"];\n    }\n\n    common = (\n      <div className={outSideClass.join(\" \")} ref={ref}>\n        {common}\n      </div>\n    );\n\n    mainContainer = (\n      <div className=\"pcoded-outside\" onClick={() => mobileOutClickHandler}>\n        {mainContainer}\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {common}\n      {mainContainer}\n    </React.Fragment>\n  );\n};\n\nexport default AdminLayout;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Progress.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/services/HttpServices.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Shift/NewShiftModal.jsx",["336"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, SubmitBtn } from \"../../components/Form\";\n\nconst NewShiftModal = ({\n  show,\n  setShow,\n  shift,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={shift}\n      validationSchema={schema}\n      onSubmit={(shift, { resetForm }) => {\n        resetForm();\n        handleSubmit(shift);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {shift.id === 0 ? \"New Shift\" : \"Update Shift\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <DateField name=\"time\" label=\"Time\" dateFormat={false} required />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewShiftModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ITV/NewITVModal.jsx",["337"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewITVModal = ({\n  show,\n  setShow,\n  ITV,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={ITV}\n      validationSchema={schema}\n      onSubmit={(ITV, { resetForm }) => {\n        resetForm();\n        handleSubmit(ITV);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {ITV.id === 0 ? \"New ITV\" : \"Update ITV\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewITVModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MHC/NewMHCModal.jsx",["338"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewMHCModal = ({\n  show,\n  setShow,\n  MHC,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={MHC}\n      validationSchema={schema}\n      onSubmit={(MHC, { resetForm }) => {\n        resetForm();\n        handleSubmit(MHC);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {MHC.id === 0 ? \"New MHC\" : \"Update MHC\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewMHCModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/SnapshotModal.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/report/NewModal.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/User/UserModal.jsx",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Breadcrumb/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Spinner.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Container.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Loader/Bar.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/hooks/useOutsideClick.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/hooks/useWindowSize.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/menu-items.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/index.js",["339"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport NavLeft from \"./NavLeft\";\nimport NavRight from \"./NavRight\";\n\nimport { ConfigContext } from \"../../../contexts/ConfigContext\";\nimport * as actionType from \"../../../store/actions\";\n\nconst NavBar = () => {\n  //const [moreToggle, setMoreToggle] = useState(false);\n  const configContext = useContext(ConfigContext);\n  const {\n    collapseMenu,\n    headerBackColor,\n    headerFixedLayout,\n    layout,\n    subLayout,\n  } = configContext.state;\n  const { dispatch } = configContext;\n\n  let headerClass = [\n    \"navbar\",\n    \"pcoded-header\",\n    \"navbar-expand-lg\",\n    headerBackColor,\n  ];\n  if (headerFixedLayout && layout === \"vertical\") {\n    headerClass = [...headerClass, \"headerpos-fixed\"];\n  }\n\n  let toggleClass = [\"mobile-menu\"];\n  if (collapseMenu) {\n    toggleClass = [...toggleClass, \"on\"];\n  }\n\n  const navToggleHandler = () => {\n    dispatch({ type: actionType.COLLAPSE_MENU });\n  };\n\n  // let moreClass = ['mob-toggler'];;\n  // if (layout === 'horizontal') {\n  //     moreClass = [...moreClass, 'd-none'];\n  // }\n  let collapseClass = [\"collapse navbar-collapse\"];\n  // if (moreToggle) {\n  //     //moreClass = [...moreClass, 'on'];\n  //     collapseClass = [...collapseClass, 'd-block']\n  // }\n\n  let navBar = (\n    <React.Fragment>\n      <div className=\"m-header\">\n        <Link\n          to=\"#\"\n          className={toggleClass.join(\" \")}\n          id=\"mobile-collapse\"\n          onClick={navToggleHandler}\n        >\n          <span />\n        </Link>\n        <Link to=\"#\" className=\"b-brand\">\n          <div className=\"b-bg\">\n            <i className=\"feather icon-trending-up\" />\n          </div>\n          <span className=\"b-title\">Datta Able</span>\n        </Link>\n        {/* <Link to='#' className={moreClass.join(' ')} onClick={() => setMoreToggle(!moreToggle)}>\n                    <i className=\"feather icon-more-vertical\"/>\n                </Link> */}\n      </div>\n      <div className={collapseClass.join(\" \")}>\n        <NavRight />\n      </div>\n    </React.Fragment>\n  );\n\n  if (layout === \"horizontal\" && subLayout === \"horizontal-2\") {\n    navBar = <div className=\"container\">{navBar}</div>;\n  }\n\n  return (\n    <React.Fragment>\n      <header className={headerClass.join(\" \")}>{navBar}</header>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/SubmitBtn.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/FieldArrayForm.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/NavLeft/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/NavRight/index.js",["340"],"import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport JwtDecode from \"jwt-decode\";\n\nimport Avatar1 from \"../../../../assets/images/user/avatar-1.jpg\";\n\nclass NavRight extends Component {\n  state = {\n    listOpen: false,\n    user: {},\n  };\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <ul className=\"navbar-nav ml-auto\">\n        <li>\n          <Dropdown alignRight={!this.props.rtlLayout} className=\"drp-user\">\n            <Dropdown.Toggle variant={\"link\"} id=\"dropdown-basic\">\n              <i className=\"icon feather icon-settings\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu alignRight className=\"profile-notification\">\n              <div className=\"pro-head\">\n                <img src={Avatar1} className=\"img-radius\" alt=\"User Profile\" />\n                <span>{user.name}</span>\n                <a\n                  onClick={this.handleLogout}\n                  className=\"dud-logout\"\n                  title=\"Logout\"\n                >\n                  <i className=\"feather icon-log-out\" />\n                </a>\n              </div>\n              <ul className=\"pro-body\">\n                <li>\n                  <a href=\"/user/profile\" className=\"dropdown-item\">\n                    <i className=\"feather icon-user\" /> Profile\n                  </a>\n                </li>\n\n                <li>\n                  <a href=\"/auth/changepassword\" className=\"dropdown-item\">\n                    <i className=\"feather icon-lock\" /> Change Password\n                  </a>\n                </li>\n              </ul>\n            </Dropdown.Menu>\n          </Dropdown>\n        </li>\n      </ul>\n    );\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/auth/signin\";\n  };\n  componentDidMount = () => {\n    const token = localStorage.getItem(\"token\");\n\n    try {\n      const user = JwtDecode(token);\n\n      this.setState({ user });\n    } catch (error) {\n      window.location.href = \"/auth/signin\";\n    }\n  };\n}\n\nexport default NavRight;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/DateField.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/UploadFileField.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/MultiSelectField.js",["341"],"import React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport Select from \"react-select\";\nimport FontAwesome from \"react-fontawesome\";\n\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\n\nconst MulitSelectField = ({\n  name,\n  options,\n  label,\n  required,\n  show,\n  onShow,\n  ...otherProps\n}) => {\n  const { setFieldTouched, touched, errors, setFieldValue } =\n    useFormikContext();\n\n  return (\n    <FormGroup>\n      <FormLabel>\n        {label} {required && <span className=\"text-danger\">*</span>}\n      </FormLabel>\n      <Select\n        options={options}\n        onChange={(e) => setFieldValue(name, e)}\n        onBlur={() => setFieldTouched(name)}\n        {...otherProps}\n        isMulti\n      />\n      {show && (\n        <a className=\"link mb-5\" onClick={onShow}>\n          <FontAwesome name=\"fas fa-plus-circle\" />\n          New customer\n        </a>\n      )}\n      {errors[name] && touched[name] ? (\n        <div className=\"text-danger\">{errors[name]}</div>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default MulitSelectField;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/SelectField.js",["342"],"import React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport Select from \"react-select\";\nimport FontAwesome from \"react-fontawesome\";\n\nimport { FormGroup, FormLabel } from \"react-bootstrap\";\n\nconst SelectField = ({\n  name,\n  options,\n  label,\n  required,\n  show,\n  onShow,\n  isDisabled,\n  ...otherProps\n}) => {\n  const { setFieldTouched, touched, errors, values, setFieldValue } =\n    useFormikContext();\n\n  return (\n    <FormGroup>\n      <FormLabel>\n        {label} {required && <span className=\"text-danger\">*</span>}\n      </FormLabel>\n      <Select\n        value={options.filter((f) => f.value === values[name])}\n        isDisabled={isDisabled}\n        options={options}\n        onChange={(e) => setFieldValue(name, e.value)}\n        onBlur={() => setFieldTouched(name)}\n        {...otherProps}\n      />\n      {show && (\n        <a className=\"link mb-5\" onClick={onShow}>\n          <FontAwesome name=\"fas fa-plus-circle\" />\n          New customer\n        </a>\n      )}\n      {errors[name] && touched[name] ? (\n        <div className=\"text-danger\">{errors[name]}</div>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default SelectField;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/TextAreaField.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavLogo/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/NavBar/NavLeft/NavSearch/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavGroup/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavCollapse/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/components/Form/TextField.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavBadge/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/layouts/AdminLayout/Navigation/NavContent/NavIcon/index.js",[],"/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RS/NewRSModal.jsx",["343"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewRSModal = ({\n  show,\n  setShow,\n  RS,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={RS}\n      validationSchema={schema}\n      onSubmit={(RS, { resetForm }) => {\n        resetForm();\n        handleSubmit(RS);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {RS.id === 0 ? \"New RS\" : \"Update RS\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewRSModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/Forklift/NewForkliftModal.jsx",["344"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewForkliftModal = ({\n  show,\n  setShow,\n  forklift,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={forklift}\n      validationSchema={schema}\n      onSubmit={(forklift, { resetForm }) => {\n        resetForm();\n        handleSubmit(forklift);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {forklift.id === 0 ? \"New Forklift\" : \"Update Forklift\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewForkliftModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/ECH/NewECHModal.jsx",["345"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewECHModal = ({\n  show,\n  setShow,\n  ECH,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={ECH}\n      validationSchema={schema}\n      onSubmit={(ECH, { resetForm }) => {\n        resetForm();\n        handleSubmit(ECH);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {ECH.id === 0 ? \"New ECH\" : \"Update ECH\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewECHModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/RTG/NewRTGModal.jsx",["346"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewRTGModal = ({\n  show,\n  setShow,\n  RTG,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={RTG}\n      validationSchema={schema}\n      onSubmit={(RTG, { resetForm }) => {\n        resetForm();\n        handleSubmit(RTG);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {RTG.id === 0 ? \"New RTG\" : \"Update RTG\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewRTGModal;\n","/home/abdisalam/Projects/Web/Incident/ClientApp/src/views/MC/NewMCModal.jsx",["347"],"import React from \"react\";\nimport { Formik } from \"formik\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TextField, DateField, TextAreaField, SubmitBtn } from \"../../components/Form\";\n\nconst NewMCModal = ({\n  show,\n  setShow,\n  MC,\n  schema,\n  handleSubmit,\n}) => {\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={MC}\n      validationSchema={schema}\n      onSubmit={(MC, { resetForm }) => {\n        resetForm();\n        handleSubmit(MC);\n      }}\n    >\n      {() => (\n        <>\n          <Modal show={show}>\n            <Modal.Header>\n              <Modal.Title>\n                {MC.id === 0 ? \"New MC\" : \"Update MC\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextField name=\"name\" label=\"Name\" required />\n              <TextAreaField name=\"description\" label=\"description\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={() => setShow(false)} className=\"btn-secondary\">\n                Close\n              </Button>\n              <SubmitBtn />\n            </Modal.Footer>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewMCModal;\n",{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","severity":1,"message":"353","line":9,"column":10,"nodeType":"354","messageId":"355","endLine":9,"endColumn":15},{"ruleId":"352","severity":1,"message":"356","line":285,"column":11,"nodeType":"354","messageId":"355","endLine":285,"endColumn":15},{"ruleId":"352","severity":1,"message":"357","line":9,"column":10,"nodeType":"354","messageId":"355","endLine":9,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":124,"column":23,"nodeType":"360","endLine":127,"endColumn":24},{"ruleId":"358","severity":1,"message":"359","line":146,"column":23,"nodeType":"360","endLine":149,"endColumn":24},{"ruleId":"352","severity":1,"message":"361","line":13,"column":8,"nodeType":"354","messageId":"355","endLine":13,"endColumn":17},{"ruleId":"358","severity":1,"message":"359","line":204,"column":23,"nodeType":"360","endLine":207,"endColumn":24},{"ruleId":"358","severity":1,"message":"359","line":171,"column":23,"nodeType":"360","endLine":174,"endColumn":24},{"ruleId":"358","severity":1,"message":"359","line":131,"column":23,"nodeType":"360","endLine":134,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":282,"column":42,"nodeType":"364","messageId":"365","endLine":282,"endColumn":44},{"ruleId":"358","severity":1,"message":"359","line":126,"column":23,"nodeType":"360","endLine":129,"endColumn":24},{"ruleId":"358","severity":1,"message":"359","line":93,"column":23,"nodeType":"360","endLine":96,"endColumn":24},{"ruleId":"352","severity":1,"message":"366","line":21,"column":63,"nodeType":"354","messageId":"355","endLine":21,"endColumn":74},{"ruleId":"352","severity":1,"message":"367","line":5,"column":10,"nodeType":"354","messageId":"355","endLine":5,"endColumn":19},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},{"ruleId":"352","severity":1,"message":"369","line":4,"column":8,"nodeType":"354","messageId":"355","endLine":4,"endColumn":15},{"ruleId":"358","severity":1,"message":"359","line":27,"column":17,"nodeType":"360","endLine":31,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":33,"column":9,"nodeType":"360","endLine":33,"endColumn":51},{"ruleId":"358","severity":1,"message":"359","line":35,"column":9,"nodeType":"360","endLine":35,"endColumn":51},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},{"ruleId":"352","severity":1,"message":"368","line":5,"column":21,"nodeType":"354","messageId":"355","endLine":5,"endColumn":30},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'JwtDecode' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'configBlock' is assigned a value but never used.","'TextField' is defined but never used.","'DateField' is defined but never used.","'NavLeft' is defined but never used.","no-global-assign","no-unsafe-negation"]